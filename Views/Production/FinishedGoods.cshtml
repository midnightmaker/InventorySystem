<!-- ========================================= -->
<!-- Views/Production/FinishedGoods.cshtml -->
@model IEnumerable<InventorySystem.Models.FinishedGood>
@{
  ViewData["Title"] = "Finished Goods";
}

<div class="d-flex justify-content-between align-items-center mb-4">
  <h1><i class="fas fa-box"></i> Finished Goods</h1>
  <div class="btn-group">
    <a href="/Production/CreateFinishedGood" class="btn btn-success">
      <i class="fas fa-plus"></i> Create Finished Good
    </a>
    <a href="/Production" class="btn btn-outline-secondary">
      <i class="fas fa-industry"></i> Productions
    </a>
    <a href="/Production/BuildBom" class="btn btn-outline-primary">
      <i class="fas fa-hammer"></i> Build BOM
    </a>
  </div>
</div>

@if (TempData["SuccessMessage"] != null)
{
  <div class="alert alert-success alert-dismissible fade show">
    @TempData["SuccessMessage"]
    <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
  </div>
}

@if (TempData["ErrorMessage"] != null)
{
  <div class="alert alert-danger alert-dismissible fade show">
    @TempData["ErrorMessage"]
    <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
  </div>
}

<div class="card">
  <div class="card-header">
    <h5><i class="fas fa-list"></i> Finished Goods Inventory</h5>
  </div>
  <div class="card-body">
    @if (Model?.Any() == true)
    {
      <div class="table-responsive">
        <table class="table table-striped table-hover">
          <thead class="table-dark">
            <tr>
              <th>Part Number</th>
              <th>Description</th>
              <th>Current Stock</th>
              <th>Unit Cost</th>
              <th>Selling Price</th>
              <th>Total Value</th>
              <th>Actions</th>
            </tr>
          </thead>
          <tbody>
            @foreach (var finishedGood in Model)
            {
              <tr class="@(finishedGood.IsLowStock ? "table-warning" : "")">
                <td>
                  <strong>@finishedGood.PartNumber</strong>
                  @if (finishedGood.IsLowStock)
                  {
                    <i class="fas fa-exclamation-triangle text-warning" title="Low Stock"></i>
                  }
                </td>
                <td>@finishedGood.Description</td>
                <td>
                  <span class="badge bg-@(finishedGood.IsLowStock ? "warning" : "primary")">
                    @finishedGood.CurrentStock
                  </span>
                  @if (finishedGood.MinimumStock > 0)
                  {
                    <small class="text-muted">(Min: @finishedGood.MinimumStock)</small>
                  }
                </td>
                <td>@finishedGood.UnitCost.ToString("C")</td>
                <td>@finishedGood.SellingPrice.ToString("C")</td>
                <td>@finishedGood.TotalValue.ToString("C")</td>
                <td>
                  <div class="btn-group btn-group-sm">
                    <a href="/Production/FinishedGoodDetails/@finishedGood.Id" class="btn btn-outline-primary">
                      <i class="fas fa-eye"></i> Details
                    </a>
                    <a href="/Production/EditFinishedGood/@finishedGood.Id" class="btn btn-outline-secondary">
                      <i class="fas fa-edit"></i> Edit
                    </a>
                  </div>
                </td>
              </tr>
            }
          </tbody>
        </table>
      </div>

      <div class="row mt-4">
        <div class="col-md-6">
          <div class="card bg-light">
            <div class="card-body">
              <h6>Total Items: <span class="badge bg-primary">@Model.Count()</span></h6>
              <h6>Total Stock: <span class="badge bg-info">@Model.Sum(fg => fg.CurrentStock)</span></h6>
              <h6>Total Value: <span class="badge bg-success">@Model.Sum(fg => fg.TotalValue).ToString("C")</span></h6>
            </div>
          </div>
        </div>
        <div class="col-md-6">
          @if (Model.Any(fg => fg.IsLowStock))
          {
            <div class="card border-warning">
              <div class="card-body">
                <h6><i class="fas fa-exclamation-triangle text-warning"></i> Low Stock Items</h6>
                <p class="mb-0">@Model.Count(fg => fg.IsLowStock) item(s) below minimum stock level</p>
              </div>
            </div>
          }
        </div>
      </div>
    }
    else
    {
      <div class="text-center py-5">
        <i class="fas fa-box fa-3x text-muted mb-3"></i>
        <h4 class="text-muted">No Finished Goods</h4>
        <p class="text-muted">Create finished goods to track your production inventory.</p>
        <a href="/Production/CreateFinishedGood" class="btn btn-success">
          <i class="fas fa-plus"></i> Create Your First Finished Good
        </a>
      </div>
    }
  </div>
</div>
