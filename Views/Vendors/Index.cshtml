@* Views/Vendors/Index.cshtml - Enhanced with proper search examples and collapsible search *@
@model IEnumerable<InventorySystem.Models.Vendor>

@{
  ViewData["Title"] = "Vendors";
  var searchTerm = ViewBag.SearchTerm as string;
  var activeOnly = ViewBag.ActiveOnly as bool? ?? true;
}

<div class="container-fluid">
  <!-- Add this button to the existing header section -->
  <div class="d-flex justify-content-between align-items-center mb-4">
    <h2><i class="fas fa-truck"></i> Vendors</h2>
    <div>
        <a asp-action="BulkUpload" class="btn btn-outline-primary me-2">
            <i class="fas fa-upload"></i> Bulk Upload
        </a>
        <a asp-action="Create" class="btn btn-primary">
            <i class="fas fa-plus"></i> Add Vendor
        </a>
    </div>
  </div>

  <!-- Collapsible Search Form with Examples -->
  <div class="card mb-4">
    <div class="card-header">
      <h6 class="mb-0">
        <button class="btn btn-link text-decoration-none p-0 text-start w-100"
                type="button"
                data-bs-toggle="collapse"
                data-bs-target="#searchCollapse"
                aria-expanded="false"
                aria-controls="searchCollapse">
          <i class="fas fa-search"></i> Search Vendors
          <i class="fas fa-chevron-down float-end"></i>
        </button>
      </h6>
    </div>
    <div class="collapse" id="searchCollapse">
      <div class="card-body">
        <!-- Search Examples Section -->
        <div class="row mb-4 p-3 bg-light border rounded">
          <div class="col-12">
            <h6><i class="fas fa-lightbulb text-info"></i> Search Examples</h6>
          </div>
          <div class="col-md-6">
            <h6 class="small">Wildcard Examples:</h6>
            <ul class="list-unstyled small">
              <li><code>crystal*</code> - Find vendors starting with "crystal"</li>
              <li><code>*supply</code> - Find vendors ending with "supply"</li>
              <li><code>*tech*</code> - Find vendors containing "tech"</li>
              <li><code>?BC Corp</code> - Find "ABC Corp", "XBC Corp", etc.</li>
            </ul>
          </div>
          <div class="col-md-6">
            <h6 class="small">Search Fields:</h6>
            <ul class="list-unstyled small">
              <li><i class="fas fa-building"></i> Company Name</li>
              <li><i class="fas fa-user"></i> Contact Name</li>
              <li><i class="fas fa-barcode"></i> Vendor Code</li>
              <li><i class="fas fa-envelope"></i> Contact Email</li>
            </ul>
          </div>
        </div>

        <!-- Search Form -->
        <form method="get" class="row g-3">
          <div class="col-md-8">
            <label for="search" class="form-label">Search Term</label>
            <input type="text"
                   class="form-control"
                   id="search"
                   name="search"
                   value="@searchTerm"
                   placeholder="Enter search term with wildcards (e.g., crystal*, *supply, ?BC Corp)">
            <div class="form-text">
              <strong>Wildcard Support:</strong>
              Use <code>*</code> for multiple characters (crystal* finds "Crystal Supply", "Crystal Tech") |
              Use <code>?</code> for single character (?BC finds "ABC", "XBC")
            </div>
          </div>
          <div class="col-md-2">
            <label class="form-label">&nbsp;</label>
            <div class="form-check">
              <input class="form-check-input"
                     type="checkbox"
                     id="activeOnly"
                     name="activeOnly"
                     value="true"
                     @(activeOnly ? "checked" : "")>
              <label class="form-check-label" for="activeOnly">
                Active Only
              </label>
            </div>
          </div>
          <div class="col-md-2">
            <label class="form-label">&nbsp;</label>
            <div class="d-grid">
              <button type="submit" class="btn btn-primary">
                <i class="fas fa-search"></i> Search
              </button>
            </div>
          </div>
        </form>
      </div>
    </div>
  </div>

  <!-- Search Results Summary -->
  @if (!string.IsNullOrEmpty(searchTerm))
  {
    <div class="alert alert-info">
      <i class="fas fa-info-circle"></i>
      Found <strong>@Model.Count()</strong> vendor(s) matching "<strong>@searchTerm</strong>"
      @if (activeOnly)
      {
        <span>(Active vendors only)</span>
      }
      <a href="@Url.Action("Index")" class="btn btn-sm btn-outline-secondary ms-2">
        <i class="fas fa-times"></i> Clear Search
      </a>
    </div>
  }

  <!-- Vendors Table -->
  <div class="card">
    <div class="card-header">
      <h5 class="mb-0">
        <i class="fas fa-list"></i> Vendor List
        <span class="badge bg-primary ms-2">@Model.Count() vendors</span>
      </h5>
    </div>
    <div class="card-body">
      @if (Model.Any())
      {
        <div class="table-responsive">
          <table class="table table-striped table-hover">
            <thead class="table-dark">
              <tr>
                <th>Company Name</th>
                <th>Vendor Code</th>
                <th>Contact</th>
                <th>Status</th>
                <th>Rating</th>
                <th>Actions</th>
              </tr>
            </thead>
            <tbody>
              @foreach (var vendor in Model)
              {
                <tr class="@(!vendor.IsActive ? "table-secondary" : "") vendor-row"
                    data-vendor-id="@vendor.Id"
                    style="cursor: pointer;">
                  <td>
                    <div>
                      <strong>@vendor.CompanyName</strong>
                      @if (vendor.IsPreferred)
                      {
                        <span class="badge bg-warning text-dark ms-2">Preferred</span>
                      }
                    </div>
                    @if (!string.IsNullOrEmpty(vendor.VendorCode))
                    {
                      <small class="text-muted">Code: @vendor.VendorCode</small>
                    }
                  </td>
                  <td>
                    @if (!string.IsNullOrEmpty(vendor.VendorCode))
                    {
                      <code>@vendor.VendorCode</code>
                    }
                    else
                    {
                      <span class="text-muted">-</span>
                    }
                  </td>
                  <td>
                    @if (!string.IsNullOrEmpty(vendor.ContactName))
                    {
                      <div>@vendor.ContactName</div>
                    }
                    @if (!string.IsNullOrEmpty(vendor.ContactEmail))
                    {
                      <small class="text-muted">@vendor.ContactEmail</small>
                    }
                    @if (string.IsNullOrEmpty(vendor.ContactName) && string.IsNullOrEmpty(vendor.ContactEmail))
                    {
                      <span class="text-muted">No contact info</span>
                    }
                  </td>
                  <td>
                    @if (vendor.IsActive)
                    {
                      <span class="badge bg-success">Active</span>
                    }
                    else
                    {
                      <span class="badge bg-secondary">Inactive</span>
                    }
                  </td>
                  <td>
                    <div class="d-flex align-items-center">
                      <span class="me-2">@vendor.OverallRating.ToString("F1")</span>
                      @for (int i = 1; i <= 5; i++)
                      {
                        <i class="fas fa-star @(i <= vendor.OverallRating ? "text-warning" : "text-muted")"></i>
                      }
                    </div>
                  </td>
                  <td>
                    <div class="btn-group btn-group-sm" role="group">
                      <a href="@Url.Action("Details", new { id = vendor.Id })"
                         class="btn btn-outline-primary" title="View Details">
                        <i class="fas fa-eye"></i>
                      </a>
                      <a href="@Url.Action("Edit", new { id = vendor.Id })"
                         class="btn btn-outline-secondary" title="Edit">
                        <i class="fas fa-edit"></i>
                      </a>
                      <a href="@Url.Action("ManageItems", new { id = vendor.Id })"
                         class="btn btn-outline-info" title="Manage Items">
                        <i class="fas fa-boxes"></i>
                      </a>
                    </div>
                  </td>
                </tr>
              }
            </tbody>
          </table>
        </div>
      }
      else
      {
        <div class="text-center py-5">
          <i class="fas fa-building fa-3x text-muted mb-3"></i>
          <h4 class="text-muted">
            @if (!string.IsNullOrEmpty(searchTerm))
            {
              <span>No vendors found matching "@searchTerm"</span>
            }
            else
            {
              <span>No vendors found</span>
            }
          </h4>
          <p class="text-muted">
            @if (!string.IsNullOrEmpty(searchTerm))
            {
              <span>Try adjusting your search terms or using wildcards like "*supply" or "crystal*"</span>
            }
            else
            {
              <span>Start by creating your first vendor.</span>
            }
          </p>
          <a href="@Url.Action("Create")" class="btn btn-success">
            <i class="fas fa-plus"></i> Create First Vendor
          </a>
        </div>
      }
    </div>
  </div>
</div>

<style>
  .vendor-row:hover {
    background-color: rgba(0, 123, 255, 0.1) !important;
    transition: background-color 0.2s ease;
  }

  .vendor-row {
    transition: background-color 0.2s ease;
  }

  .collapse .card-body {
    border-top: 1px solid #dee2e6;
  }

  .btn-link {
    color: inherit !important;
  }

    .btn-link:hover {
      color: inherit !important;
    }
</style>

<script>
  document.addEventListener('DOMContentLoaded', function() {
      // Add click functionality to vendor rows
      const vendorRows = document.querySelectorAll('.vendor-row');

      vendorRows.forEach(row => {
          row.addEventListener('click', function(e) {
              // Don't navigate if clicking on links or buttons
              if (e.target.tagName === 'A' || e.target.tagName === 'BUTTON' ||
                  e.target.closest('a') || e.target.closest('button')) {
                  return;
              }

              const vendorId = this.getAttribute('data-vendor-id');
              if (vendorId) {
                  window.location.href = '@Url.Action("Details", "Vendors")'.replace('Details', 'Details') + '/' + vendorId;
              }
          });

          // Add visual feedback for clickable rows
          row.addEventListener('mouseenter', function() {
              this.style.transform = 'scale(1.001)';
          });

          row.addEventListener('mouseleave', function() {
              this.style.transform = 'scale(1)';
          });
      });

      // Add keyboard navigation support
      vendorRows.forEach((row, index) => {
          row.setAttribute('tabindex', '0');

          row.addEventListener('keydown', function(e) {
              if (e.key === 'Enter' || e.key === ' ') {
                  e.preventDefault();
                  const vendorId = this.getAttribute('data-vendor-id');
                  if (vendorId) {
                      window.location.href = '@Url.Action("Details", "Vendors")'.replace('Details', 'Details') + '/' + vendorId;
                  }
              } else if (e.key === 'ArrowDown') {
                  e.preventDefault();
                  const nextRow = vendorRows[index + 1];
                  if (nextRow) nextRow.focus();
              } else if (e.key === 'ArrowUp') {
                  e.preventDefault();
                  const prevRow = vendorRows[index - 1];
                  if (prevRow) prevRow.focus();
              }
          });
      });

      // Auto-expand search if there's a search term
      @if (!string.IsNullOrEmpty(searchTerm))
      {
          <text>
          var searchCollapse = new bootstrap.Collapse(document.getElementById('searchCollapse'), {
              show: true
          });
          </text>
      }

      // Update chevron icon when collapse state changes
      const collapseElement = document.getElementById('searchCollapse');
      const chevronIcon = document.querySelector('[data-bs-target="#searchCollapse"] .fa-chevron-down');

      collapseElement.addEventListener('show.bs.collapse', function () {
          chevronIcon.classList.remove('fa-chevron-down');
          chevronIcon.classList.add('fa-chevron-up');
      });

      collapseElement.addEventListener('hide.bs.collapse', function () {
          chevronIcon.classList.remove('fa-chevron-up');
          chevronIcon.classList.add('fa-chevron-down');
      });
  });
</script>