@model InventorySystem.ViewModels.CollectionsViewModel
@{
    ViewData["Title"] = "Collections Management";
}

<div class="d-flex justify-content-between align-items-center mb-4">
    <h1><i class="fas fa-phone"></i> Collections Management</h1>
    <div class="btn-group">
        <a href="@Url.Action("Index")" class="btn btn-outline-secondary">
            <i class="fas fa-arrow-left"></i> Back to Dashboard
        </a>
        <button class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#bulkActionModal">
            <i class="fas fa-tasks"></i> Bulk Actions
        </button>
        <button class="btn btn-outline-success" onclick="exportCollections()">
            <i class="fas fa-file-excel"></i> Export
        </button>
    </div>
</div>

@if (TempData["SuccessMessage"] != null)
{
    <div class="alert alert-success alert-dismissible fade show">
        <i class="fas fa-check-circle"></i> @TempData["SuccessMessage"]
        <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
    </div>
}

<!-- Collection Summary -->
<div class="row mb-4">
    <div class="col-md-3">
        <div class="card bg-danger text-white">
            <div class="card-body text-center">
                <h4>@Model.HighPriorityCount</h4>
                <p class="mb-0">High Priority</p>
                <small>Immediate attention needed</small>
            </div>
        </div>
    </div>
    <div class="col-md-3">
        <div class="card bg-warning text-dark">
            <div class="card-body text-center">
                <h4>@Model.MediumPriorityCount</h4>
                <p class="mb-0">Medium Priority</p>
                <small>Follow up soon</small>
            </div>
        </div>
    </div>
    <div class="col-md-3">
        <div class="card bg-info text-white">
            <div class="card-body text-center">
                <h4>@Model.LowPriorityCount</h4>
                <p class="mb-0">Low Priority</p>
                <small>Monitor closely</small>
            </div>
        </div>
    </div>
    <div class="col-md-3">
        <div class="card bg-primary text-white">
            <div class="card-body text-center">
                <h4>@Model.TotalOverdueAmount.ToString("C")</h4>
                <p class="mb-0">Total Overdue</p>
                <small>@Model.CollectionItems.Count items</small>
            </div>
        </div>
    </div>
</div>

<!-- Collections Queue -->
<div class="row">
    <div class="col-md-12">
        <ul class="nav nav-tabs" id="collectionTabs" role="tablist">
            <li class="nav-item" role="presentation">
                <button class="nav-link active" data-bs-toggle="tab" data-bs-target="#high-priority-tab" type="button">
                    <i class="fas fa-exclamation-triangle text-danger"></i> High Priority (@Model.HighPriorityCount)
                </button>
            </li>
            <li class="nav-item" role="presentation">
                <button class="nav-link" data-bs-toggle="tab" data-bs-target="#medium-priority-tab" type="button">
                    <i class="fas fa-clock text-warning"></i> Medium Priority (@Model.MediumPriorityCount)
                </button>
            </li>
            <li class="nav-item" role="presentation">
                <button class="nav-link" data-bs-toggle="tab" data-bs-target="#low-priority-tab" type="button">
                    <i class="fas fa-info-circle text-info"></i> Low Priority (@Model.LowPriorityCount)
                </button>
            </li>
            <li class="nav-item" role="presentation">
                <button class="nav-link" data-bs-toggle="tab" data-bs-target="#all-tab" type="button">
                    <i class="fas fa-list"></i> All Items (@Model.CollectionItems.Count)
                </button>
            </li>
        </ul>
        
        <div class="tab-content border border-top-0" id="collectionTabContent">
            <!-- High Priority Tab -->
            <div class="tab-pane fade show active p-3" id="high-priority-tab">
                @await Html.PartialAsync("_CollectionItemsTable", Model.HighPriorityItems)
            </div>
            
            <!-- Medium Priority Tab -->
            <div class="tab-pane fade p-3" id="medium-priority-tab">
                @await Html.PartialAsync("_CollectionItemsTable", Model.MediumPriorityItems)
            </div>
            
            <!-- Low Priority Tab -->
            <div class="tab-pane fade p-3" id="low-priority-tab">
                @await Html.PartialAsync("_CollectionItemsTable", Model.LowPriorityItems)
            </div>
            
            <!-- All Items Tab -->
            <div class="tab-pane fade p-3" id="all-tab">
                @await Html.PartialAsync("_CollectionItemsTable", Model.CollectionItems)
            </div>
        </div>
    </div>
</div>

<!-- Collection Action Modal -->
<div class="modal fade" id="collectionActionModal" tabindex="-1" aria-labelledby="collectionActionModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="collectionActionModalLabel">
                    <i class="fas fa-phone"></i> Record Collection Action
                </h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <form id="collectionActionForm">
                <div class="modal-body">
                    <input type="hidden" id="actionSaleId" name="saleId" />
                    
                    <div class="row mb-3">
                        <div class="col-md-6">
                            <label class="form-label">Invoice:</label>
                            <input type="text" id="actionSaleNumber" class="form-control" readonly />
                        </div>
                        <div class="col-md-6">
                            <label class="form-label">Customer:</label>
                            <input type="text" id="actionCustomerName" class="form-control" readonly />
                        </div>
                    </div>
                    
                    <div class="row mb-3">
                        <div class="col-md-6">
                            <label for="actionType" class="form-label">Action Type *</label>
                            <select id="actionType" name="actionType" class="form-select" required>
                                <option value="">Select action...</option>
                                <option value="EmailReminder">Email Reminder</option>
                                <option value="PhoneCall">Phone Call</option>
                                <option value="LetterSent">Letter Sent</option>
                                <option value="PaymentPlan">Payment Plan Setup</option>
                                <option value="LegalNotice">Legal Notice</option>
                                <option value="CollectionAgency">Collection Agency</option>
                            </select>
                        </div>
                        <div class="col-md-6">
                            <label for="contactMethod" class="form-label">Contact Method *</label>
                            <select id="contactMethod" name="contactMethod" class="form-select" required>
                                <option value="">Select method...</option>
                                <option value="Email">Email</option>
                                <option value="Phone">Phone</option>
                                <option value="Mail">Mail</option>
                                <option value="InPerson">In Person</option>
                                <option value="TextMessage">Text Message</option>
                            </select>
                        </div>
                    </div>
                    
                    <div class="row mb-3">
                        <div class="col-md-6">
                            <label for="contactPerson" class="form-label">Contact Person</label>
                            <input type="text" id="contactPerson" name="contactPerson" class="form-control" placeholder="Person contacted" />
                        </div>
                        <div class="col-md-6">
                            <label for="followUpDate" class="form-label">Follow-up Date</label>
                            <input type="date" id="followUpDate" name="followUpDate" class="form-control" />
                        </div>
                    </div>
                    
                    <div class="mb-3">
                        <label for="actionNotes" class="form-label">Notes *</label>
                        <textarea id="actionNotes" name="notes" class="form-control" rows="4" required 
                                  placeholder="Detail what action was taken, customer response, etc."></textarea>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button type="submit" class="btn btn-primary">
                        <i class="fas fa-save"></i> Record Action
                    </button>
                </div>
            </form>
        </div>
    </div>
</div>

<!-- Bulk Action Modal -->
<div class="modal fade" id="bulkActionModal" tabindex="-1" aria-labelledby="bulkActionModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="bulkActionModalLabel">
                    <i class="fas fa-tasks"></i> Bulk Collection Actions
                </h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <div class="list-group">
                    <button type="button" class="list-group-item list-group-item-action" onclick="bulkEmailReminders()">
                        <i class="fas fa-envelope text-primary"></i>
                        <strong>Send Email Reminders</strong>
                        <br><small class="text-muted">Send automated email reminders to all overdue customers</small>
                    </button>
                    <button type="button" class="list-group-item list-group-item-action" onclick="generateStatements()">
                        <i class="fas fa-file-invoice text-info"></i>
                        <strong>Generate Statements</strong>
                        <br><small class="text-muted">Create account statements for customers with balances</small>
                    </button>
                    <button type="button" class="list-group-item list-group-item-action" onclick="markForCollection()">
                        <i class="fas fa-exclamation-triangle text-warning"></i>
                        <strong>Mark for Collection Agency</strong>
                        <br><small class="text-muted">Flag severely overdue accounts for external collection</small>
                    </button>
                    <button type="button" class="list-group-item list-group-item-action" onclick="exportCollectionReport()">
                        <i class="fas fa-download text-success"></i>
                        <strong>Export Collection Report</strong>
                        <br><small class="text-muted">Download detailed collection report for analysis</small>
                    </button>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
<script>
// Collection action form
document.getElementById('collectionActionForm').addEventListener('submit', function(e) {
    e.preventDefault();
    
    const formData = new FormData(this);
    const actionData = Object.fromEntries(formData);
    
    // In a real implementation, this would post to a collection action endpoint
    console.log('Collection action recorded:', actionData);
    alert('Collection action recorded successfully!');
    
    bootstrap.Modal.getInstance(document.getElementById('collectionActionModal')).hide();
});

// Functions for collection action modal
function recordCollectionAction(saleId, saleNumber, customerName) {
    document.getElementById('actionSaleId').value = saleId;
    document.getElementById('actionSaleNumber').value = saleNumber;
    document.getElementById('actionCustomerName').value = customerName;
    
    new bootstrap.Modal(document.getElementById('collectionActionModal')).show();
}

// Bulk action functions
function bulkEmailReminders() {
    if (confirm('Send email reminders to all overdue customers?')) {
        if (window.LoadingIndicator && window.LoadingIndicator.isInitialized) {
            window.LoadingIndicator.show('Sending Email Reminders...', 'Processing bulk email notifications');
        }
        
        setTimeout(() => {
            if (window.LoadingIndicator && window.LoadingIndicator.isInitialized) {
                window.LoadingIndicator.hide();
            }
            alert('Email reminders sent successfully!');
            bootstrap.Modal.getInstance(document.getElementById('bulkActionModal')).hide();
        }, 3000);
    }
}

function generateStatements() {
    if (confirm('Generate account statements for all customers with balances?')) {
        window.location.href = '@Url.Action("CustomerStatements")';
    }
}

function markForCollection() {
    if (confirm('Mark severely overdue accounts for collection agency? This is a serious action.')) {
        alert('Accounts marked for collection agency review.');
        bootstrap.Modal.getInstance(document.getElementById('bulkActionModal')).hide();
    }
}

function exportCollectionReport() {
    if (window.LoadingIndicator && window.LoadingIndicator.isInitialized) {
        window.LoadingIndicator.show('Generating Report...', 'Creating collection analysis report');
    }
    
    setTimeout(() => {
        if (window.LoadingIndicator && window.LoadingIndicator.isInitialized) {
            window.LoadingIndicator.hide();
        }
        alert('Collection report generated and downloaded.');
        bootstrap.Modal.getInstance(document.getElementById('bulkActionModal')).hide();
    }, 2000);
}

function exportCollections() {
    if (window.LoadingIndicator && window.LoadingIndicator.isInitialized) {
        window.LoadingIndicator.show('Exporting Collections...', 'Preparing collection data for export');
    }
    
    setTimeout(() => {
        if (window.LoadingIndicator && window.LoadingIndicator.isInitialized) {
            window.LoadingIndicator.hide();
        }
        alert('Collections data exported successfully.');
    }, 2000);
}

// Auto-focus on high priority tab if it has items
document.addEventListener('DOMContentLoaded', function() {
    const highPriorityCount = @Model.HighPriorityCount;
    if (highPriorityCount === 0) {
        // Switch to medium priority if no high priority items
        const mediumPriorityCount = @Model.MediumPriorityCount;
        if (mediumPriorityCount > 0) {
            document.querySelector('[data-bs-target="#medium-priority-tab"]').click();
        } else {
            // Switch to low priority if no medium priority items
            const lowPriorityCount = @Model.LowPriorityCount;
            if (lowPriorityCount > 0) {
                document.querySelector('[data-bs-target="#low-priority-tab"]').click();
            }
        }
    }
});
</script>
}

<style>
.card:hover {
    transform: translateY(-2px);
    transition: transform 0.2s ease;
    box-shadow: 0 4px 8px rgba(0,0,0,0.1);
}

.list-group-item-action:hover {
    background-color: #f8f9fa;
}

.modal-lg {
    max-width: 800px;
}
</style>