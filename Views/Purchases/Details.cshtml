@* Views/Purchases/Details.cshtml - Updated to show vendor information *@
@model InventorySystem.Models.Purchase
@using System.IO

@{
  ViewData["Title"] = $"Purchase Details - {Model.Id}";
}

<div class="container-fluid">
  <div class="d-flex justify-content-between align-items-center mb-4">
    <h2><i class="fas fa-shopping-cart"></i> Purchase Details</h2>
    <div>
      <a href="@Url.Action("Edit", new { id = Model.Id })" class="btn btn-warning">
        <i class="fas fa-edit"></i> Edit
      </a>
      <a href="@Url.Action("Index")" class="btn btn-secondary">
        <i class="fas fa-arrow-left"></i> Back to List
      </a>
    </div>
  </div>

  @if (TempData["SuccessMessage"] != null)
  {
    <div class="alert alert-success alert-dismissible fade show">
      <i class="fas fa-check-circle"></i> @TempData["SuccessMessage"]
      <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
    </div>
  }

  @if (TempData["ErrorMessage"] != null)
  {
    <div class="alert alert-danger alert-dismissible fade show">
      <i class="fas fa-exclamation-circle"></i> @TempData["ErrorMessage"]
      <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
    </div>
  }

  <div class="row">
    <!-- Main Purchase Information -->
    <div class="col-lg-8">
      <div class="card">
        <div class="card-header">
          <h5><i class="fas fa-info-circle"></i> Purchase Information</h5>
        </div>
        <div class="card-body">
          <div class="row">
            <div class="col-md-6">
              <dl class="row">
                <dt class="col-sm-5">Purchase ID:</dt>
                <dd class="col-sm-7">
                  <span class="badge bg-primary">#@Model.Id</span>
                </dd>

                <dt class="col-sm-5">Purchase Date:</dt>
                <dd class="col-sm-7">
                  <i class="fas fa-calendar text-muted"></i>
                  @Model.PurchaseDate.ToString("MM/dd/yyyy")
                </dd>

                <dt class="col-sm-5">Status:</dt>
                <dd class="col-sm-7">
                  @{
                    var statusClass = Model.Status switch
                    {
                      InventorySystem.Models.Enums.PurchaseStatus.Pending => "bg-warning",
                      InventorySystem.Models.Enums.PurchaseStatus.Ordered => "bg-info",
                      InventorySystem.Models.Enums.PurchaseStatus.Shipped => "bg-primary",
                      InventorySystem.Models.Enums.PurchaseStatus.PartiallyReceived => "bg-warning",
                      InventorySystem.Models.Enums.PurchaseStatus.Received => "bg-success",
                      InventorySystem.Models.Enums.PurchaseStatus.Cancelled => "bg-danger",
                      InventorySystem.Models.Enums.PurchaseStatus.Returned => "bg-secondary",
                      _ => "bg-secondary"
                    };
                  }
                  <span class="badge @statusClass">@Model.Status</span>
                </dd>

                @if (!string.IsNullOrEmpty(Model.PurchaseOrderNumber))
                {
                  <dt class="col-sm-5">PO Number:</dt>
                  <dd class="col-sm-7">
                    <i class="fas fa-file-invoice text-muted"></i>
                    @Model.PurchaseOrderNumber
                  </dd>
                }

                <dt class="col-sm-5">Created:</dt>
                <dd class="col-sm-7">
                  <i class="fas fa-clock text-muted"></i>
                  @Model.CreatedDate.ToString("MM/dd/yyyy hh:mm tt")
                </dd>
              </dl>
            </div>
            <div class="col-md-6">
              <dl class="row">
                @if (Model.ExpectedDeliveryDate.HasValue)
                {
                  <dt class="col-sm-6">Expected Delivery:</dt>
                  <dd class="col-sm-6">
                    <i class="fas fa-truck text-info"></i>
                    @Model.ExpectedDeliveryDate.Value.ToString("MM/dd/yyyy")
                  </dd>
                }

                @if (Model.ActualDeliveryDate.HasValue)
                {
                  <dt class="col-sm-6">Actual Delivery:</dt>
                  <dd class="col-sm-6">
                    <i class="fas fa-check-circle text-success"></i>
                    @Model.ActualDeliveryDate.Value.ToString("MM/dd/yyyy")
                  </dd>
                }

                @if (!string.IsNullOrEmpty(Model.ItemVersion))
                {
                  <dt class="col-sm-6">Item Version:</dt>
                  <dd class="col-sm-6">
                    <span class="badge bg-secondary">@Model.ItemVersion</span>
                  </dd>
                }
              </dl>
            </div>
          </div>

          @if (!string.IsNullOrEmpty(Model.Notes))
          {
            <div class="mt-3">
              <h6><i class="fas fa-sticky-note"></i> Notes</h6>
              <div class="card bg-light">
                <div class="card-body">
                  @Model.Notes
                </div>
              </div>
            </div>
          }
        </div>
      </div>

      <!-- Item Information -->
      <div class="card mt-3">
        <div class="card-header">
          <h5><i class="fas fa-cube"></i> Item Information</h5>
        </div>
        <div class="card-body">
          <div class="row">
            <div class="col-md-6">
              <dl class="row">
                <dt class="col-sm-5">Part Number:</dt>
                <dd class="col-sm-7">
                  <strong>@Model.Item.PartNumber</strong>
                </dd>

                <dt class="col-sm-5">Description:</dt>
                <dd class="col-sm-7">@Model.Item.Description</dd>

                <dt class="col-sm-5">Current Stock:</dt>
                <dd class="col-sm-7">
                  <span class="badge bg-info">@Model.Item.CurrentStock</span>
                </dd>
              </dl>
            </div>
            <div class="col-md-6">
              <dl class="row">
                <dt class="col-sm-6">Unit of Measure:</dt>
                <dd class="col-sm-6">@Model.Item.UnitOfMeasure</dd>

                <dt class="col-sm-6">Item Type:</dt>
                <dd class="col-sm-6">
                  <span class="badge bg-secondary">@Model.Item.ItemType</span>
                </dd>

                @if (Model.Item.MinimumStock > 0)
                {
                  <dt class="col-sm-6">Minimum Stock:</dt>
                  <dd class="col-sm-6">
                    <span class="badge bg-warning">@Model.Item.MinimumStock</span>
                  </dd>
                }
              </dl>
            </div>
          </div>
        </div>
      </div>

      <!-- Vendor Information -->
      <div class="card mt-3">
        <div class="card-header">
          <h5><i class="fas fa-building"></i> Vendor Information</h5>
        </div>
        <div class="card-body">
          <div class="row">
            <div class="col-md-6">
              <dl class="row">
                <dt class="col-sm-5">Vendor Name:</dt>
                <dd class="col-sm-7">
                  <strong>@Model.Vendor.CompanyName</strong>
                  @if (!Model.Vendor.IsActive)
                  {
                    <span class="badge bg-danger ms-1">Inactive</span>
                  }
                </dd>

                @if (!string.IsNullOrEmpty(Model.Vendor.VendorCode))
                {
                  <dt class="col-sm-5">Vendor Code:</dt>
                  <dd class="col-sm-7">@Model.Vendor.VendorCode</dd>
                }

                @if (!string.IsNullOrEmpty(Model.Vendor.ContactName))
                {
                  <dt class="col-sm-5">Contact:</dt>
                  <dd class="col-sm-7">@Model.Vendor.ContactName</dd>
                }
              </dl>
            </div>
            <div class="col-md-6">
              <dl class="row">
                @if (!string.IsNullOrEmpty(Model.Vendor.ContactEmail))
                {
                  <dt class="col-sm-5">Email:</dt>
                  <dd class="col-sm-7">
                    <a href="mailto:@Model.Vendor.ContactEmail">@Model.Vendor.ContactEmail</a>
                  </dd>
                }

                @if (!string.IsNullOrEmpty(Model.Vendor.ContactPhone))
                {
                  <dt class="col-sm-5">Phone:</dt>
                  <dd class="col-sm-7">
                    <a href="tel:@Model.Vendor.ContactPhone">@Model.Vendor.ContactPhone</a>
                  </dd>
                }

                @if (!string.IsNullOrEmpty(Model.Vendor.PaymentTerms))
                {
                  <dt class="col-sm-5">Payment Terms:</dt>
                  <dd class="col-sm-7">@Model.Vendor.PaymentTerms</dd>
                }
              </dl>
            </div>
          </div>

          <div class="mt-2">
            <a href="@Url.Action("Details", "Vendors", new { id = Model.VendorId })" class="btn btn-outline-primary btn-sm">
              <i class="fas fa-external-link-alt"></i> View Vendor Details
            </a>
          </div>
        </div>
      </div>

      <!-- Documents -->
      @if (Model.PurchaseDocuments?.Any() == true)
      {
        <div class="card mt-3">
          <div class="card-header d-flex justify-content-between align-items-center">
            <h5><i class="fas fa-paperclip"></i> Purchase Documents</h5>
            <a href="/PurchaseDocuments/Upload?purchaseId=@Model.Id" class="btn btn-success btn-sm">
              <i class="fas fa-upload"></i> Upload Document
            </a>
          </div>
          <div class="card-body">
            <div class="table-responsive">
              <table class="table table-sm">
                <thead>
                  <tr>
                    <th>Document Name</th>
                    <th>Type</th>
                    <th>Size</th>
                    <th>Uploaded</th>
                    <th>Actions</th>
                  </tr>
                </thead>
                <tbody>
                  @foreach (var doc in Model.PurchaseDocuments.OrderByDescending(d => d.UploadedDate))
                  {
                    <tr>
                      <td>
                        <div class="d-flex align-items-center">
                          <i class="@doc.FileTypeIcon me-2"></i>
                          <div>
                            <strong>@doc.DocumentName</strong>
                            @if (!string.IsNullOrEmpty(doc.Description))
                            {
                              <br><small class="text-muted">@doc.Description</small>
                            }
                          </div>
                        </div>
                      </td>
                      <td>
                        <span class="badge bg-secondary">@doc.DocumentType</span>
                      </td>
                      <td>@doc.FileSizeFormatted</td>
                      <td>
                        <small>@doc.UploadedDate.ToString("MM/dd/yyyy")</small>
                      </td>
                      <td>
                        <div class="btn-group btn-group-sm">
                          @{
                            var canPreview = new[] { ".pdf", ".png", ".jpg", ".jpeg", ".gif", ".bmp", ".tiff" }
                                .Contains(System.IO.Path.GetExtension(doc.FileName).ToLowerInvariant());
                          }
                          
                          @if (canPreview)
                          {
                            <button class="btn btn-outline-info" onclick="previewDocument(@doc.Id, '@doc.DocumentName')" title="Preview">
                              <i class="fas fa-eye"></i>
                            </button>
                          }
                          
                          <a href="/PurchaseDocuments/Download/@doc.Id" class="btn btn-outline-primary" title="Download">
                            <i class="fas fa-download"></i>
                          </a>
                        </div>
                      </td>
                    </tr>
                  }
                </tbody>
              </table>
            </div>
          </div>
        </div>
      }
      else
      {
        <div class="card mt-3">
          <div class="card-header d-flex justify-content-between align-items-center">
            <h5><i class="fas fa-paperclip"></i> Purchase Documents</h5>
            <a href="/PurchaseDocuments/Upload?purchaseId=@Model.Id" class="btn btn-success btn-sm">
              <i class="fas fa-upload"></i> Upload Document
            </a>
          </div>
          <div class="card-body text-center py-4">
            <i class="fas fa-file-upload fa-3x text-muted mb-3"></i>
            <h6 class="text-muted">No Documents Uploaded</h6>
            <p class="text-muted">Upload invoices, receipts, purchase orders, and other purchase-related documents.</p>
            <a href="/PurchaseDocuments/Upload?purchaseId=@Model.Id" class="btn btn-outline-success">
              <i class="fas fa-upload"></i> Upload First Document
            </a>
          </div>
        </div>
      }

      <!-- Document Preview Modal -->
      <div class="modal fade" id="documentPreviewModal" tabindex="-1" aria-hidden="true">
          <div class="modal-dialog modal-xl">
              <div class="modal-content">
                  <div class="modal-header">
                      <h5 class="modal-title" id="previewModalTitle">Document Preview</h5>
                      <div class="btn-group btn-group-sm">
                          <button type="button" class="btn btn-outline-secondary" onclick="zoomOut()">
                              <i class="fas fa-search-minus"></i>
                          </button>
                          <button type="button" class="btn btn-outline-secondary" onclick="resetZoom()">
                              <i class="fas fa-compress-arrows-alt"></i>
                          </button>
                          <button type="button" class="btn btn-outline-secondary" onclick="zoomIn()">
                              <i class="fas fa-search-plus"></i>
                          </button>
                      </div>
                      <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                  </div>
                  <div class="modal-body p-0">
                      <div id="previewLoading" class="text-center p-4">
                          <div class="spinner-border text-primary" role="status">
                              <span class="visually-hidden">Loading...</span>
                          </div>
                          <p class="mt-2">Loading document...</p>
                      </div>
                      <iframe id="previewIframe" style="width: 100%; height: 70vh; border: none; display: none;"></iframe>
                  </div>
                  <div class="modal-footer">
                      <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                      <a id="downloadLink" href="#" class="btn btn-primary">
                          <i class="fas fa-download"></i> Download
                      </a>
                  </div>
              </div>
          </div>
      </div>

      @section Scripts {
          <script>
              let currentZoom = 1;
              let currentDocumentId = null;

              function previewDocument(documentId, documentName) {
                  currentDocumentId = documentId;
                  const modal = new bootstrap.Modal(document.getElementById('documentPreviewModal'));
                  const iframe = document.getElementById('previewIframe');
                  const modalTitle = document.getElementById('previewModalTitle');
                  const downloadLink = document.getElementById('downloadLink');
                  const loading = document.getElementById('previewLoading');
                  
                  modalTitle.textContent = `Preview: ${documentName}`;
                  downloadLink.href = `/PurchaseDocuments/Download/${documentId}`;
                  
                  // Show loading, hide iframe
                  loading.style.display = 'block';
                  iframe.style.display = 'none';
                  
                  // Set iframe source
                  iframe.src = `/PurchaseDocuments/GetPreviewData/${documentId}`;
                  
                  // Show modal
                  modal.show();
                  
                  // Handle iframe load
                  iframe.onload = function() {
                      loading.style.display = 'none';
                      iframe.style.display = 'block';
                  };
                  
                  // Handle iframe error
                  iframe.onerror = function() {
                      loading.innerHTML = `
                          <div class="text-center p-4">
                              <i class="fas fa-exclamation-triangle fa-3x text-warning mb-3"></i>
                              <h5>Preview Not Available</h5>
                              <p class="text-muted">This document cannot be previewed in your browser.</p>
                              <a href="/PurchaseDocuments/Download/${documentId}" class="btn btn-primary">
                                  <i class="fas fa-download"></i> Download Document
                              </a>
                          </div>
                      `;
                  };
              }

              function zoomIn() {
                  currentZoom += 0.25;
                  applyZoom();
              }

              function zoomOut() {
                  if (currentZoom > 0.5) {
                      currentZoom -= 0.25;
                      applyZoom();
                  }
              }

              function resetZoom() {
                  currentZoom = 1;
                  applyZoom();
              }

              function applyZoom() {
                  const iframe = document.getElementById('previewIframe');
                  iframe.style.transform = `scale(${currentZoom})`;
                  iframe.style.transformOrigin = 'top left';
              }

              // Reset zoom when modal is closed
              document.getElementById('documentPreviewModal').addEventListener('hidden.bs.modal', function () {
                  currentZoom = 1;
                  applyZoom();
                  document.getElementById('previewIframe').src = '';
              });
          </script>

          <style>
              .btn-group-sm .btn {
                  padding: 0.25rem 0.5rem;
                  font-size: 0.875rem;
              }
              
              .table th {
                  border-top: none;
                  font-weight: 600;
                  font-size: 0.875rem;
              }

              .badge {
                  font-size: 0.75rem;
              }
          </style>
      }
    </div>

    <!-- Purchase Summary -->
    <div class="col-lg-4">
      <div class="card">
        <div class="card-header">
          <h5><i class="fas fa-calculator"></i> Purchase Summary</h5>
        </div>
        <div class="card-body">
          <dl class="row">
            <dt class="col-sm-6">Quantity:</dt>
            <dd class="col-sm-6">
              <span class="badge bg-info">@Model.QuantityPurchased</span>
            </dd>

            <dt class="col-sm-6">Cost Per Unit:</dt>
            <dd class="col-sm-6">
              <span class="text-success">$@Model.CostPerUnit.ToString("N6")</span>
            </dd>

            <dt class="col-sm-6">Subtotal:</dt>
            <dd class="col-sm-6">
              <span class="text-success">$@Model.TotalCost.ToString("N6")</span>
            </dd>

            @if (Model.ShippingCost > 0)
            {
              <dt class="col-sm-6">Shipping:</dt>
              <dd class="col-sm-6">
                <span class="text-info">$@Model.ShippingCost.ToString("N6")</span>
              </dd>
            }

            @if (Model.TaxAmount > 0)
            {
              <dt class="col-sm-6">Tax:</dt>
              <dd class="col-sm-6">
                <span class="text-warning">$@Model.TaxAmount.ToString("N6")</span>
              </dd>
            }

            <dt class="col-sm-6 border-top pt-2"><strong>Total Paid:</strong></dt>
            <dd class="col-sm-6 border-top pt-2">
              <strong class="text-success fs-5">$@Model.TotalCost.ToString("N6")</strong>
            </dd>

            @if (Model.RemainingQuantity != Model.QuantityPurchased)
            {
              <dt class="col-sm-6 mt-2">Remaining:</dt>
              <dd class="col-sm-6 mt-2">
                <span class="badge bg-warning">@Model.RemainingQuantity</span>
              </dd>

              <dt class="col-sm-6">Used:</dt>
              <dd class="col-sm-6">
                <span class="badge bg-secondary">@(Model.QuantityPurchased - Model.RemainingQuantity)</span>
              </dd>
            }
          </dl>
        </div>
      </div>

      <!-- Quick Actions -->
      <div class="card mt-3">
        <div class="card-header">
          <h6><i class="fas fa-lightning-bolt"></i> Quick Actions</h6>
        </div>
        <div class="card-body">
          <div class="d-grid gap-2">
            <a href="@Url.Action("Create", new { itemId = Model.ItemId })" class="btn btn-outline-success btn-sm">
              <i class="fas fa-plus"></i> Purchase Same Item
            </a>
            <a href="@Url.Action("Index", "Items", new { id = Model.ItemId })" class="btn btn-outline-primary btn-sm">
              <i class="fas fa-cube"></i> View Item Details
            </a>
            <a href="@Url.Action("Details", "Vendors", new { id = Model.VendorId })" class="btn btn-outline-info btn-sm">
              <i class="fas fa-building"></i> View Vendor Details
            </a>
            @if (Model.Status != InventorySystem.Models.Enums.PurchaseStatus.Cancelled)
            {
              <button type="button" class="btn btn-outline-warning btn-sm">
                <i class="fas fa-edit"></i> Update Status
              </button>
            }
          </div>
        </div>
      </div>

      <!-- Purchase History for Item -->
      <div class="card mt-3">
        <div class="card-header">
          <h6><i class="fas fa-history"></i> Recent Purchases for this Item</h6>
        </div>
        <div class="card-body">
          <small class="text-muted">
            <i class="fas fa-info-circle"></i>
            This shows recent purchases for @Model.Item.PartNumber from all vendors.
            <br><br>
            <a href="@Url.Action("Details", "Items", new { id = Model.ItemId })" class="btn btn-outline-primary btn-sm">
              <i class="fas fa-list"></i> View Full Purchase History
            </a>
          </small>
        </div>
      </div>
    </div>
  </div>
</div>