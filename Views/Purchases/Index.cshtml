@* Views/Purchases/Index.cshtml - Updated to show vendor names *@
@model IEnumerable<InventorySystem.Models.Purchase>

@{
  ViewData["Title"] = "Purchases";
}

<div class="container-fluid">
  <div class="d-flex justify-content-between align-items-center mb-4">
    <h2><i class="fas fa-shopping-cart"></i> @ViewData["Title"]</h2>
    <a href="@Url.Action("Create")" class="btn btn-success">
      <i class="fas fa-plus"></i> New Purchase
    </a>
  </div>

  @if (ViewBag.ErrorMessage != null)
  {
    <div class="alert alert-danger">
      <i class="fas fa-exclamation-circle"></i> @ViewBag.ErrorMessage
    </div>
  }

  @if (TempData["SuccessMessage"] != null)
  {
    <div class="alert alert-success alert-dismissible fade show">
      <i class="fas fa-check-circle"></i> @TempData["SuccessMessage"]
      <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
    </div>
  }

  @if (TempData["ErrorMessage"] != null)
  {
    <div class="alert alert-danger alert-dismissible fade show">
      <i class="fas fa-exclamation-circle"></i> @TempData["ErrorMessage"]
      <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
    </div>
  }

  <div class="card">
    <div class="card-header">
      <h5 class="mb-0">
        <i class="fas fa-list"></i> Purchase History
        <span class="badge bg-primary ms-2">@Model.Count() records</span>
      </h5>
    </div>
    <div class="card-body">
      @if (Model.Any())
      {
        <div class="table-responsive">
          <table class="table table-striped table-hover">
            <thead class="table-dark">
              <tr>
                <th>Purchase Date</th>
                <th>Item</th>
                <th>Vendor</th>
                <th>Quantity</th>
                <th>Cost Per Unit</th>
                <th>Total Cost</th>
                <th>Status</th>
                <th>Actions</th>
              </tr>
            </thead>
            <tbody>
              @foreach (var purchase in Model)
              {
                <tr>
                  <td>
                    <i class="fas fa-calendar text-muted"></i>
                    @purchase.PurchaseDate.ToString("MM/dd/yyyy")
                  </td>
                  <td>
                    <div>
                      <strong>@purchase.Item.PartNumber</strong>
                      <br>
                      <small class="text-muted">@purchase.Item.Description</small>
                    </div>
                  </td>
                  <td>
                    <i class="fas fa-building text-success"></i>
                    @purchase.Vendor.CompanyName
                    @if (!string.IsNullOrEmpty(purchase.Vendor.VendorCode))
                    {
                      <br>
                
                      <small class="text-muted">(@purchase.Vendor.VendorCode)</small>
                    }
                  </td>
                  <td>
                    <span class="badge bg-info">@purchase.QuantityPurchased</span>
                    @if (purchase.RemainingQuantity != purchase.QuantityPurchased)
                    {
                      <br>
                      <small class="text-muted">
                        Remaining: @purchase.RemainingQuantity
                      </small>
                    }
                  </td>
                  <td>
                    <span class="text-success">
                      $@purchase.CostPerUnit.ToString("N2")
                    </span>
                  </td>
                  <td>
                    <strong class="text-success">
                      $@purchase.TotalPaid.ToString("N2")
                    </strong>
                    @if (purchase.ShippingCost > 0 || purchase.TaxAmount > 0)
                    {
                      <br>
                      <small class="text-muted">
                        Subtotal: $@(purchase.TotalCost.ToString("N2"))
                      </small>
                      @if (purchase.ShippingCost > 0)
                      {
                        <small class="text-muted">
                          <br />Shipping: $@(purchase.ShippingCost.ToString("N2"))
                        </small>
                      }
                      @if (purchase.TaxAmount > 0)
                      {
                        <small class="text-muted">
                          <br />Tax: $@(purchase.TaxAmount.ToString("N2"))
                        </small>
                      }
                    }
                  </td>
                  <td>
                    @{
                      var statusClass = purchase.Status switch
                      {
                        InventorySystem.Models.Enums.PurchaseStatus.Pending => "bg-warning",
                        InventorySystem.Models.Enums.PurchaseStatus.Confirmed => "bg-info",
                        InventorySystem.Models.Enums.PurchaseStatus.Shipped => "bg-primary",
                        InventorySystem.Models.Enums.PurchaseStatus.PartiallyReceived => "bg-warning",
                        InventorySystem.Models.Enums.PurchaseStatus.Received => "bg-success",
                        InventorySystem.Models.Enums.PurchaseStatus.Cancelled => "bg-danger",
                        InventorySystem.Models.Enums.PurchaseStatus.Returned => "bg-secondary",
                        _ => "bg-secondary"
                      };
                    }
                    <span class="badge @statusClass">@purchase.Status</span>
                    @if (purchase.ExpectedDeliveryDate.HasValue)
                    {
                      <br>
                      <small class="text-muted">
                        Expected: @purchase.ExpectedDeliveryDate.Value.ToString("MM/dd/yyyy")
                      </small>
                    }
                  </td>
                  <td>
                    <div class="btn-group btn-group-sm" role="group">
                      <a href="@Url.Action("Details", new { id = purchase.Id })"
                         class="btn btn-outline-primary" title="View Details">
                        <i class="fas fa-eye"></i>
                      </a>
                      <a href="@Url.Action("Edit", new { id = purchase.Id })"
                         class="btn btn-outline-secondary" title="Edit">
                        <i class="fas fa-edit"></i>
                      </a>
                      <a href="@Url.Action("Delete", new { id = purchase.Id })"
                         class="btn btn-outline-danger" title="Delete"
                         onclick="return confirm('Are you sure you want to delete this purchase?')">
                        <i class="fas fa-trash"></i>
                      </a>
                    </div>
                    @if (purchase.PurchaseDocuments.Any())
                    {
                      <br>
                      <small class="text-info">
                        <i class="fas fa-paperclip"></i>
                        @purchase.PurchaseDocuments.Count document(s)
                      </small>
                    }
                  </td>
                </tr>
              }
            </tbody>
          </table>
        </div>

        <!-- Summary Statistics -->
        <div class="mt-4">
          <div class="row">
            <div class="col-md-3">
              <div class="card bg-light">
                <div class="card-body text-center">
                  <h5 class="card-title text-primary">
                    <i class="fas fa-shopping-cart"></i>
                    Total Purchases
                  </h5>
                  <h3 class="text-primary">@Model.Count()</h3>
                </div>
              </div>
            </div>
            <div class="col-md-3">
              <div class="card bg-light">
                <div class="card-body text-center">
                  <h5 class="card-title text-success">
                    <i class="fas fa-dollar-sign"></i>
                    Total Value
                  </h5>
                  <h3 class="text-success">$@Model.Sum(p => p.TotalPaid).ToString("N2")</h3>
                </div>
              </div>
            </div>
            <div class="col-md-3">
              <div class="card bg-light">
                <div class="card-body text-center">
                  <h5 class="card-title text-info">
                    <i class="fas fa-boxes"></i>
                    Total Quantity
                  </h5>
                  <h3 class="text-info">@Model.Sum(p => p.QuantityPurchased)</h3>
                </div>
              </div>
            </div>
            <div class="col-md-3">
              <div class="card bg-light">
                <div class="card-body text-center">
                  <h5 class="card-title text-warning">
                    <i class="fas fa-building"></i>
                    Unique Vendors
                  </h5>
                  <h3 class="text-warning">@Model.Select(p => p.VendorId).Distinct().Count()</h3>
                </div>
              </div>
            </div>
          </div>
        </div>
      }
      else
      {
        <div class="text-center py-5">
          <i class="fas fa-shopping-cart fa-3x text-muted mb-3"></i>
          <h4 class="text-muted">No purchases found</h4>
          <p class="text-muted">Start by creating your first purchase.</p>
          <a href="@Url.Action("Create")" class="btn btn-success">
            <i class="fas fa-plus"></i> Create First Purchase
          </a>
        </div>
      }
    </div>
  </div>
</div>