@model InventorySystem.ViewModels.PurchaseOrderReportViewModel
@{
    ViewData["Title"] = $"Purchase Order {Model.PurchaseOrderNumber}";
}

<div class="container-fluid">
    <!-- Header with Action Buttons -->
    <div class="d-flex justify-content-between align-items-center mb-4">
        <h2><i class="fas fa-file-invoice"></i> Purchase Order Report</h2>
        <div class="btn-group">
            <a href="@Url.Action("Index")" class="btn btn-secondary">
                <i class="fas fa-arrow-left"></i> Back to Purchases
            </a>
            <a href="@Url.Action("PurchaseOrderReportPrint", new { poNumber = Model.PurchaseOrderNumber })" 
               target="_blank" class="btn btn-primary">
                <i class="fas fa-print"></i> Print
            </a>
            <button type="button" class="btn btn-success" data-bs-toggle="modal" data-bs-target="#emailModal">
                <i class="fas fa-envelope"></i> Email to Vendor
            </button>
        </div>
    </div>

    <!-- Purchase Order Document -->
    <div class="card">
        <div class="card-body">
            <!-- Header -->
            <div class="text-center border-bottom pb-3 mb-4">
                <h1 class="display-6">PURCHASE ORDER</h1>
                <h2 class="text-primary">PO# @Model.PurchaseOrderNumber</h2>
            </div>

            <!-- Company and Vendor Info -->
            <div class="row mb-4">
                <div class="col-md-6">
                    <h5><i class="fas fa-building text-primary"></i> From:</h5>
                    <address>
                        <strong>@Model.CompanyInfo.CompanyName</strong><br>
                        @Model.CompanyInfo.Address<br>
                        @Model.CompanyInfo.City, @Model.CompanyInfo.State @Model.CompanyInfo.ZipCode<br>
                        <i class="fas fa-phone"></i> @Model.CompanyInfo.Phone<br>
                        <i class="fas fa-envelope"></i> @Model.CompanyInfo.Email<br>
                        <i class="fas fa-globe"></i> @Model.CompanyInfo.Website
                    </address>
                </div>
                <div class="col-md-6">
                    <h5><i class="fas fa-truck text-success"></i> To:</h5>
                    <address>
                        <strong>@Model.Vendor.CompanyName</strong><br>
                        @{
                            // Construct vendor address from individual fields
                            var addressParts = new List<string>();
                            
                            // Add Address Line 1
                            if (!string.IsNullOrWhiteSpace(Model.Vendor.AddressLine1))
                            {
                                addressParts.Add(Model.Vendor.AddressLine1);
                            }
                            
                            // Add Address Line 2 if it exists
                            if (!string.IsNullOrWhiteSpace(Model.Vendor.AddressLine2))
                            {
                                addressParts.Add(Model.Vendor.AddressLine2);
                            }
                            
                            // Construct City, State PostalCode line
                            var cityStateZip = new List<string>();
                            if (!string.IsNullOrWhiteSpace(Model.Vendor.City))
                            {
                                cityStateZip.Add(Model.Vendor.City);
                            }
                            if (!string.IsNullOrWhiteSpace(Model.Vendor.State))
                            {
                                cityStateZip.Add(Model.Vendor.State);
                            }
                            if (!string.IsNullOrWhiteSpace(Model.Vendor.PostalCode))
                            {
                                cityStateZip.Add(Model.Vendor.PostalCode);
                            }
                            
                            if (cityStateZip.Any())
                            {
                                addressParts.Add(string.Join(", ", cityStateZip.Take(2)) + (cityStateZip.Count > 2 ? " " + cityStateZip.Last() : ""));
                            }
                            
                            // Add country if different from default or if specified
                            if (!string.IsNullOrWhiteSpace(Model.Vendor.Country) && 
                                !Model.Vendor.Country.Equals("United States", StringComparison.OrdinalIgnoreCase))
                            {
                                addressParts.Add(Model.Vendor.Country);
                            }
                        }
                        
                        @* Display each address part on a new line *@
                        @foreach (var addressPart in addressParts)
                        {
                            @addressPart<br>
                        }
                        
                        @* Display contact information if available *@
                        @if (!string.IsNullOrWhiteSpace(Model.Vendor.ContactPhone))
                        {
                            <i class="fas fa-phone"></i> @Model.Vendor.ContactPhone<br>
                        }
                        @if (!string.IsNullOrWhiteSpace(Model.Vendor.ContactEmail))
                        {
                            <i class="fas fa-envelope"></i> @Model.Vendor.ContactEmail<br>
                        }
                        @if (!string.IsNullOrWhiteSpace(Model.Vendor.Website))
                        {
                            <i class="fas fa-globe"></i> @Model.Vendor.Website<br>
                        }
                        
                        @* Show message if no address is available *@
                        @if (!addressParts.Any())
                        {
                            <em class="text-muted">Address not available</em><br>
                        }
                    </address>
                </div>
            </div>

            <!-- PO Details -->
            <div class="row mb-4">
                <div class="col-md-4">
                    <strong>PO Date:</strong> @Model.PurchaseDate.ToString("MMMM dd, yyyy")
                </div>
                <div class="col-md-4">
                    <strong>Expected Delivery:</strong> @(Model.ExpectedDeliveryDate?.ToString("MMMM dd, yyyy") ?? "TBD")
                </div>
                <div class="col-md-4">
                    <strong>Status:</strong> 
                    <span class="badge bg-@(Model.Status switch 
                    {
                        InventorySystem.Models.Enums.PurchaseStatus.Pending => "warning",
                        InventorySystem.Models.Enums.PurchaseStatus.Ordered => "info", 
                        InventorySystem.Models.Enums.PurchaseStatus.Received => "success",
                        InventorySystem.Models.Enums.PurchaseStatus.Cancelled => "danger",
                        _ => "secondary"
                    })">
                        @Model.Status
                    </span>
                </div>
            </div>

            <!-- Line Items Table -->
            <div class="table-responsive">
                <table class="table table-striped table-bordered">
                    <thead class="table-dark">
                        <tr>
                            <th width="5%">Line #</th>
                            <th width="15%">Item Number</th>
                            <th width="35%">Description</th>
                            <th width="10%" class="text-center">Qty</th>
                            <th width="15%" class="text-end">Unit Price</th>
                            <th width="15%" class="text-end">Line Total</th>
                            <th width="5%" class="text-center">Status</th>
                        </tr>
                    </thead>
                    <tbody>
                        @{
                            int lineNumber = 1;
                        }
                        @foreach (var item in Model.LineItems)
                        {
                            <tr>
                                <td class="text-center bg-light"><strong>@lineNumber</strong></td>
                                <td><strong>@item.PartNumber</strong></td>
                                <td>@item.Description</td>
                                <td class="text-center">@item.Quantity</td>
                                <td class="text-end">$@item.UnitCost.ToString("N2")</td>
                                <td class="text-end">$@item.LineTotal.ToString("N2")</td>
                                <td class="text-center">
                                    <span class="badge bg-@(item.Status switch 
                                    {
                                        InventorySystem.Models.Enums.PurchaseStatus.Pending => "warning",
                                        InventorySystem.Models.Enums.PurchaseStatus.Ordered => "info", 
                                        InventorySystem.Models.Enums.PurchaseStatus.Received => "success",
                                        InventorySystem.Models.Enums.PurchaseStatus.Cancelled => "danger",
                                        _ => "secondary"
                                    }) text-uppercase" style="font-size: 0.7em;">
                                        @item.Status.ToString().Substring(0, 1)
                                    </span>
                                </td>
                            </tr>
                            lineNumber++;
                        }
                    </tbody>
                    <tfoot class="table-secondary">
                        <tr>
                            <th colspan="5" class="text-end">Subtotal (@Model.LineItemCount items, @Model.TotalQuantity total qty):</th>
                            <th class="text-end">$@Model.SubtotalAmount.ToString("N2")</th>
                            <th></th>
                        </tr>
                        @if (Model.TotalShipping > 0)
                        {
                            <tr>
                                <th colspan="5" class="text-end">Shipping:</th>
                                <th class="text-end">$@Model.TotalShipping.ToString("N2")</th>
                                <th></th>
                            </tr>
                        }
                        @if (Model.TotalTax > 0)
                        {
                            <tr>
                                <th colspan="5" class="text-end">Tax:</th>
                                <th class="text-end">$@Model.TotalTax.ToString("N2")</th>
                                <th></th>
                            </tr>
                        }
                        <tr class="table-dark">
                            <th colspan="5" class="text-end"><strong>GRAND TOTAL:</strong></th>
                            <th class="text-end"><strong>$@Model.GrandTotal.ToString("N2")</strong></th>
                            <th></th>
                        </tr>
                    </tfoot>
                </table>
            </div>

            <!-- Notes -->
            @if (!string.IsNullOrEmpty(Model.Notes))
            {
                <div class="alert alert-info">
                    <h6><i class="fas fa-sticky-note"></i> Notes:</h6>
                    <p class="mb-0">@Model.Notes</p>
                </div>
            }

            <!-- Footer -->
            <div class="text-center mt-4 pt-3 border-top">
                <p class="text-muted mb-1">Thank you for your business!</p>
                <small class="text-muted">
                    Generated on @DateTime.Now.ToString("MMMM dd, yyyy 'at' h:mm tt")
                </small>
            </div>
        </div>
    </div>
</div>

<!-- Email Modal -->
<div class="modal fade" id="emailModal" tabindex="-1" aria-labelledby="emailModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <form asp-action="EmailPurchaseOrderReport" method="post">
                <input type="hidden" asp-for="PurchaseOrderNumber" />
                <div class="modal-header">
                    <h5 class="modal-title" id="emailModalLabel">
                        <i class="fas fa-envelope"></i> Email Purchase Order to Vendor
                    </h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <div class="mb-3">
                        <label asp-for="VendorEmail" class="form-label">Vendor Email Address</label>
                        <input asp-for="VendorEmail" class="form-control" type="email" required />
                        <div class="form-text">
                            Current vendor email: @(string.IsNullOrEmpty(Model.VendorEmail) ? "None on file" : Model.VendorEmail)
                        </div>
                    </div>
                    <div class="mb-3">
                        <label asp-for="EmailSubject" class="form-label">Email Subject</label>
                        <input asp-for="EmailSubject" class="form-control" required />
                    </div>
                    <div class="mb-3">
                        <label asp-for="EmailMessage" class="form-label">Email Message</label>
                        <textarea asp-for="EmailMessage" class="form-control" rows="4" required></textarea>
                        <div class="form-text">
                            The purchase order will be included as an HTML attachment in the email body.
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button type="submit" class="btn btn-success">
                        <i class="fas fa-paper-plane"></i> Send Email
                    </button>
                    </div>
            </form>
        </div>
    </div>
</div>

@section Scripts {
<script>
    // Auto-populate vendor email if not already filled
    $(document).ready(function() {
        if (!$('#VendorEmail').val() && '@Model.VendorEmail') {
            $('#VendorEmail').val('@Model.VendorEmail');
        }
    });
</script>
}