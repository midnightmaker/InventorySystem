@model InventorySystem.ViewModels.CustomerIndexViewModel
@{
    ViewData["Title"] = "Customer Management";
}

<div class="d-flex justify-content-between align-items-center mb-4">
    <h1><i class="fas fa-users"></i> Customer Management</h1>
    <div class="btn-group">
        <a href="@Url.Action("Create")" class="btn btn-primary">
            <i class="fas fa-user-plus"></i> Add Customer
        </a>
        <a href="@Url.Action("Reports")" class="btn btn-outline-info">
            <i class="fas fa-chart-bar"></i> Reports
        </a>
    </div>
</div>

@* Search and Filters *@
<div class="card mb-4">
    <div class="card-body">
        <form method="get" class="row g-3">
            <div class="col-md-4">
                <label class="form-label">Search Customers</label>
                <input type="text" name="searchTerm" value="@Model.SearchTerm" class="form-control" placeholder="Name, email, or company..." />
            </div>
            <div class="col-md-3">
                <label class="form-label">Customer Type</label>
                <select name="customerType" class="form-select">
                    <option value="">All Types</option>
                    @foreach (CustomerType type in Model.CustomerTypes)
                    {
                        <option value="@((int)type)" selected="@(Model.CustomerType?.ToString() == type.ToString())">@type.ToString()</option>
                    }
                </select>
            </div>
            <div class="col-md-2">
                <label class="form-label">Status</label>
                <select name="activeOnly" class="form-select">
                    <option value="">All Customers</option>
                    <option value="true" selected="@(Model.ActiveOnly == true)">Active Only</option>
                    <option value="false" selected="@(Model.ActiveOnly == false)">Inactive Only</option>
                </select>
            </div>
            <div class="col-md-3 d-flex align-items-end">
                <button type="submit" class="btn btn-outline-primary me-2">
                    <i class="fas fa-search"></i> Search
                </button>
                <a href="@Url.Action("Index")" class="btn btn-outline-secondary">
                    <i class="fas fa-times"></i> Clear
                </a>
            </div>
        </form>
    </div>
</div>

@* Customer Table *@
<div class="card">
    <div class="card-body">
        <div class="table-responsive">
            <table class="table table-hover">
                <thead class="table-dark">
                    <tr>
                        <th>Customer</th>
                        <th>Type</th>
                        <th>Contact</th>
                        <th>Sales</th>
                        <th>Credit Status</th>
                        <th>Status</th>
                        <th class="text-center">Actions</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var customer in Model.Customers)
                    {
                        <tr>
                            <td>
                                <div>
                                    <strong>@customer.CustomerName</strong>
                                    @if (!string.IsNullOrEmpty(customer.CompanyName))
                                    {
                                        <br><small class="text-muted">@customer.CompanyName</small>
                                    }
                                </div>
                            </td>
                            <td><span class="badge bg-info">@customer.CustomerType</span></td>
                            <td>
                                <div>
                                    <i class="fas fa-envelope"></i> @customer.Email<br>
                                    @if (!string.IsNullOrEmpty(customer.Phone))
                                    {
                                        <i class="fas fa-phone"></i> @customer.Phone
                                    }
                                </div>
                            </td>
                            <td>
                                <div>
                                    <strong>$@customer.TotalSales.ToString("N2")</strong><br>
                                    <small class="text-muted">@customer.SalesCount orders</small>
                                </div>
                            </td>
                            <td>
                                @if (customer.CreditLimit > 0)
                                {
                                    var creditUsed = customer.CreditLimit > 0 ? (customer.OutstandingBalance / customer.CreditLimit) * 100 : 0;
                                    <div class="progress" style="height: 20px;">
                                        <div class="progress-bar @(creditUsed > 90 ? "bg-danger" : creditUsed > 75 ? "bg-warning" : "bg-success")" 
                                             style="width: @creditUsed%">
                                            @creditUsed.ToString("F1")%
                                        </div>
                                    </div>
                                    <small>$@customer.OutstandingBalance.ToString("N2") / $@customer.CreditLimit.ToString("N2")</small>
                                }
                                else
                                {
                                    <span class="text-muted">No Limit</span>
                                }
                            </td>
                            <td>
                                <span class="badge @(customer.IsActive ? "bg-success" : "bg-secondary")">
                                    @(customer.IsActive ? "Active" : "Inactive")
                                </span>
                            </td>
                            <td class="text-center">
                                <div class="btn-group btn-group-sm">
                                    <a href="@Url.Action("Details", new { id = customer.Id })" class="btn btn-outline-primary" title="View Details">
                                        <i class="fas fa-eye"></i>
                                    </a>
                                    <a href="@Url.Action("Edit", new { id = customer.Id })" class="btn btn-outline-warning" title="Edit">
                                        <i class="fas fa-edit"></i>
                                    </a>
                                    <a href="@Url.Action("Analytics", new { id = customer.Id })" class="btn btn-outline-info" title="Analytics">
                                        <i class="fas fa-chart-line"></i>
                                    </a>
                                </div>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
            
            @if (!Model.Customers.Any())
            {
                <div class="text-center py-4">
                    <i class="fas fa-users fa-3x text-muted mb-3"></i>
                    <h5 class="text-muted">No customers found</h5>
                    <p class="text-muted">Try adjusting your search criteria or <a href="@Url.Action("Create")">add a new customer</a>.</p>
                </div>
            }
        </div>
    </div>
</div>

@* Quick Stats Cards *@
<div class="row mt-4">
    <div class="col-md-3">
        <div class="card text-center">
            <div class="card-body">
                <h5 class="text-primary">@Model.Customers.Count()</h5>
                <small class="text-muted">Total Customers</small>
            </div>
        </div>
    </div>
    <div class="col-md-3">
        <div class="card text-center">
            <div class="card-body">
                <h5 class="text-success">@Model.Customers.Count(c => c.IsActive)</h5>
                <small class="text-muted">Active Customers</small>
            </div>
        </div>
    </div>
    <div class="col-md-3">
        <div class="card text-center">
            <div class="card-body">
                <h5 class="text-warning">@Model.Customers.Count(c => c.OutstandingBalance > 0)</h5>
                <small class="text-muted">With Outstanding Balance</small>
            </div>
        </div>
    </div>
    <div class="col-md-3">
        <div class="card text-center">
            <div class="card-body">
                <h5 class="text-danger">@Model.Customers.Count(c => c.CreditLimit > 0 && c.OutstandingBalance > c.CreditLimit)</h5>
                <small class="text-muted">Over Credit Limit</small>
            </div>
        </div>
    </div>
</div>