@model InventorySystem.Models.ChangeOrder
@{
  ViewData["Title"] = "Change Order Details";
}

<div class="d-flex justify-content-between align-items-center mb-4">
  <h1><i class="fas fa-code-branch"></i> @Model.ChangeOrderNumber</h1>
  <div class="btn-group">
    <a href="/ChangeOrders" class="btn btn-outline-secondary">
      <i class="fas fa-arrow-left"></i> Back to Change Orders
    </a>
    @if (Model.Status == "Pending")
    {
      <form asp-action="Implement" method="post" style="display:inline;">
        <input type="hidden" name="id" value="@Model.Id" />
        <button type="submit" class="btn btn-success"
                onclick="return confirm('Implement this change order? This will create the new version and cannot be undone.')">
          <i class="fas fa-check"></i> Implement Change Order
        </button>
      </form>
    }
    @if (Model.EntityType == "Item")
    {
      <a href="/Items/Details/@Model.BaseEntityId" class="btn btn-outline-info">
        <i class="fas fa-cube"></i> View Item
      </a>
    }
    else if (Model.EntityType == "BOM")
    {
      <a href="/Boms/Details/@Model.BaseEntityId" class="btn btn-outline-info">
        <i class="fas fa-layer-group"></i> View BOM
      </a>
    }
  </div>
</div>

@if (TempData["SuccessMessage"] != null)
{
  <div class="alert alert-success alert-dismissible fade show">
    @TempData["SuccessMessage"]
    <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
  </div>
}

@if (TempData["ErrorMessage"] != null)
{
  <div class="alert alert-danger alert-dismissible fade show">
    @TempData["ErrorMessage"]
    <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
  </div>
}

@if (TempData["WarningMessage"] != null)
{
  <div class="alert alert-warning alert-dismissible fade show">
    @TempData["WarningMessage"]
    <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
  </div>
}

<div class="row">
  <div class="col-md-8">
    <div class="card">
      <div class="card-header d-flex justify-content-between align-items-center">
        <h5><i class="fas fa-info-circle"></i> Change Order Information</h5>
        <span class="badge bg-@(GetStatusBadgeColor(Model.Status)) fs-6">@Model.Status</span>
      </div>
      <div class="card-body">
        <dl class="row">
          <dt class="col-sm-3">Change Order #:</dt>
          <dd class="col-sm-9">
            <strong>@Model.ChangeOrderNumber</strong>
          </dd>

          <dt class="col-sm-3">Entity:</dt>
          <dd class="col-sm-9">
            <div class="d-flex align-items-center">
              <span class="badge bg-@(Model.EntityType == "Item" ? "primary" : "info") me-2">
                @Model.EntityType
              </span>
              <div>
                @if (Model.EntityType == "Item" && Model.RelatedItem != null)
                {
                  <strong>@Model.RelatedItem.PartNumber</strong>
                  <br>
                  <small class="text-muted">@Model.RelatedItem.Description</small>
                }
                else if (Model.EntityType == "BOM" && Model.RelatedBom != null)
                {
                  <strong>@Model.RelatedBom.Name</strong>
                  <br>
                  <small class="text-muted">@Model.RelatedBom.Description</small>
                }
                else
                {
                  <span class="text-muted">ID: @Model.BaseEntityId</span>
                }
              </div>
            </div>
          </dd>

          <dt class="col-sm-3">Version Change:</dt>
          <dd class="col-sm-9">
            @if (!string.IsNullOrEmpty(Model.PreviousVersion))
            {
              <span class="text-muted">@Model.PreviousVersion</span>
              <i class="fas fa-arrow-right mx-2"></i>
            }
            <span class="fw-bold text-success">@Model.NewVersion</span>
          </dd>

          <dt class="col-sm-3">Created By:</dt>
          <dd class="col-sm-9">@Model.CreatedBy</dd>

          <dt class="col-sm-3">Created Date:</dt>
          <dd class="col-sm-9">@Model.CreatedDate.ToString("MMMM dd, yyyy 'at' hh:mm tt")</dd>

          @if (Model.ImplementedDate.HasValue)
          {
            <dt class="col-sm-3">Implemented:</dt>
            <dd class="col-sm-9">
              @Model.ImplementedDate.Value.ToString("MMMM dd, yyyy 'at' hh:mm tt")
              <br>
              <small class="text-muted">by @Model.ImplementedBy</small>
            </dd>
          }

          @if (!string.IsNullOrEmpty(Model.Description))
          {
            <dt class="col-sm-3">Description:</dt>
            <dd class="col-sm-9">@Model.Description</dd>
          }

          @if (!string.IsNullOrEmpty(Model.Reason))
          {
            <dt class="col-sm-3">Reason for Change:</dt>
            <dd class="col-sm-9">@Model.Reason</dd>
          }

          @if (!string.IsNullOrEmpty(Model.DocumentPath))
          {
            <dt class="col-sm-3">Supporting Document:</dt>
            <dd class="col-sm-9">
              <a href="@Model.DocumentPath" class="btn btn-sm btn-outline-primary" target="_blank">
                <i class="fas fa-file"></i> View Document
              </a>
            </dd>
          }
        </dl>
      </div>
    </div>

    @if (Model.Status == "Pending")
    {
      <div class="card mt-4">
        <div class="card-header bg-warning text-dark">
          <h6><i class="fas fa-exclamation-triangle"></i> Pending Implementation</h6>
        </div>
        <div class="card-body">
          <p class="mb-3">This change order is pending implementation. Once implemented, a new version of the @Model.EntityType.ToLower() will be created.</p>
          <div class="alert alert-info">
            <strong>Note:</strong> Implementation cannot be undone. Make sure all change details are correct before proceeding.
          </div>
        </div>
      </div>
    }
  </div>

  <!-- RIGHT COLUMN - Image and Additional Info -->
  <div class="col-md-4">
    <!-- Item Image Card (for Items only) -->
    @if (Model.EntityType == "Item" && Model.RelatedItem != null)
    {
      <div class="card">
        <div class="card-header">
          <h6><i class="fas fa-image"></i> Item Image</h6>
        </div>
        <div class="card-body text-center">
          @if (Model.RelatedItem.HasImage)
          {
            <img src="/Items/GetImage/@Model.RelatedItem.Id"
                 alt="@Model.RelatedItem.PartNumber"
                 class="img-fluid border rounded"
                 style="max-width: 100%; max-height: 250px; cursor: pointer;"
                 onclick="showImageModal('@Model.RelatedItem.PartNumber', '/Items/GetImage/@Model.RelatedItem.Id')" />
            <div class="mt-2">
              <small class="text-muted">@Model.RelatedItem.ImageFileName</small>
            </div>
          }
          else
          {
            <div class="no-image-placeholder d-flex align-items-center justify-content-center"
                 style="height: 150px; background-color: #f8f9fa; border: 2px dashed #dee2e6; border-radius: 8px;">
              <div class="text-center">
                <i class="fas fa-image fa-2x text-muted mb-2"></i>
                <p class="text-muted mb-0">No image available</p>
              </div>
            </div>
          }
        </div>
      </div>
    }

    <!-- Entity Information Card -->
    <div class="card @(Model.EntityType == "Item" && Model.RelatedItem != null ? "mt-3" : "")">
      <div class="card-header">
        <h6><i class="fas fa-@(Model.EntityType == "Item" ? "cube" : "layer-group")"></i> @Model.EntityType Details</h6>
      </div>
      <div class="card-body">
        @if (Model.EntityType == "Item" && Model.RelatedItem != null)
        {
          <dl class="row mb-0">
            <dt class="col-sm-5">Part Number:</dt>
            <dd class="col-sm-7"><strong>@Model.RelatedItem.PartNumber</strong></dd>

            <dt class="col-sm-5">Description:</dt>
            <dd class="col-sm-7">@Model.RelatedItem.Description</dd>

            <dt class="col-sm-5">Current Version:</dt>
            <dd class="col-sm-7">
              <span class="badge bg-primary">@Model.RelatedItem.Version</span>
            </dd>

            <dt class="col-sm-5">Item Type:</dt>
            <dd class="col-sm-7">@Model.RelatedItem.ItemTypeDisplayName</dd>

            @if (Model.RelatedItem.TrackInventory)
            {
              <dt class="col-sm-5">Current Stock:</dt>
              <dd class="col-sm-7">
                <span class="badge bg-@(Model.RelatedItem.CurrentStock > Model.RelatedItem.MinimumStock ? "success" : "warning")">
                  @Model.RelatedItem.CurrentStock
                </span>
              </dd>
            }
          </dl>
        }
        else if (Model.EntityType == "BOM" && Model.RelatedBom != null)
        {
          <dl class="row mb-0">
            <dt class="col-sm-5">BOM Name:</dt>
            <dd class="col-sm-7"><strong>@Model.RelatedBom.Name</strong></dd>

            <dt class="col-sm-5">Description:</dt>
            <dd class="col-sm-7">@Model.RelatedBom.Description</dd>

            <dt class="col-sm-5">Current Version:</dt>
            <dd class="col-sm-7">
              <span class="badge bg-info">@Model.RelatedBom.Version</span>
            </dd>

            @if (!string.IsNullOrEmpty(Model.RelatedBom.AssemblyPartNumber))
            {
              <dt class="col-sm-5">Assembly P/N:</dt>
              <dd class="col-sm-7">@Model.RelatedBom.AssemblyPartNumber</dd>
            }

            <dt class="col-sm-5">Components:</dt>
            <dd class="col-sm-7">
              <span class="badge bg-secondary">@Model.RelatedBom.BomItems.Count</span>
            </dd>
          </dl>
        }
        else
        {
          <p class="text-muted">Entity information not available.</p>
        }
      </div>
    </div>

    <!-- Change Timeline Card -->
    <div class="card mt-3">
      <div class="card-header">
        <h6><i class="fas fa-clock"></i> Change Timeline</h6>
      </div>
      <div class="card-body">
        <div class="timeline">
          <div class="timeline-item">
            <div class="timeline-marker bg-primary"></div>
            <div class="timeline-content">
              <h6 class="mb-1">Change Order Created</h6>
              <small class="text-muted">
                @Model.CreatedDate.ToString("MMM dd, yyyy 'at' h:mm tt")
                <br>by @Model.CreatedBy
              </small>
            </div>
          </div>

          @if (Model.ImplementedDate.HasValue)
          {
            <div class="timeline-item">
              <div class="timeline-marker bg-success"></div>
              <div class="timeline-content">
                <h6 class="mb-1">Implementation Completed</h6>
                <small class="text-muted">
                  @Model.ImplementedDate.Value.ToString("MMM dd, yyyy 'at' h:mm tt")
                  <br>by @Model.ImplementedBy
                </small>
              </div>
            </div>
          }
          else
          {
            <div class="timeline-item">
              <div class="timeline-marker bg-warning"></div>
              <div class="timeline-content">
                <h6 class="mb-1">Awaiting Implementation</h6>
                <small class="text-muted">Pending approval and implementation</small>
              </div>
            </div>
          }
        </div>
      </div>
    </div>
  </div>
</div>

<!-- Image Modal (for Item images) -->
<div class="modal fade" id="imageModal" tabindex="-1" aria-labelledby="imageModalLabel" aria-hidden="true">
  <div class="modal-dialog modal-lg">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title" id="imageModalLabel">Item Image</h5>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
      </div>
      <div class="modal-body text-center">
        <img id="modalImage" src="#" alt="Item Image" class="img-fluid" />
      </div>
    </div>
  </div>
</div>

<style>
  .timeline {
    position: relative;
    padding-left: 30px;
  }

    .timeline::before {
      content: '';
      position: absolute;
      left: 15px;
      top: 0;
      bottom: 0;
      width: 2px;
      background: #dee2e6;
    }

  .timeline-item {
    position: relative;
    margin-bottom: 20px;
  }

  .timeline-marker {
    position: absolute;
    left: -37px;
    top: 5px;
    width: 12px;
    height: 12px;
    border-radius: 50%;
    border: 2px solid #fff;
    box-shadow: 0 0 0 2px #dee2e6;
  }

  .timeline-content {
    background: #f8f9fa;
    padding: 10px 15px;
    border-radius: 6px;
    border-left: 3px solid #dee2e6;
  }
</style>

<script>
  function showImageModal(partNumber, imageUrl) {
    document.getElementById('imageModalLabel').textContent = 'Item Image - ' + partNumber;
    document.getElementById('modalImage').src = imageUrl;
    var imageModal = new bootstrap.Modal(document.getElementById('imageModal'));
    imageModal.show();
  }

  @functions {
      public static string GetStatusBadgeColor(string status)
      {
          return status switch
          {
              "Pending" => "warning",
              "Implemented" => "success",
              "Failed" => "danger",
              _ => "secondary"
          };
      }
  }
</script>