@model InventorySystem.Models.ChangeOrder
@{
  ViewData["Title"] = "Change Order Details";
}

<div class="d-flex justify-content-between align-items-center mb-4">
  <h1><i class="fas fa-code-branch"></i> @Model.ChangeOrderNumber</h1>
  <div class="btn-group">
    <a href="/ChangeOrders" class="btn btn-outline-secondary">
      <i class="fas fa-arrow-left"></i> Back to Change Orders
    </a>
    @if (Model.Status == "Pending")
    {
      <a href="/ChangeOrderDocuments/Upload?changeOrderId=@Model.Id" class="btn btn-outline-info">
        <i class="fas fa-upload"></i> Upload Document
      </a>
      <form asp-action="Implement" method="post" style="display:inline;">
        <input type="hidden" name="id" value="@Model.Id" />
        <button type="submit" class="btn btn-success"
                onclick="return confirm('Implement this change order? This will create the new version and cannot be undone.')">
          <i class="fas fa-check"></i> Implement Change Order
        </button>
      </form>
    }
    @if (Model.EntityType == "Item")
    {
      <a href="/Items/Details/@Model.BaseEntityId" class="btn btn-outline-info">
        <i class="fas fa-cube"></i> View Item
      </a>
    }
    else if (Model.EntityType == "BOM")
    {
      <a href="/Boms/Details/@Model.BaseEntityId" class="btn btn-outline-info">
        <i class="fas fa-layer-group"></i> View BOM
      </a>
    }
  </div>
</div>

@if (TempData["SuccessMessage"] != null)
{
  <div class="alert alert-success alert-dismissible fade show">
    @TempData["SuccessMessage"]
    <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
  </div>
}

@if (TempData["ErrorMessage"] != null)
{
  <div class="alert alert-danger alert-dismissible fade show">
    @TempData["ErrorMessage"]
    <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
  </div>
}

@if (TempData["WarningMessage"] != null)
{
  <div class="alert alert-warning alert-dismissible fade show">
    @TempData["WarningMessage"]
    <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
  </div>
}

<div class="row">
  <div class="col-md-8">
    <div class="card">
      <div class="card-header d-flex justify-content-between align-items-center">
        <h5><i class="fas fa-info-circle"></i> Change Order Information</h5>
        @{
          var statusBadgeClass = Model.Status switch
          {
            "Pending" => "warning",
            "Implemented" => "success",
            "Cancelled" => "danger",
            _ => "secondary"
          };
        }
        <span class="badge bg-@statusBadgeClass fs-6">@Model.Status</span>
      </div>
      <div class="card-body">
        <dl class="row">
          <dt class="col-sm-3">Change Order #:</dt>
          <dd class="col-sm-9">
            <strong>@Model.ChangeOrderNumber</strong>
          </dd>

          <dt class="col-sm-3">Entity:</dt>
          <dd class="col-sm-9">
            <div class="d-flex align-items-center">
              @{
                var entityTypeBadgeClass = Model.EntityType == "Item" ? "primary" : "info";
              }
              <span class="badge bg-@entityTypeBadgeClass">@Model.EntityType</span>
              <span class="ms-2">@Model.PreviousVersion → @Model.NewVersion</span>
            </div>
          </dd>

          <dt class="col-sm-3">Status:</dt>
          <dd class="col-sm-9">
            <span class="badge bg-@statusBadgeClass">@Model.Status</span>
          </dd>

          <dt class="col-sm-3">Created:</dt>
          <dd class="col-sm-9">
            @Model.CreatedDate.ToString("MM/dd/yyyy HH:mm") by @Model.CreatedBy
          </dd>

          @if (Model.ImplementedDate.HasValue)
          {
            <dt class="col-sm-3">Implemented:</dt>
            <dd class="col-sm-9">
              @Model.ImplementedDate.Value.ToString("MM/dd/yyyy HH:mm") by @Model.ImplementedBy
            </dd>
          }

          @if (Model.CancelledDate.HasValue)
          {
            <dt class="col-sm-3">Cancelled:</dt>
            <dd class="col-sm-9">
              @Model.CancelledDate.Value.ToString("MM/dd/yyyy HH:mm") by @Model.CancelledBy
            </dd>
          }

          @if (!string.IsNullOrEmpty(Model.Description))
          {
            <dt class="col-sm-3">Description:</dt>
            <dd class="col-sm-9">@Model.Description</dd>
          }

          @if (!string.IsNullOrEmpty(Model.Reason))
          {
            <dt class="col-sm-3">Reason:</dt>
            <dd class="col-sm-9">@Model.Reason</dd>
          }

          @if (!string.IsNullOrEmpty(Model.ImpactAnalysis))
          {
            <dt class="col-sm-3">Impact Analysis:</dt>
            <dd class="col-sm-9">@Model.ImpactAnalysis</dd>
          }

          @if (!string.IsNullOrEmpty(Model.CancellationReason))
          {
            <dt class="col-sm-3">Cancellation Reason:</dt>
            <dd class="col-sm-9">@Model.CancellationReason</dd>
          }
        </dl>
      </div>
    </div>

    <!-- Change Order Documents Section -->
    <div class="card mt-4">
      <div class="card-header d-flex justify-content-between align-items-center">
        <h5><i class="fas fa-file-alt"></i> Change Order Documents (@Model.DocumentCount)</h5>
        @if (Model.Status == "Pending")
        {
          <a href="/ChangeOrderDocuments/Upload?changeOrderId=@Model.Id" class="btn btn-sm btn-outline-success">
            <i class="fas fa-plus"></i> Add Document
          </a>
        }
      </div>
      <div class="card-body">
        @if (Model.HasDocuments)
        {
          <div class="list-group list-group-flush">
            @foreach (var doc in Model.ChangeOrderDocuments)
            {
              <div class="list-group-item d-flex justify-content-between align-items-center">
                <div class="d-flex align-items-center">
                  <i class="@doc.FileTypeIcon fa-2x me-3"></i>
                  <div>
                    <h6 class="mb-1">@doc.DocumentName</h6>
                    <small class="text-muted">
                      <strong>Type:</strong> @doc.DocumentType<br>
                      <strong>File:</strong> @doc.FileName (@doc.FileSizeFormatted)<br>
                      <strong>Uploaded:</strong> @doc.UploadedDate.ToString("MM/dd/yyyy HH:mm")
                    </small>
                    @if (!string.IsNullOrEmpty(doc.Description))
                    {
                      <br>
                      <small class="text-muted"><strong>Description:</strong> @doc.Description</small>
                    }
                  </div>
                </div>
                <div class="btn-group btn-group-sm">
                  <a href="/ChangeOrderDocuments/Download/@doc.Id" class="btn btn-outline-primary" target="_blank" title="Download">
                    <i class="fas fa-download"></i>
                  </a>
                  @if (Model.Status == "Pending")
                  {
                    <form asp-controller="ChangeOrderDocuments" asp-action="Delete" method="post" style="display:inline;">
                      <input type="hidden" name="id" value="@doc.Id" />
                      <button type="submit" class="btn btn-outline-danger"
                              onclick="return confirm('Delete this document? This action cannot be undone.')"
                              title="Delete Document">
                        <i class="fas fa-trash"></i>
                      </button>
                    </form>
                  }
                </div>
              </div>
            }
          </div>
        }
        else
        {
          <div class="text-center py-4">
            <i class="fas fa-file-alt fa-3x text-muted mb-3"></i>
            <h6 class="text-muted">No Documents Uploaded</h6>
            <p class="text-muted">
              @if (Model.Status == "Pending")
              {
                <span>Upload supporting documents for this change order such as ECNs, revised drawings, specifications, or test reports.</span>
              }
              else
              {
                <span>No documents were uploaded for this change order.</span>
              }
            </p>
            @if (Model.Status == "Pending")
            {
              <a href="/ChangeOrderDocuments/Upload?changeOrderId=@Model.Id" class="btn btn-outline-success">
                <i class="fas fa-upload"></i> Upload First Document
              </a>
            }
          </div>
        }
      </div>
    </div>

    <!-- Related Entity Details Section -->
    <div class="card mt-4">
      <div class="card-header">
        <h6><i class="fas fa-@(Model.EntityType == "Item" ? "cube" : "layer-group")"></i> @Model.EntityType Details</h6>
      </div>
      <div class="card-body">
        @if (Model.EntityType == "Item" && Model.BaseItem != null)
        {
          <dl class="row mb-0">
            <dt class="col-sm-5">Part Number:</dt>
            <dd class="col-sm-7"><strong>@Model.BaseItem.PartNumber</strong></dd>

            <dt class="col-sm-5">Description:</dt>
            <dd class="col-sm-7">@Model.BaseItem.Description</dd>

            <dt class="col-sm-5">Current Version:</dt>
            <dd class="col-sm-7">
              <span class="badge bg-primary">@Model.BaseItem.Version</span>
            </dd>

            <dt class="col-sm-5">Item Type:</dt>
            <dd class="col-sm-7">@Model.BaseItem.ItemTypeDisplayName</dd>

            @if (Model.BaseItem.TrackInventory)
            {
              <dt class="col-sm-5">Current Stock:</dt>
              <dd class="col-sm-7">
                @{
                  var stockBadgeClass = Model.BaseItem.CurrentStock > Model.BaseItem.MinimumStock ? "success" : "warning";
                }
                <span class="badge bg-@stockBadgeClass">
                  @Model.BaseItem.CurrentStock
                </span>
              </dd>
            }
          </dl>
        }
        else if (Model.EntityType == "BOM" && Model.BaseBom != null)
        {
          <dl class="row mb-0">
            <dt class="col-sm-5">BOM Name:</dt>
            <dd class="col-sm-7"><strong>@Model.BaseBom.BomNumber</strong></dd>

            <dt class="col-sm-5">Description:</dt>
            <dd class="col-sm-7">@Model.BaseBom.Description</dd>

            <dt class="col-sm-5">Current Version:</dt>
            <dd class="col-sm-7">
              <span class="badge bg-info">@Model.BaseBom.Version</span>
            </dd>

            @if (!string.IsNullOrEmpty(Model.BaseBom.AssemblyPartNumber))
            {
              <dt class="col-sm-5">Assembly P/N:</dt>
              <dd class="col-sm-7">@Model.BaseBom.AssemblyPartNumber</dd>
            }

            <dt class="col-sm-5">Components:</dt>
            <dd class="col-sm-7">
              <span class="badge bg-secondary">@Model.BaseBom.BomItems.Count</span>
            </dd>
          </dl>
        }
        else
        {
          <p class="text-muted">Entity information not available.</p>
        }
      </div>
    </div>

    <!-- Implementation Results Section (if implemented) -->
    @if (Model.Status == "Implemented" && (Model.NewItem != null || Model.NewBom != null))
    {
      <div class="card mt-4">
        <div class="card-header">
          <h6><i class="fas fa-check-circle text-success"></i> Implementation Results</h6>
        </div>
        <div class="card-body">
          @if (Model.NewItem != null)
          {
            <div class="alert alert-success">
              <i class="fas fa-cube"></i>
              <strong>New Item Version Created:</strong>
              <a href="/Items/Details/@Model.NewItem.Id" class="alert-link">
                @Model.NewItem.PartNumber (Version @Model.NewItem.Version)
              </a>
            </div>
          }
          @if (Model.NewBom != null)
          {
            <div class="alert alert-success">
              <i class="fas fa-layer-group"></i>
              <strong>New BOM Version Created:</strong>
              <a href="/Boms/Details/@Model.NewBom.Id" class="alert-link">
                @Model.NewBom.BomNumber (Version @Model.NewBom.Version)
              </a>
            </div>
          }
        </div>
      </div>
    }
  </div>

  <div class="col-md-4">
    <div class="card">
      <div class="card-header">
        <h6><i class="fas fa-timeline"></i> Change Order Actions</h6>
      </div>
      <div class="card-body">
        @if (Model.Status == "Pending")
        {
          <div class="d-grid gap-2">
            <a href="/ChangeOrderDocuments/Upload?changeOrderId=@Model.Id" class="btn btn-outline-info">
              <i class="fas fa-upload"></i> Upload Document
            </a>

            <form asp-action="Implement" method="post">
              <input type="hidden" name="id" value="@Model.Id" />
              <button type="submit" class="btn btn-success w-100"
                      onclick="return confirm('Implement this change order?\n\nThis will:\n- Create the new version\n- Update the entity\n- Mark this change order as implemented\n\nThis action cannot be undone.')">
                <i class="fas fa-check"></i> Implement Change Order
              </button>
            </form>

            <form asp-action="Cancel" method="post">
              <input type="hidden" name="id" value="@Model.Id" />
              <button type="submit" class="btn btn-outline-danger w-100"
                      onclick="return confirm('Cancel this change order?\n\nThis action cannot be undone.')">
                <i class="fas fa-times"></i> Cancel Change Order
              </button>
            </form>
          </div>
        }
        else if (Model.Status == "Implemented")
        {
          <div class="alert alert-success">
            <i class="fas fa-check-circle"></i>
            <strong>Implemented</strong><br>
            This change order has been successfully implemented.
          </div>
          @if (Model.NewItem != null || Model.NewBom != null)
          {
            <div class="d-grid">
              @if (Model.NewItem != null)
              {
                <a href="/Items/Details/@Model.NewItem.Id" class="btn btn-outline-primary mb-2">
                  <i class="fas fa-cube"></i> View New Item Version
                </a>
              }
              @if (Model.NewBom != null)
              {
                <a href="/Boms/Details/@Model.NewBom.Id" class="btn btn-outline-primary">
                  <i class="fas fa-layer-group"></i> View New BOM Version
                </a>
              }
            </div>
          }
        }
        else if (Model.Status == "Cancelled")
        {
          <div class="alert alert-danger">
            <i class="fas fa-times-circle"></i>
            <strong>Cancelled</strong><br>
            This change order was cancelled and will not be implemented.
          </div>
        }
      </div>
    </div>

    <div class="card mt-3">
      <div class="card-header">
        <h6><i class="fas fa-info-circle"></i> Quick Info</h6>
      </div>
      <div class="card-body">
        <dl class="row small">
          <dt class="col-sm-5">Entity Type:</dt>
          <dd class="col-sm-7">@Model.EntityType</dd>

          <dt class="col-sm-5">Version Change:</dt>
          <dd class="col-sm-7">@Model.PreviousVersion → @Model.NewVersion</dd>

          <dt class="col-sm-5">Documents:</dt>
          <dd class="col-sm-7">@Model.DocumentCount</dd>

          <dt class="col-sm-5">Created:</dt>
          <dd class="col-sm-7">@Model.CreatedDate.ToString("MM/dd/yyyy")</dd>

          @if (Model.ImplementedDate.HasValue)
          {
            <dt class="col-sm-5">Implemented:</dt>
            <dd class="col-sm-7">@Model.ImplementedDate.Value.ToString("MM/dd/yyyy")</dd>
          }
        </dl>
      </div>
    </div>

    <!-- Change Timeline Card -->
    <div class="card mt-3">
      <div class="card-header">
        <h6><i class="fas fa-clock"></i> Change Timeline</h6>
      </div>
      <div class="card-body">
        <div class="timeline">
          <div class="timeline-item">
            <div class="timeline-marker bg-primary"></div>
            <div class="timeline-content">
              <h6 class="timeline-title">Created</h6>
              <p class="timeline-text">@Model.CreatedDate.ToString("MM/dd/yyyy HH:mm")</p>
              <p class="timeline-text text-muted">by @Model.CreatedBy</p>
            </div>
          </div>

          @if (Model.ImplementedDate.HasValue)
          {
            <div class="timeline-item">
              <div class="timeline-marker bg-success"></div>
              <div class="timeline-content">
                <h6 class="timeline-title">Implemented</h6>
                <p class="timeline-text">@Model.ImplementedDate.Value.ToString("MM/dd/yyyy HH:mm")</p>
                <p class="timeline-text text-muted">by @Model.ImplementedBy</p>
              </div>
            </div>
          }

          @if (Model.CancelledDate.HasValue)
          {
            <div class="timeline-item">
              <div class="timeline-marker bg-danger"></div>
              <div class="timeline-content">
                <h6 class="timeline-title">Cancelled</h6>
                <p class="timeline-text">@Model.CancelledDate.Value.ToString("MM/dd/yyyy HH:mm")</p>
                <p class="timeline-text text-muted">by @Model.CancelledBy</p>
                @if (!string.IsNullOrEmpty(Model.CancellationReason))
                {
                  <p class="timeline-text"><em>@Model.CancellationReason</em></p>
                }
              </div>
            </div>
          }
        </div>
      </div>
    </div>
  </div>
</div>

<style>
  .timeline {
    position: relative;
    padding-left: 30px;
  }

    .timeline::before {
      content: '';
      position: absolute;
      left: 15px;
      top: 0;
      bottom: 0;
      width: 2px;
      background: #dee2e6;
    }

  .timeline-item {
    position: relative;
    margin-bottom: 20px;
  }

  .timeline-marker {
    position: absolute;
    left: -37px;
    top: 5px;
    width: 12px;
    height: 12px;
    border-radius: 50%;
    border: 2px solid #fff;
  }

  .timeline-content {
    padding-left: 10px;
  }

  .timeline-title {
    margin-bottom: 5px;
    font-size: 0.9rem;
    font-weight: 600;
  }

  .timeline-text {
    margin-bottom: 3px;
    font-size: 0.8rem;
  }
</style>