@model InventorySystem.Models.ChangeOrder
@{
  ViewData["Title"] = "Change Order Details";
}

<div class="d-flex justify-content-between align-items-center mb-4">
  <h1><i class="fas fa-code-branch"></i> @Model.ChangeOrderNumber</h1>
  <div class="btn-group">
    <a href="/ChangeOrders" class="btn btn-outline-secondary">
      <i class="fas fa-arrow-left"></i> Back to Change Orders
    </a>
    @if (Model.Status == "Pending")
    {
      <form asp-action="Implement" method="post" style="display:inline;">
        <input type="hidden" name="id" value="@Model.Id" />
        <button type="submit" class="btn btn-success"
                onclick="return confirm('Implement this change order? This will create the new version and cannot be undone.')">
          <i class="fas fa-check"></i> Implement Change Order
        </button>
      </form>
    }
    @if (Model.EntityType == "Item")
    {
      <a href="/Items/Details/@Model.BaseEntityId" class="btn btn-outline-info">
        <i class="fas fa-cube"></i> View Item
      </a>
    }
    else if (Model.EntityType == "BOM")
    {
      <a href="/Boms/Details/@Model.BaseEntityId" class="btn btn-outline-info">
        <i class="fas fa-layer-group"></i> View BOM
      </a>
    }
  </div>
</div>

@if (TempData["SuccessMessage"] != null)
{
  <div class="alert alert-success alert-dismissible fade show">
    @TempData["SuccessMessage"]
    <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
  </div>
}

@if (TempData["ErrorMessage"] != null)
{
  <div class="alert alert-danger alert-dismissible fade show">
    @TempData["ErrorMessage"]
    <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
  </div>
}

@if (TempData["WarningMessage"] != null)
{
  <div class="alert alert-warning alert-dismissible fade show">
    @TempData["WarningMessage"]
    <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
  </div>
}

<div class="row">
  <div class="col-md-8">
    <div class="card">
      <div class="card-header d-flex justify-content-between align-items-center">
        <h5><i class="fas fa-info-circle"></i> Change Order Information</h5>
        <span class="badge bg-@(GetStatusBadgeColor(Model.Status)) fs-6">@Model.Status</span>
      </div>
      <div class="card-body">
        <dl class="row">
          <dt class="col-sm-3">Change Order #:</dt>
          <dd class="col-sm-9">
            <strong>@Model.ChangeOrderNumber</strong>
          </dd>

          <dt class="col-sm-3">Entity:</dt>
          <dd class="col-sm-9">
            <div class="d-flex align-items-center">
              <span class="badge bg-@(Model.EntityType == "Item" ? "primary" : "info") me-2">
                @Model.EntityType
              </span>
              <div>
                @if (Model.EntityType == "Item" && Model.RelatedItem != null)
                {
                  <strong>@Model.RelatedItem.PartNumber</strong>
                
                  <br>
                  <small class="text-muted">@Model.RelatedItem.Description</small>
                }
                else if (Model.EntityType == "BOM" && Model.RelatedBom != null)
                {
                  <strong>@Model.RelatedBom.Name</strong>
                
                  <br>
                  <small class="text-muted">@Model.RelatedBom.Description</small>
                }
                else
                {
                  <span class="text-muted">ID: @Model.BaseEntityId</span>
                }
              </div>
            </div>
          </dd>

          <dt class="col-sm-3">Version Change:</dt>
          <dd class="col-sm-9">
            @if (!string.IsNullOrEmpty(Model.PreviousVersion))
            {
              <span class="text-muted">@Model.PreviousVersion</span>
              <i class="fas fa-arrow-right mx-2"></i>
            }
            <span class="fw-bold text-success">@Model.NewVersion</span>
          </dd>

          <dt class="col-sm-3">Created By:</dt>
          <dd class="col-sm-9">@Model.CreatedBy</dd>

          <dt class="col-sm-3">Created Date:</dt>
          <dd class="col-sm-9">@Model.CreatedDate.ToString("MMMM dd, yyyy 'at' hh:mm tt")</dd>

          @if (Model.ImplementedDate.HasValue)
          {
            <dt class="col-sm-3">Implemented:</dt>
            <dd class="col-sm-9">
              @Model.ImplementedDate.Value.ToString("MMMM dd, yyyy 'at' hh:mm tt")
              <br>
              <small class="text-muted">by @Model.ImplementedBy</small>
            </dd>
          }

          @if (!string.IsNullOrEmpty(Model.Description))
          {
            <dt class="col-sm-3">Description:</dt>
            <dd class="col-sm-9">@Model.Description</dd>
          }

          @if (!string.IsNullOrEmpty(Model.Reason))
          {
            <dt class="col-sm-3">Reason for Change:</dt>
            <dd class="col-sm-9">@Model.Reason</dd>
          }

          @if (!string.IsNullOrEmpty(Model.DocumentPath))
          {
            <dt class="col-sm-3">Supporting Document:</dt>
            <dd class="col-sm-9">
              <a href="@Model.DocumentPath" class="btn btn-sm btn-outline-primary" target="_blank">
                <i class="fas fa-file"></i> View Document
              </a>
            </dd>
          }
        </dl>
      </div>
    </div>

    @if (Model.Status == "Pending")
    {
      <div class="card mt-4">
        <div class="card-header bg-warning text-dark">
          <h6><i class="fas fa-exclamation-triangle"></i> Pending Implementation</h6>
        </div>
        <div class="card-body">
          <p class="mb-3">This change order is pending implementation. When implemented, it will:</p>
          <ul>
            <li>Create a new <strong>@Model.EntityType</strong> version: <strong>@Model.NewVersion</strong></li>
            <li>Mark the new version as the current version</li>
            <li>Set all previous versions to historical status</li>
            <li>Initialize the new version with no design documents or components (to be added separately)</li>
          </ul>
          <div class="mt-3">
            <form asp-action="Implement" method="post" style="display:inline;">
              <input type="hidden" name="id" value="@Model.Id" />
              <button type="submit" class="btn btn-warning"
                      onclick="return confirm('Are you sure you want to implement this change order? This action cannot be undone.')">
                <i class="fas fa-check"></i> Implement Now
              </button>
            </form>
          </div>
        </div>
      </div>
    }
    else if (Model.Status == "Implemented")
    {
      <div class="card mt-4">
        <div class="card-header bg-success text-white">
          <h6><i class="fas fa-check-circle"></i> Successfully Implemented</h6>
        </div>
        <div class="card-body">
          <p class="mb-2">This change order was successfully implemented on <strong>@Model.ImplementedDate?.ToString("MMMM dd, yyyy 'at' hh:mm tt")</strong></p>
          <p class="mb-3">The new version <strong>@Model.NewVersion</strong> is now available and marked as the current version.</p>
          <div class="mt-3">
            @if (Model.EntityType == "Item")
            {
              <a href="/Items/Details/@Model.BaseEntityId" class="btn btn-success">
                <i class="fas fa-cube"></i> View Current Item Version
              </a>
            }
            else if (Model.EntityType == "BOM")
            {
              <a href="/Boms/Details/@Model.BaseEntityId" class="btn btn-success">
                <i class="fas fa-layer-group"></i> View Current BOM Version
              </a>
            }
          </div>
        </div>
      </div>
    }
    else if (Model.Status == "Failed")
    {
      <div class="card mt-4">
        <div class="card-header bg-danger text-white">
          <h6><i class="fas fa-times-circle"></i> Implementation Failed</h6>
        </div>
        <div class="card-body">
          <p class="mb-3 text-danger">This change order failed to implement. This may be due to:</p>
          <ul>
            <li>Version number conflicts</li>
            <li>Database constraints</li>
            <li>System errors during implementation</li>
          </ul>
          <p class="mb-0">Contact your system administrator for assistance.</p>
        </div>
      </div>
    }
  </div>

  <div class="col-md-4">
    <div class="card">
      <div class="card-header">
        <h6><i class="fas fa-history"></i> Timeline</h6>
      </div>
      <div class="card-body">
        <div class="timeline">
          <div class="timeline-item">
            <div class="timeline-marker bg-primary"></div>
            <div class="timeline-content">
              <h6 class="timeline-title">Change Order Created</h6>
              <p class="timeline-text">@Model.CreatedDate.ToString("MMM dd, yyyy 'at' h:mm tt")</p>
              <small class="text-muted">by @Model.CreatedBy</small>
            </div>
          </div>

          @if (Model.ImplementedDate.HasValue)
          {
            <div class="timeline-item">
              <div class="timeline-marker bg-success"></div>
              <div class="timeline-content">
                <h6 class="timeline-title">Change Order Implemented</h6>
                <p class="timeline-text">@Model.ImplementedDate.Value.ToString("MMM dd, yyyy 'at' h:mm tt")</p>
                <small class="text-muted">by @Model.ImplementedBy</small>
              </div>
            </div>
          }
        </div>
      </div>
    </div>

    <div class="card mt-3">
      <div class="card-header">
        <h6><i class="fas fa-info-circle"></i> Quick Info</h6>
      </div>
      <div class="card-body">
        <dl class="row">
          <dt class="col-sm-5">Status:</dt>
          <dd class="col-sm-7">
            <span class="badge bg-@(GetStatusBadgeColor(Model.Status))">@Model.Status</span>
          </dd>

          <dt class="col-sm-5">Entity:</dt>
          <dd class="col-sm-7">@Model.EntityType #@Model.BaseEntityId</dd>

          <dt class="col-sm-5">Version:</dt>
          <dd class="col-sm-7">@Model.NewVersion</dd>

          <dt class="col-sm-5">Days Open:</dt>
          <dd class="col-sm-7">
            @{
              var endDate = Model.ImplementedDate ?? DateTime.Now;
              var daysOpen = (endDate - Model.CreatedDate).Days;
            }
            @daysOpen day(s)
          </dd>
        </dl>
      </div>
    </div>
  </div>
</div>

<style>
  .timeline {
    position: relative;
    padding-left: 20px;
  }

    .timeline::before {
      content: '';
      position: absolute;
      left: 8px;
      top: 0;
      bottom: 0;
      width: 2px;
      background: #dee2e6;
    }

  .timeline-item {
    position: relative;
    margin-bottom: 20px;
  }

  .timeline-marker {
    position: absolute;
    left: -12px;
    width: 16px;
    height: 16px;
    border-radius: 50%;
    border: 2px solid white;
  }

  .timeline-content {
    margin-left: 20px;
  }

  .timeline-title {
    margin-bottom: 5px;
    font-size: 0.9rem;
  }

  .timeline-text {
    margin-bottom: 5px;
    font-size: 0.85rem;
  }
</style>

@functions {
  string GetStatusBadgeColor(string status)
  {
    return status switch
    {
      "Pending" => "warning",
      "Implemented" => "success",
      "Failed" => "danger",
      _ => "secondary"
    };
  }
}