@model IEnumerable<InventorySystem.Models.ChangeOrder>
@{
  ViewData["Title"] = "Change Orders";
}

<div class="d-flex justify-content-between align-items-center mb-4">
  <h1><i class="fas fa-code-branch"></i> Change Orders</h1>
  <div class="btn-group">
    <button type="button" class="btn btn-outline-secondary dropdown-toggle" data-bs-toggle="dropdown">
      <i class="fas fa-filter"></i> Filter
    </button>
    <ul class="dropdown-menu">
      <li><a class="dropdown-item" href="#" onclick="filterByStatus('')">All Statuses</a></li>
      <li><a class="dropdown-item" href="#" onclick="filterByStatus('Pending')">Pending</a></li>
      <li><a class="dropdown-item" href="#" onclick="filterByStatus('Implemented')">Implemented</a></li>
      <li><a class="dropdown-item" href="#" onclick="filterByStatus('Failed')">Failed</a></li>
      <li><a class="dropdown-item" href="#" onclick="filterByStatus('Cancelled')">Cancelled</a></li>
    </ul>
  </div>
</div>

@if (TempData["SuccessMessage"] != null)
{
  <div class="alert alert-success alert-dismissible fade show">
    @TempData["SuccessMessage"]
    <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
  </div>
}

@if (TempData["ErrorMessage"] != null)
{
  <div class="alert alert-danger alert-dismissible fade show">
    @TempData["ErrorMessage"]
    <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
  </div>
}

@if (TempData["WarningMessage"] != null)
{
  <div class="alert alert-warning alert-dismissible fade show">
    @TempData["WarningMessage"]
    <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
  </div>
}

<div class="card">
  <div class="card-header">
    <h5><i class="fas fa-list"></i> Change Order List</h5>
    <small class="text-muted">Click on any row to view change order details</small>
  </div>
  <div class="card-body">
    @if (Model?.Any() == true)
    {
      <div class="table-responsive">
        <table class="table table-hover" id="changeOrderTable">
          <thead class="table-dark">
            <tr>
              <th>Change Order #</th>
              <th>Entity & Description</th>
              <th>Version Change</th>
              <th>Status</th>
              <th>Created By</th>
              <th>Created Date</th>
              <th>Implemented</th>
              <th style="width: 180px;">Actions</th>
            </tr>
          </thead>
          <tbody>
            @foreach (var changeOrder in Model.OrderByDescending(co => co.CreatedDate))
            {
              <tr class="clickable-row" data-change-order-id="@changeOrder.Id"
                  data-status="@changeOrder.Status"
                  style="cursor: pointer;"
                  onclick="window.location.href='/ChangeOrders/Details/@changeOrder.Id'">
                <td>
                  <strong>@changeOrder.ChangeOrderNumber</strong>
                </td>
                <td>
                  <div class="d-flex align-items-center">
                    <span class="badge bg-@(changeOrder.EntityType == "Item" ? "primary" : "info") me-2">
                      @changeOrder.EntityType
                    </span>
                    <div>
                      @if (changeOrder.EntityType == "Item" && changeOrder.RelatedItem != null)
                      {
                        <strong>@changeOrder.RelatedItem.PartNumber</strong>
                        <br>
                        <small class="text-muted">@changeOrder.RelatedItem.Description</small>
                      }
                      else if (changeOrder.EntityType == "BOM" && changeOrder.RelatedBom != null)
                      {
                        <strong>@changeOrder.RelatedBom.Name</strong>
                        <br>
                        <small class="text-muted">@changeOrder.RelatedBom.Description</small>
                      }
                      else
                      {
                        <span class="text-muted">ID: @changeOrder.BaseEntityId</span>
                      }
                    </div>
                  </div>
                </td>
                <td>
                  @if (!string.IsNullOrEmpty(changeOrder.PreviousVersion))
                  {
                    <span class="text-muted">@changeOrder.PreviousVersion</span>
                    <i class="fas fa-arrow-right mx-1"></i>
                  }
                  <span class="fw-bold text-success">@changeOrder.NewVersion</span>
                </td>
                <td>
                  <span class="badge bg-@(GetStatusBadgeColor(changeOrder.Status))">
                    @changeOrder.Status
                  </span>
                </td>
                <td>@changeOrder.CreatedBy</td>
                <td>@changeOrder.CreatedDate.ToString("MM/dd/yyyy")</td>
                <td>
                  @if (changeOrder.ImplementedDate.HasValue)
                  {
                    <span>@changeOrder.ImplementedDate.Value.ToString("MM/dd/yyyy")</span>
                    <br>
                    <small class="text-muted">by @changeOrder.ImplementedBy</small>
                  }
                  else
                  {
                    <span class="text-muted">Not implemented</span>
                  }
                </td>
                <td>
                  <div class="btn-group btn-group-sm">
                    <a href="/ChangeOrders/Details/@changeOrder.Id" class="btn btn-outline-primary"
                       title="View Details" onclick="event.stopPropagation();">
                      <i class="fas fa-eye"></i>
                    </a>
                    @if (changeOrder.Status == "Pending")
                    {
                      <form asp-action="Implement" method="post" style="display:inline;"
                            onsubmit="event.stopPropagation();">
                        <input type="hidden" name="id" value="@changeOrder.Id" />
                        <button type="submit" class="btn btn-outline-success"
                                title="Implement Change Order"
                                onclick="return confirm('Implement this change order? This will create the new version and cannot be undone.')">
                          <i class="fas fa-check"></i>
                        </button>
                      </form>

                      <form asp-action="Cancel" method="post" style="display:inline;"
                            onsubmit="event.stopPropagation();">
                        <input type="hidden" name="id" value="@changeOrder.Id" />
                        <button type="submit" class="btn btn-outline-danger"
                                title="Cancel Change Order"
                                onclick="return confirm('Cancel this change order? This action cannot be undone.')">
                          <i class="fas fa-times"></i>
                        </button>
                      </form>
                    }
                    else
                    {
                      @* Show status-specific actions for non-pending change orders *@
                      @if (changeOrder.Status == "Implemented")
                      {
                        @if (changeOrder.EntityType == "Item")
                        {
                          <a href="/Items/Details/@changeOrder.BaseEntityId" class="btn btn-outline-info"
                             title="View Current Item" onclick="event.stopPropagation();">
                            <i class="fas fa-cube"></i>
                          </a>
                        }
                        else if (changeOrder.EntityType == "BOM")
                        {
                          <a href="/Boms/Details/@changeOrder.BaseEntityId" class="btn btn-outline-info"
                             title="View Current BOM" onclick="event.stopPropagation();">
                            <i class="fas fa-layer-group"></i>
                          </a>
                        }
                      }
                    }
                  </div>
                </td>
              </tr>
            }
          </tbody>
        </table>
      </div>
    }
    else
    {
      <div class="text-center py-5">
        <i class="fas fa-code-branch fa-3x text-muted mb-3"></i>
        <h5 class="text-muted">No Change Orders</h5>
        <p class="text-muted">No change orders have been created yet.</p>
        <div class="mt-3">
          <small class="text-muted">
            Change orders are created when you click "New Version" on any Item or BOM details page.
          </small>
        </div>
      </div>
    }
  </div>
</div>

<script>
  function filterByStatus(status) {
      const rows = document.querySelectorAll('#changeOrderTable tbody tr');

      rows.forEach(row => {
          if (status === '' || row.dataset.status === status) {
              row.style.display = '';
          } else {
              row.style.display = 'none';
          }
      });

      // Update filter button text
      const filterButton = document.querySelector('.dropdown-toggle');
      const statusText = status === '' ? 'All Statuses' : status;
      filterButton.innerHTML = `<i class="fas fa-filter"></i> ${statusText}`;
  }

  // Make table rows clickable
  document.addEventListener('DOMContentLoaded', function() {
      const clickableRows = document.querySelectorAll('.clickable-row');

      clickableRows.forEach(function(row) {
          row.addEventListener('click', function(e) {
              // Only proceed if the click wasn't on a button, form, or link
              if (e.target.closest('.btn-group') || e.target.closest('form') || e.target.closest('button') || e.target.closest('a')) {
                  return;
              }

              const changeOrderId = this.getAttribute('data-change-order-id');
              if (changeOrderId) {
                  window.location.href = '/ChangeOrders/Details/' + changeOrderId;
              }
          });

          // Add hover effect
          row.addEventListener('mouseenter', function() {
              if (!this.classList.contains('table-active')) {
                  this.style.backgroundColor = '#f8f9fa';
              }
          });

          row.addEventListener('mouseleave', function() {
              if (!this.classList.contains('table-active')) {
                  this.style.backgroundColor = '';
              }
          });
      });

      // Prevent action buttons from triggering row click
      const actionButtons = document.querySelectorAll('.btn-group button, .btn-group a');
      actionButtons.forEach(function(button) {
          button.addEventListener('click', function(e) {
              e.stopPropagation();
          });
      });
  });
</script>

<style>
  .clickable-row {
    transition: background-color 0.2s ease;
    cursor: pointer;
  }

    .clickable-row:hover {
      background-color: #f8f9fa !important;
    }

    .clickable-row:active {
      background-color: #e9ecef !important;
    }

    /* Ensure action buttons don't inherit pointer cursor */
    .clickable-row .btn-group {
      cursor: default;
    }

  /* Prevent text selection on clickable rows for better UX */
  .clickable-row {
    -webkit-user-select: none;
    -moz-user-select: none;
    -ms-user-select: none;
    user-select: none;
  }

    /* But allow text selection in specific areas */
    .clickable-row td:nth-child(1),
    .clickable-row td:nth-child(2) {
      -webkit-user-select: text;
      -moz-user-select: text;
      -ms-user-select: text;
      user-select: text;
    }

  /* Badge styling */
  .badge {
    font-size: 0.75em;
  }
</style>

@functions {
  string GetStatusBadgeColor(string status)
  {
    return status switch
    {
      "Pending" => "warning",
      "Implemented" => "success",
      "Failed" => "danger",
      "Cancelled" => "secondary",
      _ => "secondary"
    };
  }
}