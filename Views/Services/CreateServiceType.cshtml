@model InventorySystem.ViewModels.ServiceTypeViewModel
@{
  ViewData["Title"] = "Create Service Type";
}

<div class="d-flex justify-content-between align-items-center mb-4">
  <h1><i class="fas fa-plus-circle"></i> Create Service Type</h1>
  <div class="btn-group">
    <a href="@Url.Action("ServiceTypes")" class="btn btn-outline-secondary">
      <i class="fas fa-arrow-left"></i> Back to Service Types
    </a>
  </div>
</div>

@if (TempData["ErrorMessage"] != null)
{
  <div class="alert alert-danger alert-dismissible fade show">
    <i class="fas fa-exclamation-circle"></i> @TempData["ErrorMessage"]
    <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
  </div>
}

<div class="row">
  <div class="col-lg-8">
    <form asp-action="CreateServiceType" method="post" class="needs-validation" novalidate>
      <div class="card">
        <div class="card-header">
          <h5><i class="fas fa-info-circle"></i> Service Type Information</h5>
        </div>
        <div class="card-body">
          <div class="row">
            <div class="col-md-6 mb-3">
              <label asp-for="ServiceName" class="form-label">
                <i class="fas fa-tag"></i> Service Name <span class="text-danger">*</span>
              </label>
              <input asp-for="ServiceName" class="form-control" required />
              <span asp-validation-for="ServiceName" class="text-danger"></span>
            </div>

            <div class="col-md-6 mb-3">
              <label asp-for="ServiceCode" class="form-label">
                <i class="fas fa-barcode"></i> Service Code
              </label>
              <input asp-for="ServiceCode" class="form-control" placeholder="e.g., CAL001, REP002" />
              <div class="form-text">Optional short code for quick reference</div>
              <span asp-validation-for="ServiceCode" class="text-danger"></span>
            </div>
          </div>

          <div class="mb-3">
            <label asp-for="ServiceCategory" class="form-label">
              <i class="fas fa-folder"></i> Service Category
            </label>
            <select asp-for="ServiceCategory" class="form-select">
              <option value="">Select category...</option>
              <option value="Calibration">Calibration</option>
              <option value="Repair">Repair</option>
              <option value="Maintenance">Maintenance</option>
              <option value="Installation">Installation</option>
              <option value="Training">Training</option>
              <option value="Consultation">Consultation</option>
              <option value="Custom">Custom</option>
            </select>
            <span asp-validation-for="ServiceCategory" class="text-danger"></span>
          </div>

          <div class="mb-3">
            <label asp-for="Description" class="form-label">
              <i class="fas fa-align-left"></i> Description
            </label>
            <textarea asp-for="Description" class="form-control" rows="3"
                      placeholder="Detailed description of the service..."></textarea>
            <span asp-validation-for="Description" class="text-danger"></span>
          </div>

          <div class="row">
            <div class="col-md-4 mb-3">
              <label asp-for="StandardHours" class="form-label">
                <i class="fas fa-clock"></i> Standard Hours <span class="text-danger">*</span>
              </label>
              <input asp-for="StandardHours" class="form-control" type="number" step="0.1" min="0" required
                     onchange="calculateEstimatedCost()" />
              <div class="form-text">Typical time to complete this service</div>
              <span asp-validation-for="StandardHours" class="text-danger"></span>
            </div>

            <div class="col-md-4 mb-3">
              <label asp-for="StandardRate" class="form-label">
                <i class="fas fa-dollar-sign"></i> Standard Rate <span class="text-danger">*</span>
              </label>
              <input asp-for="StandardRate" class="form-control" type="number" step="0.01" min="0" required
                     onchange="calculateEstimatedCost()" />
              <div class="form-text">Hourly rate for this service</div>
              <span asp-validation-for="StandardRate" class="text-danger"></span>
            </div>

            <div class="col-md-4 mb-3">
              <label class="form-label">
                <i class="fas fa-calculator"></i> Estimated Cost
              </label>
              <input id="estimatedCost" class="form-control" readonly />
              <div class="form-text">Calculated from hours × rate</div>
            </div>
          </div>

          <!-- Requirements Section -->
          <hr>
          <h6><i class="fas fa-clipboard-check"></i> Service Requirements</h6>

          <div class="row">
            <div class="col-md-6">
              <div class="form-check mb-3">
                <input asp-for="QcRequired" class="form-check-input" type="checkbox" />
                <label asp-for="QcRequired" class="form-check-label">
                  <i class="fas fa-search"></i> Quality Check Required
                </label>
                <div class="form-text">Service requires quality control verification</div>
              </div>

              <div class="form-check mb-3">
                <input asp-for="CertificateRequired" class="form-check-input" type="checkbox" />
                <label asp-for="CertificateRequired" class="form-check-label">
                  <i class="fas fa-certificate"></i> Certificate Required
                </label>
                <div class="form-text">Service requires certification document</div>
              </div>
            </div>

            <div class="col-md-6">
              <div class="form-check mb-3">
                <input asp-for="IsActive" class="form-check-input" type="checkbox" checked />
                <label asp-for="IsActive" class="form-check-label">
                  <i class="fas fa-toggle-on"></i> Active
                </label>
                <div class="form-text">Service type is available for new orders</div>
              </div>
            </div>
          </div>

          <!-- Sales Integration Section -->
          <hr>
          <h6><i class="fas fa-shopping-cart"></i> Sales Integration</h6>

          <div class="form-check mb-3">
            <input asp-for="CreateServiceItem" class="form-check-input" type="checkbox" checked />
            <label asp-for="CreateServiceItem" class="form-check-label">
              <i class="fas fa-cube"></i> Create corresponding service item for sales
            </label>
            <div class="form-text">Automatically creates a sellable service item that can be added to customer orders</div>
          </div>

          <div class="mb-3" id="serviceItemPreview">
            <label class="form-label">Generated Service Item</label>
            <div class="input-group">
              <span class="input-group-text">Part #:</span>
              <input id="generatedPartNumber" class="form-control" readonly />
              <span class="input-group-text">Price:</span>
              <input id="generatedPrice" class="form-control" readonly />
            </div>
            <div class="form-text">This service item will be available for sales teams to add to customer orders</div>
          </div>
        </div>
      </div>

      <!-- Action Buttons -->
      <div class="d-flex justify-content-between mt-4">
        <div>
          <a href="@Url.Action("ServiceTypes")" class="btn btn-outline-secondary">
            <i class="fas fa-times"></i> Cancel
          </a>
        </div>
        <div>
          <button type="submit" class="btn btn-success">
            <i class="fas fa-check"></i> Create Service Type
          </button>
        </div>
      </div>
    </form>
  </div>

  <!-- Help Panel -->
  <div class="col-lg-4">
    <div class="card">
      <div class="card-header">
        <h6><i class="fas fa-lightbulb"></i> Service Type Guidelines</h6>
      </div>
      <div class="card-body">
        <div class="mb-3">
          <h6 class="text-primary"><i class="fas fa-tag"></i> Naming</h6>
          <p class="small text-muted">Use clear, descriptive names that customers will understand. Examples: "Equipment Calibration", "Preventive Maintenance".</p>
        </div>

        <div class="mb-3">
          <h6 class="text-success"><i class="fas fa-clock"></i> Time Estimates</h6>
          <p class="small text-muted">Set realistic standard hours based on typical service duration. This helps with scheduling and pricing.</p>
        </div>

        <div class="mb-3">
          <h6 class="text-warning"><i class="fas fa-dollar-sign"></i> Pricing</h6>
          <p class="small text-muted">Consider your costs, expertise level required, and market rates when setting standard rates.</p>
        </div>

        <div class="mb-3">
          <h6 class="text-info"><i class="fas fa-clipboard-check"></i> Requirements</h6>
          <p class="small text-muted">Enable quality checks for critical services. Certificates may be required for compliance or customer documentation.</p>
        </div>
      </div>
    </div>

    <!-- Preview Card -->
    <div class="card mt-3">
      <div class="card-header">
        <h6><i class="fas fa-eye"></i> Service Type Preview</h6>
      </div>
      <div class="card-body">
        <div id="servicePreview">
          <div class="text-center text-muted">
            <i class="fas fa-info-circle fa-2x mb-2"></i>
            <p>Fill in the form to see a preview</p>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>

@section Scripts {
  @{
    await Html.RenderPartialAsync("_ValidationScriptsPartial");
  }
  <script>
    function calculateEstimatedCost() {
        const hours = parseFloat(document.querySelector('[name="StandardHours"]').value) || 0;
        const rate = parseFloat(document.querySelector('[name="StandardRate"]').value) || 0;
        const estimatedCost = hours * rate;

        document.getElementById('estimatedCost').value = '$' + estimatedCost.toFixed(2);
        updatePreview();
    }

    function updatePreview() {
        const serviceName = document.querySelector('[name="ServiceName"]').value;
        const serviceCode = document.querySelector('[name="ServiceCode"]').value;
        const category = document.querySelector('[name="ServiceCategory"]').value;
        const description = document.querySelector('[name="Description"]').value;
        const hours = document.querySelector('[name="StandardHours"]').value;
        const rate = document.querySelector('[name="StandardRate"]').value;
        const qcRequired = document.querySelector('[name="QcRequired"]').checked;
        const certRequired = document.querySelector('[name="CertificateRequired"]').checked;
        const isActive = document.querySelector('[name="IsActive"]').checked;
        const createServiceItem = document.querySelector('[name="CreateServiceItem"]').checked;

        if (!serviceName && !hours && !rate) {
            document.getElementById('servicePreview').innerHTML = `
                <div class="text-center text-muted">
                    <i class="fas fa-info-circle fa-2x mb-2"></i>
                    <p>Fill in the form to see a preview</p>
                </div>
            `;
            return;
        }

        const estimatedCost = (parseFloat(hours) || 0) * (parseFloat(rate) || 0);

        const previewHtml = `
            <div class="text-center">
                <h6 class="text-primary">${serviceName || 'Service Name'}</h6>
                ${serviceCode ? `<div class="small text-muted mb-2">Code: <code>${serviceCode}</code></div>` : ''}
                ${category ? `<span class="badge bg-secondary mb-2">${category}</span>` : ''}
                ${description ? `<p class="small text-muted">${description}</p>` : ''}

                <hr class="my-2">

                <div class="row text-center">
                    <div class="col-6">
                        <div class="small text-muted">Standard Hours</div>
                        <div class="fw-bold">${hours || '0'}</div>
                    </div>
                    <div class="col-6">
                        <div class="small text-muted">Hourly Rate</div>
                        <div class="fw-bold">$${rate || '0'}</div>
                    </div>
                </div>

                <div class="mt-2">
                    <div class="small text-muted">Estimated Cost</div>
                    <div class="fw-bold text-success fs-5">$${estimatedCost.toFixed(2)}</div>
                </div>

                <div class="mt-2">
                    ${qcRequired ? '<span class="badge bg-warning text-dark me-1">QC</span>' : ''}
                    ${certRequired ? '<span class="badge bg-info me-1">Cert</span>' : ''}
                    ${isActive ? '<span class="badge bg-success">Active</span>' : '<span class="badge bg-secondary">Inactive</span>'}
                </div>

                <div class="mt-3">
                    ${createServiceItem ? '<span class="badge bg-primary">Auto Item</span>' : ''}
                </div>
            </div>
        `;

        document.getElementById('servicePreview').innerHTML = previewHtml;
    }

    // Initialize preview and calculation
    document.addEventListener('DOMContentLoaded', function() {
        // Add event listeners to form fields for real-time preview
        const formFields = ['ServiceName', 'ServiceCode', 'ServiceCategory', 'Description', 'StandardHours', 'StandardRate', 'QcRequired', 'CertificateRequired', 'IsActive', 'CreateServiceItem'];

        formFields.forEach(fieldName => {
            const field = document.querySelector(`[name="${fieldName}"]`);
            if (field) {
                field.addEventListener('input', updatePreview);
                field.addEventListener('change', updatePreview);
            }
        });

        // Initial calculation
        calculateEstimatedCost();
        updatePreview();
    });

    // Form validation
    document.addEventListener('DOMContentLoaded', function() {
        const form = document.querySelector('.needs-validation');

        form.addEventListener('submit', function(event) {
            if (!form.checkValidity()) {
                event.preventDefault();
                event.stopPropagation();
            }
            form.classList.add('was-validated');
        });
    });
  </script>
}