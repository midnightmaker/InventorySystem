```razor
@model InventorySystem.ViewModels.IncomeStatementViewModel
@{
    ViewData["Title"] = "Income Statement";
}

<div class="d-flex justify-content-between align-items-center mb-4">
    <h1><i class="fas fa-file-invoice"></i> Income Statement</h1>
    <div class="btn-group">
        <a href="/Expenses/Reports" class="btn btn-outline-secondary">
            <i class="fas fa-chart-bar"></i> Expense Reports
        </a>
        <a href="/Expenses/TaxReports" class="btn btn-outline-secondary">
            <i class="fas fa-calculator"></i> Tax Reports
        </a>
        <button class="btn btn-success" onclick="exportIncomeStatement()">
            <i class="fas fa-download"></i> Export PDF
        </button>
    </div>
</div>

@if (TempData["ErrorMessage"] != null)
{
    <div class="alert alert-danger alert-dismissible fade show">
        @TempData["ErrorMessage"]
        <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
    </div>
}

<!-- Date Range Filter -->
<div class="row mb-4">
    <div class="col-md-12">
        <div class="card">
            <div class="card-header">
                <h5><i class="fas fa-calendar-alt"></i> Reporting Period</h5>
            </div>
            <div class="card-body">
                <form method="get" asp-action="IncomeStatement">
                    <div class="row">
                        <div class="col-md-4">
                            <label class="form-label">Start Date</label>
                            <input type="date" name="startDate" class="form-control" 
                                   value="@Model.StartDate.ToString("yyyy-MM-dd")" />
                        </div>
                        <div class="col-md-4">
                            <label class="form-label">End Date</label>
                            <input type="date" name="endDate" class="form-control" 
                                   value="@Model.EndDate.ToString("yyyy-MM-dd")" />
                        </div>
                        <div class="col-md-4 d-flex align-items-end">
                            <button type="submit" class="btn btn-primary">
                                <i class="fas fa-refresh"></i> Update Report
                            </button>
                        </div>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>

<!-- Income Statement Report -->
<div class="row">
    <div class="col-md-12">
        <div class="card">
            <div class="card-header">
                <h5><i class="fas fa-file-invoice"></i> Income Statement</h5>
                <small class="text-muted">
                    Period: @Model.StartDate.ToString("MMM dd, yyyy") to @Model.EndDate.ToString("MMM dd, yyyy")
                </small>
            </div>
            <div class="card-body">
                <div class="table-responsive">
                    <table class="table table-borderless">
                        <tbody>
                            <!-- REVENUE SECTION -->
                            <tr class="table-primary">
                                <td colspan="2"><strong>REVENUE</strong></td>
                            </tr>
                            <tr>
                                <td class="ps-3">Total Revenue</td>
                                <td class="text-end"><strong>@Model.TotalRevenue.ToString("C")</strong></td>
                            </tr>
                            
                            <!-- COST OF GOODS SOLD -->
                            <tr class="table-warning">
                                <td colspan="2"><strong>COST OF GOODS SOLD</strong></td>
                            </tr>
                            <tr>
                                <td class="ps-3">Direct Costs (COGS)</td>
                                <td class="text-end">(@Model.CostOfGoodsSold.ToString("C"))</td>
                            </tr>
                            
                            <!-- GROSS PROFIT -->
                            <tr class="table-success border-top">
                                <td><strong>GROSS PROFIT</strong></td>
                                <td class="text-end">
                                    <strong class="@Model.ProfitabilityClass">@Model.GrossProfit.ToString("C")</strong>
                                    <br>
                                    <small class="text-muted">@Model.GrossProfitMargin.ToString("F1")% margin</small>
                                </td>
                            </tr>
                            
                            <!-- OPERATING EXPENSES -->
                            <tr class="table-danger">
                                <td colspan="2"><strong>OPERATING EXPENSES</strong></td>
                            </tr>
                            @foreach (var expense in Model.ExpenseBreakdown)
                            {
                                <tr>
                                    <td class="ps-3">@expense.CategoryDisplayName</td>
                                    <td class="text-end">(@expense.TotalAmount.ToString("C"))</td>
                                </tr>
                            }
                            <tr class="border-top">
                                <td class="ps-3"><strong>Total Operating Expenses</strong></td>
                                <td class="text-end"><strong>(@Model.TotalOperatingExpenses.ToString("C"))</strong></td>
                            </tr>
                            
                            <!-- NET INCOME -->
                            <tr class="table-info border-top border-bottom border-3">
                                <td><strong>NET INCOME</strong></td>
                                <td class="text-end">
                                    <h5 class="@Model.ProfitabilityClass mb-0">
                                        <strong>@Model.NetIncome.ToString("C")</strong>
                                    </h5>
                                    <small class="text-muted">@Model.NetProfitMargin.ToString("F1")% margin</small>
                                </td>
                            </tr>
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Performance Summary Cards -->
<div class="row mt-4 mb-4">
    <div class="col-md-3">
        <div class="card @(Model.IsProfitable ? "border-success" : "border-danger")">
            <div class="card-body text-center">
                <h5 class="@Model.ProfitabilityClass">
                    <i class="fas fa-@(Model.IsProfitable ? "arrow-up" : "arrow-down")"></i>
                    @Model.ProfitabilityStatus
                </h5>
                <p class="text-muted mb-0">Business Performance</p>
            </div>
        </div>
    </div>
    <div class="col-md-3">
        <div class="card border-primary">
            <div class="card-body text-center">
                <h5 class="text-primary">@Model.GrossProfitMargin.ToString("F1")%</h5>
                <p class="text-muted mb-0">Gross Profit Margin</p>
            </div>
        </div>
    </div>
    <div class="col-md-3">
        <div class="card border-info">
            <div class="card-body text-center">
                <h5 class="text-info">@Model.NetProfitMargin.ToString("F1")%</h5>
                <p class="text-muted mb-0">Net Profit Margin</p>
            </div>
        </div>
    </div>
    <div class="col-md-3">
        <div class="card border-secondary">
            <div class="card-body text-center">
                <h5 class="text-secondary">
                    @((Model.TotalOperatingExpenses / Model.TotalRevenue * 100).ToString("F1"))%
                </h5>
                <p class="text-muted mb-0">Operating Expense Ratio</p>
            </div>
        </div>
    </div>
</div>

<!-- Expense Breakdown Details -->
<div class="row">
    <div class="col-md-12">
        <div class="card">
            <div class="card-header">
                <h5><i class="fas fa-chart-pie"></i> Operating Expense Breakdown</h5>
            </div>
            <div class="card-body">
                @if (Model.ExpenseBreakdown.Any())
                {
                    <div class="row">
                        @foreach (var expense in Model.ExpenseBreakdown)
                        {
                            var percentage = Model.TotalOperatingExpenses > 0 ? (expense.TotalAmount / Model.TotalOperatingExpenses) * 100 : 0;
                            <div class="col-md-4 mb-3">
                                <div class="card">
                                    <div class="card-body">
                                        <h6 class="card-title">@expense.CategoryDisplayName</h6>
                                        <h4 class="text-danger">@expense.TotalAmount.ToString("C")</h4>
                                        <div class="progress" style="height: 10px;">
                                            <div class="progress-bar bg-danger" role="progressbar" 
                                                 style="width: @percentage.ToString("F0")%"></div>
                                        </div>
                                        <small class="text-muted">@percentage.ToString("F1")% of total expenses</small>
                                    </div>
                                </div>
                            </div>
                        }
                    </div>
                }
                else
                {
                    <p class="text-muted text-center">No operating expenses recorded for this period</p>
                }
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        function exportIncomeStatement() {
            // TODO: Implement PDF export functionality
            alert('PDF export functionality coming soon!');
        }
    </script>
}
```