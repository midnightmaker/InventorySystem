@model InventorySystem.Models.Item
@{
  ViewData["Title"] = "Edit Item";
}

<div class="d-flex justify-content-between align-items-center mb-4">
  <h1><i class="fas fa-edit"></i> Edit Item</h1>
  <div class="btn-group">
    <a href="/Items/Details/@Model.Id" class="btn btn-outline-secondary">
      <i class="fas fa-arrow-left"></i> Back to Details
    </a>
    <a href="/Items" class="btn btn-outline-info">
      <i class="fas fa-list"></i> All Items
    </a>
  </div>
</div>

@if (TempData["SuccessMessage"] != null)
{
  <div class="alert alert-success alert-dismissible fade show">
    @TempData["SuccessMessage"]
    <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
  </div>
}

@if (TempData["ErrorMessage"] != null)
{
  <div class="alert alert-danger alert-dismissible fade show">
    @TempData["ErrorMessage"]
    <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
  </div>
}

<div class="row">
  <div class="col-md-8">
    <form asp-action="Edit" enctype="multipart/form-data" id="editItemForm">
      @Html.HiddenFor(model => model.Id)
      @Html.HiddenFor(model => model.CreatedDate)
      @Html.HiddenFor(model => model.CurrentStock)
      @Html.HiddenFor(model => model.ImageData)
      @Html.HiddenFor(model => model.ImageContentType)
      @Html.HiddenFor(model => model.ImageFileName)
      @Html.HiddenFor(model => model.IsCurrentVersion)
      @Html.HiddenFor(model => model.BaseItemId)
      @Html.HiddenFor(model => model.Version)
      @Html.HiddenFor(model => model.CreatedFromChangeOrderId)

      <!-- Basic Information Card -->
      <div class="card">
        <div class="card-header">
          <h5><i class="fas fa-info-circle"></i> Basic Information</h5>
        </div>
        <div class="card-body">
          <div class="row">
            <div class="col-md-6">
              <div class="mb-3">
                <label asp-for="PartNumber" class="form-label"></label>
                <input asp-for="PartNumber" class="form-control" />
                <span asp-validation-for="PartNumber" class="text-danger"></span>
              </div>
            </div>
            <div class="col-md-6">
              <div class="mb-3">
                <label asp-for="Version" class="form-label"></label>
                <input asp-for="Version" class="form-control" readonly />
                <div class="form-text">Version cannot be changed. Create a new version using Change Orders.</div>
              </div>
            </div>
          </div>

          <div class="mb-3">
            <label asp-for="Description" class="form-label"></label>
            <input asp-for="Description" class="form-control" />
            <span asp-validation-for="Description" class="text-danger"></span>
          </div>

          <div class="mb-3">
            <label asp-for="Comments" class="form-label"></label>
            <textarea asp-for="Comments" class="form-control" rows="3" placeholder="Component specifications for optical, mechanical, or electronic parts"></textarea>
            <span asp-validation-for="Comments" class="text-danger"></span>
          </div>
        </div>
      </div>

      <!-- Item Properties Card -->
      <div class="card mt-3">
        <div class="card-header">
          <h5><i class="fas fa-cog"></i> Item Properties</h5>
        </div>
        <div class="card-body">
          <div class="row">
            <div class="col-md-6">
              <div class="mb-3">
                <label asp-for="ItemType" class="form-label">Item Type *</label>
                <select asp-for="ItemType" class="form-select" id="itemTypeSelect">
                  <option value="0">Inventoried - Physical items with stock tracking</option>
                  <option value="1">Non-Inventoried - Firmware, software, documentation</option>
                  <option value="2">Service - Labor, consulting, services</option>
                  <option value="3">Virtual - Licenses, digital assets</option>
                </select>
                <span asp-validation-for="ItemType" class="text-danger"></span>
                <div class="form-text">Determines how this item is tracked and managed.</div>
              </div>
            </div>
            <div class="col-md-6">
              <div class="mb-3">
                <div class="form-check mt-4">
                  <input asp-for="IsSellable" class="form-check-input" type="checkbox" />
                  <label asp-for="IsSellable" class="form-check-label">
                    This item can be sold to customers
                  </label>
                  <div class="form-text">Uncheck for raw materials, components, or internal-use items.</div>
                </div>
              </div>
            </div>
          </div>

          <!-- Stock Management (only for Inventoried items) -->
          <div class="row" id="stockManagement">
            <div class="col-md-6">
              <div class="mb-3">
                <label asp-for="MinimumStock" class="form-label"></label>
                <input asp-for="MinimumStock" class="form-control" type="number" min="0" />
                <span asp-validation-for="MinimumStock" class="text-danger"></span>
                <div class="form-text">Alert threshold for low stock warnings.</div>
              </div>
            </div>
            <div class="col-md-6">
              <div class="mb-3">
                <label class="form-label">Current Stock</label>
                <div class="input-group">
                  <input type="text" class="form-control" value="@Model.CurrentStock" readonly />
                  <span class="input-group-text">
                    <i class="fas fa-info-circle" title="Current stock is managed through purchases and inventory adjustments"></i>
                  </span>
                </div>
                <div class="form-text">Current stock is managed through purchases and inventory adjustments.</div>
              </div>
            </div>
          </div>
        </div>
      </div>

      <!-- Vendor Information Card -->
      <div class="card mt-3">
        <div class="card-header">
          <h5><i class="fas fa-truck"></i> Vendor Information</h5>
        </div>
        <div class="card-body">
          <div class="row">
            <div class="col-md-6">
              <div class="mb-3">
                <label asp-for="PreferredVendor" class="form-label">Preferred Vendor</label>
                <input asp-for="PreferredVendor" class="form-control" placeholder="ABC Suppliers Inc." />
                <span asp-validation-for="PreferredVendor" class="text-danger"></span>
                <div class="form-text">Primary supplier for this item.</div>
              </div>
            </div>
            <div class="col-md-6">
              <div class="mb-3">
                <label asp-for="VendorPartNumber" class="form-label">Vendor Part Number</label>
                <input asp-for="VendorPartNumber" class="form-control" placeholder="VPN-12345" />
                <span asp-validation-for="VendorPartNumber" class="text-danger"></span>
                <div class="form-text">Supplier's part number for easy ordering.</div>
              </div>
            </div>
          </div>
        </div>
      </div>

      <!-- Item Image Card -->
      <div class="card mt-3">
        <div class="card-header">
          <h5><i class="fas fa-image"></i> Item Image</h5>
        </div>
        <div class="card-body">
          @if (Model.HasImage)
          {
            <div class="mb-3">
              <label class="form-label">Current Image:</label>
              <div>
                <img src="/Items/GetImageThumbnail/@Model.Id?size=150"
                     alt="@Model.PartNumber"
                     class="img-thumbnail"
                     style="max-width: 150px; max-height: 150px;" />
                <div class="mt-1">
                  <small class="text-muted">@Model.ImageFileName</small>
                </div>
              </div>
            </div>
          }

          <div class="mb-3">
            <label for="newImageFile" class="form-label">
              @(Model.HasImage ? "Replace Image" : "Upload Image")
            </label>
            <input name="newImageFile" class="form-control" type="file" accept="image/*" id="newImageFile" />
            <div class="form-text">
              @(Model.HasImage ? "Leave empty to keep current image. " : "")Upload a new image (JPG, PNG, GIF, BMP - Max 5MB)
            </div>
          </div>

          <!-- Image preview -->
          <div id="imagePreview" style="display: none;">
            <label class="form-label">New Image Preview:</label>
            <div>
              <img id="previewImg" src="#" alt="New image preview"
                   style="max-width: 150px; max-height: 150px; border: 1px solid #ddd; border-radius: 4px; padding: 5px;" />
            </div>
          </div>
        </div>
      </div>

      <!-- Submit Buttons -->
      <div class="card mt-3">
        <div class="card-body text-center">
          <button type="submit" class="btn btn-success btn-lg">
            <i class="fas fa-save"></i> Update Item
          </button>
          <a href="/Items/Details/@Model.Id" class="btn btn-outline-secondary btn-lg ms-2">
            <i class="fas fa-times"></i> Cancel
          </a>
        </div>
      </div>
    </form>
  </div>

  <!-- Right Column - Help and Info -->
  <div class="col-md-4">
    <div class="card">
      <div class="card-header">
        <h6><i class="fas fa-info-circle"></i> Item Information</h6>
      </div>
      <div class="card-body">
        <dl class="row">
          <dt class="col-sm-6">Version:</dt>
          <dd class="col-sm-6">
            <span class="badge bg-primary">@Model.Version</span>
            @if (Model.IsCurrentVersion)
            {
              <span class="badge bg-success ms-1">Current</span>
            }
          </dd>

          <dt class="col-sm-6">Created:</dt>
          <dd class="col-sm-6">@Model.CreatedDate.ToString("MM/dd/yyyy")</dd>

          @if (Model.CreatedFromChangeOrder != null)
          {
            <dt class="col-sm-6">Change Order:</dt>
            <dd class="col-sm-6">
              <a href="/ChangeOrders/Details/@Model.CreatedFromChangeOrderId" class="text-decoration-none">
                @Model.CreatedFromChangeOrder.ChangeOrderNumber
              </a>
            </dd>
          }
        </dl>
      </div>
    </div>

    <!-- Editing Tips -->
    <div class="card mt-3">
      <div class="card-header">
        <h6><i class="fas fa-lightbulb"></i> Editing Tips</h6>
      </div>
      <div class="card-body">
        <div class="list-group list-group-flush">
          <div class="list-group-item border-0 px-0">
            <strong>Item Type:</strong>
            <small class="text-muted d-block">Choose how this item is tracked - affects inventory management and stock calculations.</small>
          </div>
          <div class="list-group-item border-0 px-0">
            <strong>Sellable Status:</strong>
            <small class="text-muted d-block">Controls whether this item appears in sales forms and customer-facing areas.</small>
          </div>
          <div class="list-group-item border-0 px-0">
            <strong>Version Control:</strong>
            <small class="text-muted d-block">Version cannot be edited. Use Change Orders to create new versions with modifications.</small>
          </div>
          <div class="list-group-item border-0 px-0">
            <strong>Stock Management:</strong>
            <small class="text-muted d-block">Current stock is updated through purchases and inventory adjustments, not directly edited.</small>
          </div>
        </div>
      </div>
    </div>

    <!-- Quick Actions -->
    @if (Model.IsCurrentVersion)
    {
      <div class="card mt-3">
        <div class="card-header">
          <h6><i class="fas fa-lightning-bolt"></i> Quick Actions</h6>
        </div>
        <div class="card-body">
          <div class="d-grid gap-2">
            <a href="/Purchases/Create?itemId=@Model.Id" class="btn btn-outline-success btn-sm">
              <i class="fas fa-shopping-cart"></i> Add Purchase
            </a>
            <a href="/Documents/Upload?itemId=@Model.Id" class="btn btn-outline-info btn-sm">
              <i class="fas fa-upload"></i> Upload Document
            </a>
            @if (Model.HasImage)
            {
              <form asp-controller="Items" asp-action="RemoveImage" method="post" class="d-grid">
                <input type="hidden" name="id" value="@Model.Id" />
                <button type="submit" class="btn btn-outline-danger btn-sm"
                        onclick="return confirm('Remove the current image?')">
                  <i class="fas fa-trash"></i> Remove Current Image
                </button>
              </form>
            }
          </div>
        </div>
      </div>
    }
  </div>
</div>

<script>
  document.addEventListener('DOMContentLoaded', function() {
      const itemTypeSelect = document.getElementById('itemTypeSelect');
      const stockManagement = document.getElementById('stockManagement');
      const newImageFile = document.getElementById('newImageFile');
      const imagePreview = document.getElementById('imagePreview');
      const previewImg = document.getElementById('previewImg');

      // Handle item type changes
      function toggleStockManagement() {
          const itemType = parseInt(itemTypeSelect.value);
          const isInventoried = itemType === 0; // ItemType.Inventoried = 0

          if (stockManagement) {
              if (isInventoried) {
                  stockManagement.style.display = 'block';
              } else {
                  stockManagement.style.display = 'none';
                  // Clear minimum stock for non-inventoried items
                  const minStockInput = document.querySelector('input[name="MinimumStock"]');
                  if (minStockInput) {
                      minStockInput.value = '0';
                  }
              }
          }
      }

      // Initial setup
      toggleStockManagement();

      // Listen for changes
      if (itemTypeSelect) {
          itemTypeSelect.addEventListener('change', toggleStockManagement);
      }

      // Handle image preview
      if (newImageFile && imagePreview && previewImg) {
          newImageFile.addEventListener('change', function(e) {
              const file = e.target.files[0];
              if (file) {
                  // Validate file type
                  const allowedTypes = ['image/jpeg', 'image/jpg', 'image/png', 'image/gif', 'image/bmp'];
                  if (!allowedTypes.includes(file.type.toLowerCase())) {
                      alert('Please upload a valid image file (JPG, PNG, GIF, BMP).');
                      this.value = '';
                      imagePreview.style.display = 'none';
                      return;
                  }

                  // Validate file size (5MB max)
                  if (file.size > 5 * 1024 * 1024) {
                      alert('Image file size must be less than 5MB.');
                      this.value = '';
                      imagePreview.style.display = 'none';
                      return;
                  }

                  // Show preview
                  const reader = new FileReader();
                  reader.onload = function(e) {
                      previewImg.src = e.target.result;
                      imagePreview.style.display = 'block';
                  };
                  reader.readAsDataURL(file);
              } else {
                  imagePreview.style.display = 'none';
              }
          });
      }

      // Form validation
      const form = document.getElementById('editItemForm');
      if (form) {
          form.addEventListener('submit', function(e) {
              // Basic validation
              const partNumber = document.querySelector('input[name="PartNumber"]').value.trim();
              const description = document.querySelector('input[name="Description"]').value.trim();

              if (!partNumber || !description) {
                  e.preventDefault();
                  alert('Please fill in the required fields: Part Number and Description');
                  return false;
              }

              // Validate minimum stock for inventoried items
              const itemType = parseInt(itemTypeSelect.value);
              if (itemType === 0) { // Inventoried
                  const minStock = document.querySelector('input[name="MinimumStock"]').value;
                  if (minStock < 0) {
                      e.preventDefault();
                      alert('Minimum stock cannot be negative.');
                      return false;
                  }
              }

              return true;
          });
      }
  });
</script>