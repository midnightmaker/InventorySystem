@model InventorySystem.ViewModels.CreateItemViewModel
@{
  ViewData["Title"] = "Create Item";
}

<h1><i class="fas fa-plus"></i> Create Item</h1>

<div class="row">
  <div class="col-md-8">
    <form asp-action="Create" asp-controller="Items" enctype="multipart/form-data" method="post" id="createItemForm">

      <!-- Basic Information Card -->
      <div class="card">
        <div class="card-header">
          <h5><i class="fas fa-info-circle"></i> Basic Information</h5>
        </div>
        <div class="card-body">
          <div class="row">
            <div class="col-md-6">
              <div class="mb-3">
                <label asp-for="PartNumber" class="form-label"></label>
                <input asp-for="PartNumber" class="form-control" required />
                <span asp-validation-for="PartNumber" class="text-danger"></span>
              </div>
            </div>
            <div class="col-md-6">
              <div class="mb-3">
                <label asp-for="Version" class="form-label"></label>
                <input asp-for="Version" class="form-control" placeholder="A" />
                <span asp-validation-for="Version" class="text-danger"></span>
                <div class="form-text">Item revision (A, B, C or 1.0, 1.1, etc.)</div>
              </div>
            </div>
          </div>

          <div class="mb-3">
            <label asp-for="Description" class="form-label"></label>
            <input asp-for="Description" class="form-control" required />
            <span asp-validation-for="Description" class="text-danger"></span>
          </div>

          <div class="mb-3">
            <label asp-for="Comments" class="form-label"></label>
            <textarea asp-for="Comments" class="form-control" rows="3" placeholder="Component specifications for optical, mechanical, or electronic parts"></textarea>
            <span asp-validation-for="Comments" class="text-danger"></span>
          </div>
        </div>
      </div>

      <!-- NEW: Item Properties Card -->
      <div class="card mt-3">
        <div class="card-header">
          <h5><i class="fas fa-cog"></i> Item Properties</h5>
        </div>
        <div class="card-body">
          <div class="row">
            <div class="col-md-6">
              <div class="mb-3">
                <label asp-for="ItemType" class="form-label">Item Type *</label>
                <select asp-for="ItemType" class="form-select" id="itemTypeSelect">
                  <option value="0">Inventoried - Physical items with stock tracking</option>
                  <option value="1">Non-Inventoried - Firmware, software, documentation</option>
                  <option value="2">Service - Labor, consulting, services</option>
                  <option value="3">Virtual - Licenses, digital assets</option>
                </select>
                <span asp-validation-for="ItemType" class="text-danger"></span>
                <div class="form-text">Determines how this item is tracked and managed.</div>
              </div>
            </div>
            <div class="col-md-6">
              <div class="form-check mt-4">
                <input asp-for="IsSellable" class="form-check-input" type="checkbox" />
                <label asp-for="IsSellable" class="form-check-label">
                  This item can be sold to customers
                </label>
                <div class="form-text">Uncheck for raw materials, components, or internal-use items.</div>
              </div>
            </div>
          </div>
        </div>
      </div>

      <!-- NEW: Vendor Information Card -->
      <div class="card mt-3">
        <div class="card-header">
          <h5><i class="fas fa-truck"></i> Vendor Information</h5>
        </div>
        <div class="card-body">
          <div class="row">
            <div class="col-md-6">
              <div class="mb-3">
                <label asp-for="PreferredVendor" class="form-label">Preferred Vendor</label>
                <input asp-for="PreferredVendor" class="form-control" placeholder="ABC Suppliers Inc." />
                <span asp-validation-for="PreferredVendor" class="text-danger"></span>
                <div class="form-text">Primary supplier for this item (optional).</div>
              </div>
            </div>
            <div class="col-md-6">
              <div class="mb-3">
                <label asp-for="VendorPartNumber" class="form-label">Vendor Part Number</label>
                <input asp-for="VendorPartNumber" class="form-control" placeholder="ABC-12345" />
                <span asp-validation-for="VendorPartNumber" class="text-danger"></span>
                <div class="form-text">Supplier's part number for ordering (optional).</div>
              </div>
            </div>
          </div>
        </div>
      </div>

      <!-- Inventory & Stock Card (conditional based on item type) -->
      <div class="card mt-3" id="inventorySection">
        <div class="card-header">
          <h5><i class="fas fa-boxes"></i> Inventory & Stock</h5>
        </div>
        <div class="card-body">
          <div class="row">
            <div class="col-md-6">
              <div class="mb-3">
                <label asp-for="MinimumStock" class="form-label">Minimum Stock Level</label>
                <input asp-for="MinimumStock" class="form-control" type="number" min="0" value="0" />
                <span asp-validation-for="MinimumStock" class="text-danger"></span>
                <div class="form-text">Alert when stock falls below this level.</div>
              </div>
            </div>
          </div>

          <!-- Initial Purchase Section -->
          <div class="form-check mb-3">
            <input asp-for="HasInitialPurchase" class="form-check-input" type="checkbox" id="hasInitialPurchase" />
            <label asp-for="HasInitialPurchase" class="form-check-label">
              Add initial purchase/inventory
            </label>
          </div>

          <div id="initialPurchaseSection" style="display: none;" class="border rounded p-3 bg-light">
            <h6><i class="fas fa-shopping-cart"></i> Initial Purchase Details</h6>
            <div class="row">
              <div class="col-md-4">
                <div class="mb-3">
                  <label asp-for="InitialQuantity" class="form-label">Quantity *</label>
                  <input asp-for="InitialQuantity" class="form-control initial-purchase-field" type="number" min="1" id="initialQuantity" />
                  <span asp-validation-for="InitialQuantity" class="text-danger"></span>
                </div>
              </div>
              <div class="col-md-4">
                <div class="mb-3">
                  <label asp-for="InitialCostPerUnit" class="form-label">Cost Per Unit *</label>
                  <input asp-for="InitialCostPerUnit" class="form-control initial-purchase-field" type="number" step="0.01" min="0.01" id="initialCostPerUnit" />
                  <span asp-validation-for="InitialCostPerUnit" class="text-danger"></span>
                </div>
              </div>
              <div class="col-md-4">
                <div class="mb-3">
                  <label for="initialTotalCost" class="form-label">Total Cost</label>
                  <input type="text" class="form-control" id="initialTotalCost" readonly />
                  <div class="form-text">Calculated automatically</div>
                </div>
              </div>
            </div>

            <div class="row">
              <div class="col-md-6">
                <div class="mb-3">
                  <label asp-for="InitialVendor" class="form-label">Vendor *</label>
                  <input asp-for="InitialVendor" class="form-control initial-purchase-field" />
                  <span asp-validation-for="InitialVendor" class="text-danger"></span>
                </div>
              </div>
              <div class="col-md-6">
                <div class="mb-3">
                  <label asp-for="InitialPurchaseDate" class="form-label">Purchase Date</label>
                  <input asp-for="InitialPurchaseDate" class="form-control initial-purchase-field" type="date" />
                  <span asp-validation-for="InitialPurchaseDate" class="text-danger"></span>
                </div>
              </div>
            </div>

            <div class="mb-3">
              <label asp-for="InitialPurchaseOrderNumber" class="form-label">Purchase Order Number</label>
              <input asp-for="InitialPurchaseOrderNumber" class="form-control initial-purchase-field" />
              <span asp-validation-for="InitialPurchaseOrderNumber" class="text-danger"></span>
            </div>
          </div>
        </div>
      </div>

      <!-- Item Image Card (existing) -->
      <div class="card mt-3">
        <div class="card-header">
          <h5><i class="fas fa-image"></i> Item Image (Optional)</h5>
        </div>
        <div class="card-body">
          <div class="mb-3">
            <label asp-for="ImageFile" class="form-label"></label>
            <input asp-for="ImageFile" class="form-control" type="file" accept="image/*" id="imageFile" />
            <span asp-validation-for="ImageFile" class="text-danger"></span>
            <div class="form-text">
              Upload JPG, PNG, GIF, or BMP images up to 5MB
            </div>
          </div>

          <div id="imagePreview" style="display: none;">
            <img id="previewImg" class="img-thumbnail" style="max-width: 200px; max-height: 200px;" />
          </div>
        </div>
      </div>

      <!-- Submit Button -->
      <div class="card mt-3">
        <div class="card-body text-center">
          <button type="submit" class="btn btn-success btn-lg" id="submitBtn">
            <i class="fas fa-save"></i> Create Item
          </button>
          <a asp-action="Index" class="btn btn-outline-secondary btn-lg ms-2">
            <i class="fas fa-times"></i> Cancel
          </a>
        </div>
      </div>
    </form>
  </div>

  <!-- Right sidebar with tips -->
  <div class="col-md-4">
    <div class="card">
      <div class="card-header">
        <h5><i class="fas fa-lightbulb"></i> Quick Tips</h5>
      </div>
      <div class="card-body">
        <h6>Item Types:</h6>
        <ul class="small">
          <li><strong>Inventoried:</strong> Physical parts that need stock tracking</li>
          <li><strong>Non-Inventoried:</strong> Firmware, software, documentation</li>
          <li><strong>Service:</strong> Labor, consulting, or service offerings</li>
          <li><strong>Virtual:</strong> Licenses, digital assets</li>
        </ul>

        <h6>Initial Purchase:</h6>
        <small class="text-muted">
          You can:
          <ul class="mt-2 mb-0">
            <li>Create items without any purchase information</li>
            <li>Add purchases later from the item details page</li>
            <li>Use the initial purchase for immediate inventory setup</li>
          </ul>
        </small>
      </div>
    </div>
  </div>
</div>

<script>
  document.addEventListener('DOMContentLoaded', function () {
    const itemTypeSelect = document.getElementById('itemTypeSelect');
    const inventorySection = document.getElementById('inventorySection');
    const hasInitialPurchaseCheckbox = document.getElementById('hasInitialPurchase');
    const initialPurchaseSection = document.getElementById('initialPurchaseSection');
    const initialPurchaseFields = document.querySelectorAll('.initial-purchase-field');

    function updateFormBasedOnItemType() {
      const itemType = parseInt(itemTypeSelect.value);
      const isInventoried = itemType === 0; // ItemType.Inventoried

      // Show/hide inventory section
      if (isInventoried) {
        inventorySection.style.display = 'block';
      } else {
        inventorySection.style.display = 'none';
        // Clear and uncheck initial purchase when not inventoried
        hasInitialPurchaseCheckbox.checked = false;
        initialPurchaseSection.style.display = 'none';

        // Clear initial purchase fields
        initialPurchaseFields.forEach(field => {
          field.value = '';
          field.setAttribute('disabled', 'disabled');
        });
      }
    }

    // Initial setup
    updateFormBasedOnItemType();

    // Handle item type changes
    itemTypeSelect.addEventListener('change', updateFormBasedOnItemType);

    // Handle initial purchase section toggle
    if (hasInitialPurchaseCheckbox && initialPurchaseSection) {
      hasInitialPurchaseCheckbox.addEventListener('change', function () {
        if (this.checked) {
          initialPurchaseSection.style.display = 'block';
          // Enable fields and remove disabled attribute
          initialPurchaseFields.forEach(field => {
            field.removeAttribute('disabled');
          });
        } else {
          initialPurchaseSection.style.display = 'none';
          // Disable fields and clear values
          initialPurchaseFields.forEach(field => {
            field.setAttribute('disabled', 'disabled');
            field.value = '';
          });
          // Clear total cost
          document.getElementById('initialTotalCost').value = '';
        }
      });
    }

    // Handle total cost calculation
    const quantityInput = document.getElementById('initialQuantity');
    const costInput = document.getElementById('initialCostPerUnit');
    const totalCostInput = document.getElementById('initialTotalCost');

    function updateInitialTotal() {
      if (quantityInput && costInput && totalCostInput) {
        const quantity = parseFloat(quantityInput.value) || 0;
        const cost = parseFloat(costInput.value) || 0;
        const total = quantity * cost;
        totalCostInput.value = total > 0 ? '$' + total.toFixed(2) : '';
      }
    }

    if (quantityInput && costInput) {
      quantityInput.addEventListener('input', updateInitialTotal);
      costInput.addEventListener('input', updateInitialTotal);
    }

    // Handle image preview
    const imageFileInput = document.getElementById('imageFile');
    const imagePreview = document.getElementById('imagePreview');
    const previewImg = document.getElementById('previewImg');

    if (imageFileInput && imagePreview && previewImg) {
      imageFileInput.addEventListener('change', function (e) {
        const file = e.target.files[0];
        if (file) {
          const reader = new FileReader();
          reader.onload = function (e) {
            previewImg.src = e.target.result;
            imagePreview.style.display = 'block';
          };
          reader.readAsDataURL(file);
        } else {
          imagePreview.style.display = 'none';
        }
      });
    }

    // Form submission validation
    const form = document.getElementById('createItemForm');
    if (!form) {
      console.error('Form not found!');
      return;
    }

    form.addEventListener('submit', function(e) {
      console.log('Form submission started');

      // Check required fields
      const partNumber = document.querySelector('input[name="PartNumber"]').value.trim();
      const description = document.querySelector('input[name="Description"]').value.trim();

      if (!partNumber || !description) {
        e.preventDefault();
        alert('Please fill in the required fields: Part Number and Description');
        return false;
      }

      const itemType = parseInt(itemTypeSelect.value);
      const isInventoried = itemType === 0;
      const hasInitialPurchase = hasInitialPurchaseCheckbox.checked;

      console.log('Item Type:', itemType, 'Is Inventoried:', isInventoried, 'Has initial purchase:', hasInitialPurchase);

      if (isInventoried && hasInitialPurchase) {
        const vendor = document.querySelector('input[name="InitialVendor"]').value.trim();
        const quantity = document.querySelector('input[name="InitialQuantity"]').value;
        const cost = document.querySelector('input[name="InitialCostPerUnit"]').value;

        console.log('Vendor:', vendor, 'Quantity:', quantity, 'Cost:', cost);

        if (!vendor) {
          e.preventDefault();
          alert('Please enter the vendor name for the initial purchase.');
          document.querySelector('input[name="InitialVendor"]').focus();
          return false;
        }

        if (!quantity || quantity <= 0) {
          e.preventDefault();
          alert('Please enter a valid quantity (greater than 0) for the initial purchase.');
          document.querySelector('input[name="InitialQuantity"]').focus();
          return false;
        }

        if (!cost || cost <= 0) {
          e.preventDefault();
          alert('Please enter a valid cost per unit (greater than 0) for the initial purchase.');
          document.querySelector('input[name="InitialCostPerUnit"]').focus();
          return false;
        }
      }

      console.log('Form validation passed, submitting...');
      // Let the form submit normally
    });
  });
</script>