@model InventorySystem.ViewModels.CreateItemViewModel
@using InventorySystem.Helpers
@using InventorySystem.Models.Enums
@{
  ViewData["Title"] = "Create Item";
}

<div class="d-flex justify-content-between align-items-center mb-4">
  <h1><i class="fas fa-plus"></i> Create Item</h1>
  <div class="btn-group">
    <a href="/Items" class="btn btn-outline-secondary">
      <i class="fas fa-arrow-left"></i> Back to Items
    </a>
    <a href="/Items/BulkUpload" class="btn btn-outline-info">
      <i class="fas fa-upload"></i> Bulk Upload
    </a>
  </div>
</div>

@if (TempData["SuccessMessage"] != null)
{
  <div class="alert alert-success alert-dismissible fade show">
    @TempData["SuccessMessage"]
    <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
  </div>
}

@if (TempData["ErrorMessage"] != null)
{
  <div class="alert alert-danger alert-dismissible fade show">
    @TempData["ErrorMessage"]
    <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
  </div>
}

<div class="row">
  <div class="col-md-8">
    <form asp-action="Create" asp-controller="Items" enctype="multipart/form-data" method="post" id="createItemForm">

      <!-- Basic Information Card -->
      <div class="card">
        <div class="card-header">
          <h5><i class="fas fa-info-circle"></i> Basic Information</h5>
        </div>
        <div class="card-body">
          <div class="row">
            <div class="col-md-6">
              <div class="mb-3">
                <label asp-for="PartNumber" class="form-label">
                  <i class="fas fa-tag text-primary"></i>
                  Part Number <span class="text-danger">*</span>
                </label>
                <input asp-for="PartNumber" class="form-control" required placeholder="e.g., R-001, CAP-100" />
                <span asp-validation-for="PartNumber" class="text-danger"></span>
              </div>
            </div>
            <div class="col-md-6">
              <div class="mb-3">
                <label asp-for="Version" class="form-label">
                  <i class="fas fa-code-branch text-info"></i>
                  Version <span class="text-danger">*</span>
                </label>
                <input asp-for="Version" class="form-control" placeholder="A" />
                <span asp-validation-for="Version" class="text-danger"></span>
                <div class="form-text">Item revision (A, B, C or 1.0, 1.1, etc.)</div>
              </div>
            </div>
          </div>

          <div class="mb-3">
            <label asp-for="Description" class="form-label">
              <i class="fas fa-file-text text-success"></i>
              Description <span class="text-danger">*</span>
            </label>
            <input asp-for="Description" class="form-control" required placeholder="Brief description of the item" />
            <span asp-validation-for="Description" class="text-danger"></span>
          </div>

          <div class="mb-3">
            <label asp-for="Comments" class="form-label">
              <i class="fas fa-comment text-muted"></i>
              Comments
            </label>
            <textarea asp-for="Comments" class="form-control" rows="3" placeholder="Component specifications for optical, mechanical, or electronic parts"></textarea>
            <span asp-validation-for="Comments" class="text-danger"></span>
          </div>
        </div>
      </div>

      <!-- Item Properties Card -->
      <div class="card mt-3">
        <div class="card-header">
          <h5><i class="fas fa-cog"></i> Item Properties</h5>
        </div>
        <div class="card-body">
          <div class="row">
            <div class="col-md-6">
              <div class="mb-3">
                <label asp-for="ItemType" class="form-label">
                  <i class="fas fa-tags text-warning"></i>
                  Item Type <span class="text-danger">*</span>
                </label>
                <select asp-for="ItemType" class="form-select" id="itemTypeSelect">
                  <option value="0">Inventoried - Physical items with stock tracking</option>
                  <option value="1">Non-Inventoried - Firmware, software, documentation</option>
                  <option value="2">Service - Labor, consulting, services</option>
                  <option value="3">Virtual - Licenses, digital assets</option>
                  <option value="4">Consumable - Items used up in operations (office supplies, consumables)</option>
                  <option value="5">Expense - Direct expense items (utilities, rent, one-time expenses)</option>
                  <option value="6">Subscription - Recurring subscription services (software licenses, cloud services)</option>
                  <option value="7">Utility - Utility expenses (electricity, water, internet)</option>
                  <option value="8">R&D Materials - Research and development specific materials</option>
                </select>
                <span asp-validation-for="ItemType" class="text-danger"></span>
                <div class="form-text">Determines how this item is tracked and managed.</div>
              </div>
            </div>
            <div class="col-md-6">
              <div class="mb-3">
                <label asp-for="UnitOfMeasure" class="form-label">
                  <i class="fas fa-ruler-combined text-info"></i>
                  Unit of Measure <span class="text-danger">*</span>
                </label>
                <select asp-for="UnitOfMeasure"
                        class="form-select"
                        asp-items="@UnitOfMeasureHelper.GetGroupedUnitOfMeasureSelectList(Model.UnitOfMeasure)">
                </select>
                <span asp-validation-for="UnitOfMeasure" class="text-danger"></span>
                <div class="form-text">
                  <i class="fas fa-info-circle"></i>
                  Select the unit of measure for this item. Default is "Each" (EA).
                </div>
              </div>
            </div>
          </div>

          <!-- NEW: Material Type Section -->
          <div class="row" id="materialTypeRow">
            <div class="col-md-6">
              <div class="mb-3">
                <label asp-for="MaterialType" class="form-label">
                  <i class="fas fa-industry text-primary"></i>
                  Material Type <span class="text-danger">*</span>
                </label>
                <select asp-for="MaterialType" class="form-select" id="materialTypeSelect">
                  <option value="0">Standard Item - Regular inventory item</option>
                  <option value="1">Raw Material - Input material for production</option>
                  <option value="2">Transformed Material - Processed from raw materials</option>
                  <option value="3">Work in Process - Partially completed items</option>
                </select>
                <span asp-validation-for="MaterialType" class="text-danger"></span>
                <div class="form-text">Determines material handling and production workflows. Only applies to physical materials.</div>
              </div>
            </div>
            <div class="col-md-6">
              <div class="form-check mt-2">
                <input asp-for="IsSellable" class="form-check-input" type="checkbox" />
                <label asp-for="IsSellable" class="form-check-label">
                  <i class="fas fa-dollar-sign text-success"></i>
                  This item can be sold to customers
                </label>
                <div class="form-text">Uncheck for raw materials, components, or internal-use items.</div>
              </div>
              
              <div class="form-check mt-2">
                <input asp-for="IsExpense" class="form-check-input" type="checkbox" />
                <label asp-for="IsExpense" class="form-check-label">
                  <i class="fas fa-file-invoice-dollar text-danger"></i>
                  This is an expense item
                </label>
                <div class="form-text">Check for items you purchase as business expenses.</div>
              </div>
            </div>
          </div>

          <!-- Stock Management (only for Inventoried items) -->
          <div class="row" id="stockManagement">
            <div class="col-md-6">
              <div class="mb-3">
                <label asp-for="MinimumStock" class="form-label">
                  <i class="fas fa-exclamation-triangle text-warning"></i>
                  Minimum Stock
                </label>
                <input asp-for="MinimumStock" class="form-control" type="number" min="0" />
                <span asp-validation-for="MinimumStock" class="text-danger"></span>
                <div class="form-text">Alert threshold for low stock warnings.</div>
              </div>
            </div>
          </div>

          <!-- Pricing Information -->
          <div class="row" id="pricingSection">
            <div class="col-md-6">
              <div class="mb-3">
                <label asp-for="SalePrice" class="form-label">
                  <i class="fas fa-tag text-success"></i>
                  Sale Price <span class="text-muted">(Optional)</span>
                </label>
                <div class="input-group">
                  <span class="input-group-text">$</span>
                  <input asp-for="SalePrice" class="form-control" type="number" step="0.01" min="0" placeholder="0.00" />
                </div>
                <span asp-validation-for="SalePrice" class="text-danger"></span>
                <div class="form-text">
                  <i class="fas fa-info-circle"></i>
                  Set the default price for selling this item. If not set, the system will suggest pricing based on cost and item type.
                </div>
              </div>
            </div>
            <div class="col-md-6" id="pricingInfo">
              <div class="mb-3">
                <label class="form-label">
                  <i class="fas fa-calculator text-info"></i>
                  Pricing Guide
                </label>
                <div class="alert alert-light border p-2" id="pricingGuidance">
                  <small class="text-muted">
                    <i class="fas fa-lightbulb"></i>
                    <strong>Suggested Pricing:</strong>
                    <ul class="mt-2 mb-0 ps-3">
                      <li><strong>Service Items:</strong> $50-150/hour</li>
                      <li><strong>Virtual Items:</strong> $25-100 per license</li>
                      <li><strong>Subscriptions:</strong> $15-50/month</li>
                      <li><strong>Utilities:</strong> Based on usage/cost</li>
                      <li><strong>Physical Items:</strong> Cost + 50% markup</li>
                    </ul>
                  </small>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>

      <!-- NEW: Manufacturing BOM Section for Transformed Materials -->
      <div class="card mt-3" id="manufacturingBomCard" style="display: none;">
        <div class="card-header">
          <h5><i class="fas fa-industry text-success"></i> Manufacturing BOM Configuration</h5>
        </div>
        <div class="card-body">
          <div class="alert alert-info">
            <i class="fas fa-info-circle"></i>
            <strong>Manufacturing BOM:</strong> A bill of materials will be automatically created to define how this transformed material is produced from raw materials.
          </div>

          <div class="row">
            <div class="col-md-6">
              <div class="mb-3">
                <label asp-for="ParentRawMaterialId" class="form-label">
                  <i class="fas fa-cubes text-primary"></i>
                  Parent Raw Material <span class="text-danger">*</span>
                </label>
                <select asp-for="ParentRawMaterialId" class="form-select" asp-items="ViewBag.ParentRawMaterials">
                  <option value="">-- Select Raw Material --</option>
                </select>
                <span asp-validation-for="ParentRawMaterialId" class="text-danger"></span>
                <div class="form-text">The raw material that will be transformed into this item.</div>
              </div>
            </div>
            <div class="col-md-6">
              <div class="mb-3">
                <label asp-for="YieldFactor" class="form-label">
                  <i class="fas fa-percentage text-success"></i>
                  Yield Factor <span class="text-danger">*</span>
                </label>
                <input asp-for="YieldFactor" class="form-control" type="number" step="0.01" min="0.01" max="1" placeholder="0.85" />
                <span asp-validation-for="YieldFactor" class="text-danger"></span>
                <div class="form-text">Efficiency ratio (0.01-1.0). E.g., 0.85 = 85% yield.</div>
              </div>
            </div>
          </div>

          <div class="row">
            <div class="col-md-6">
              <div class="mb-3">
                <label asp-for="WastePercentage" class="form-label">
                  <i class="fas fa-trash text-warning"></i>
                  Waste Percentage <span class="text-muted">(Optional)</span>
                </label>
                <input asp-for="WastePercentage" class="form-control" type="number" step="0.1" min="0" max="50" placeholder="10.5" />
                <span asp-validation-for="WastePercentage" class="text-danger"></span>
                <div class="form-text">Expected waste percentage during transformation (0-50%).</div>
              </div>
            </div>
            <div class="col-md-6">
              <div class="mb-3">
                <label class="form-label">
                  <i class="fas fa-calculator text-info"></i>
                  Required Raw Material
                </label>
                <div class="form-control-plaintext bg-light p-2 rounded" id="requiredMaterialDisplay">
                  <span class="text-muted">Enter yield factor to calculate</span>
                </div>
                <div class="form-text">Amount of raw material needed per unit of finished product.</div>
              </div>
            </div>
          </div>

          <!-- Manufacturing BOM Preview -->
          <div class="alert alert-secondary" id="bomPreview" style="display: none;">
            <h6><i class="fas fa-eye"></i> Manufacturing BOM Preview</h6>
            <div class="row">
              <div class="col-md-6">
                <small>
                  <strong>BOM Number:</strong> <span id="previewBomNumber">-</span><br>
                  <strong>Description:</strong> <span id="previewBomDescription">-</span>
                </small>
              </div>
              <div class="col-md-6">
                <small>
                  <strong>Raw Material:</strong> <span id="previewRawMaterial">-</span><br>
                  <strong>Required Quantity:</strong> <span id="previewQuantity">-</span>
                </small>
              </div>
            </div>
          </div>
        </div>
      </div>

      <!-- Vendor Information Card -->
      <div class="card mt-3">
        <div class="card-header">
          <h5><i class="fas fa-truck"></i> Vendor Information</h5>
        </div>
        <div class="card-body">
          <div class="row">
            <div class="col-md-6">
              <div class="mb-3">
                <label asp-for="PreferredVendorId" class="form-label">
                  <i class="fas fa-star text-warning"></i>
                  Preferred Vendor
                </label>
                <div class="input-group">
                  <select asp-for="PreferredVendorId" class="form-select" asp-items="ViewBag.PreferredVendors">
                    <option value="">-- Select Preferred Vendor --</option>
                  </select>
                  <button type="button" class="btn btn-outline-info" onclick="openCreateVendorModal()" title="Create New Vendor">
                    <i class="fas fa-plus"></i>
                  </button>
                </div>
                <span asp-validation-for="PreferredVendorId" class="text-danger"></span>
                <div class="form-text">
                  <i class="fas fa-info-circle"></i>
                  Select the primary supplier for this item. This will create a vendor relationship.
                </div>
              </div>
            </div>
            <div class="col-md-6">
              <div class="mb-3">
                <label asp-for="VendorPartNumber" class="form-label">
                  <i class="fas fa-barcode text-info"></i>
                  Vendor Part Number
                </label>
                <input asp-for="VendorPartNumber" class="form-control" placeholder="Vendor's part number for this item" />
                <span asp-validation-for="VendorPartNumber" class="text-danger"></span>
                <div class="form-text">
                  <i class="fas fa-info-circle"></i>
                  The part number used by your vendor/distributor
                </div>
              </div>
            </div>
          </div>

          <div class="row">
            <div class="col-md-6">
              <div class="mb-3">
                <label asp-for="Manufacturer" class="form-label">
                  <i class="fas fa-industry text-primary"></i>
                  Manufacturer <span class="text-muted">(Optional)</span>
                </label>
                <input asp-for="Manufacturer" class="form-control" placeholder="e.g., Texas Instruments, Vishay, etc." />
                <span asp-validation-for="Manufacturer" class="text-danger"></span>
                <div class="form-text">
                  <i class="fas fa-info-circle"></i>
                  The actual manufacturer of the component
                </div>
              </div>
            </div>
            <div class="col-md-6">
              <div class="mb-3">
                <label asp-for="ManufacturerPartNumber" class="form-label">
                  <i class="fas fa-microchip text-success"></i>
                  Manufacturer Part Number <span class="text-muted">(Optional)</span>
                </label>
                <input asp-for="ManufacturerPartNumber" class="form-control" placeholder="Original manufacturer's part number" />
                <span asp-validation-for="ManufacturerPartNumber" class="text-danger"></span>
                <div class="form-text">
                  <i class="fas fa-info-circle"></i>
                  The original part number from the manufacturer
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>

      <!-- Initial Purchase Card (only for Inventoried items) -->
      <div class="card mt-3" id="initialPurchaseCard">
        <div class="card-header">
          <h5>
            <i class="fas fa-shopping-cart"></i>
            Initial Purchase (Optional)
          </h5>
        </div>
        <div class="card-body">
          <div class="form-check mb-3">
            <input asp-for="HasInitialPurchase" class="form-check-input" type="checkbox" id="hasInitialPurchaseCheckbox" />
            <label asp-for="HasInitialPurchase" class="form-check-label">
              <i class="fas fa-plus-circle text-success"></i>
              Add initial purchase to create starting inventory
            </label>
            <div class="form-text">Check this to add initial stock and set up the first purchase record.</div>
          </div>

          <div id="initialPurchaseSection" style="display: none;">
            <div class="row">
              <div class="col-md-6">
                <div class="mb-3">
                  <label asp-for="InitialVendor" class="form-label">
                    <i class="fas fa-building text-primary"></i>
                    Initial Vendor <span class="text-danger">*</span>
                  </label>
                  <input asp-for="InitialVendor" class="form-control" placeholder="Vendor name" disabled />
                  <span asp-validation-for="InitialVendor" class="text-danger"></span>
                </div>
              </div>
              <div class="col-md-6">
                <div class="mb-3">
                  <label asp-for="InitialPurchaseDate" class="form-label">
                    <i class="fas fa-calendar text-info"></i>
                    Purchase Date
                  </label>
                  <input asp-for="InitialPurchaseDate" class="form-control" type="date" disabled />
                  <span asp-validation-for="InitialPurchaseDate" class="text-danger"></span>
                </div>
              </div>
            </div>

            <div class="row">
              <div class="col-md-4">
                <div class="mb-3">
                  <label asp-for="InitialQuantity" class="form-label">
                    <i class="fas fa-cubes text-success"></i>
                    Quantity <span class="text-danger">*</span>
                  </label>
                  <input asp-for="InitialQuantity" class="form-control" type="number" min="1" id="initialQuantity" disabled />
                  <span asp-validation-for="InitialQuantity" class="text-danger"></span>
                </div>
              </div>
              <div class="col-md-4">
                <div class="mb-3">
                  <label asp-for="InitialCostPerUnit" class="form-label">
                    <i class="fas fa-dollar-sign text-warning"></i>
                    Cost Per Unit <span class="text-danger">*</span>
                  </label>
                  <input asp-for="InitialCostPerUnit" class="form-control" type="number" step="0.01" min="0.01" id="initialCostPerUnit" disabled />
                  <span asp-validation-for="InitialCostPerUnit" class="text-danger"></span>
                </div>
              </div>
              <div class="col-md-4">
                <div class="mb-3">
                  <label class="form-label">
                    <i class="fas fa-calculator text-muted"></i>
                    Total Cost
                  </label>
                  <input type="text" class="form-control" id="initialTotalCost" readonly disabled />
                  <div class="form-text">Automatically calculated</div>
                </div>
              </div>
            </div>

            <div class="mb-3">
              <label asp-for="InitialPurchaseOrderNumber" class="form-label">
                <i class="fas fa-file-invoice text-secondary"></i>
                Purchase Order Number
              </label>
              <input asp-for="InitialPurchaseOrderNumber" class="form-control" placeholder="Optional PO number" disabled />
              <span asp-validation-for="InitialPurchaseOrderNumber" class="text-danger"></span>
            </div>
          </div>
        </div>
      </div>

      <!-- Image Upload Card -->
      <div class="card mt-3">
        <div class="card-header">
          <h5><i class="fas fa-image"></i> Item Image (Optional)</h5>
        </div>
        <div class="card-body">
          <div class="mb-3">
            <label asp-for="ImageFile" class="form-label">
              <i class="fas fa-upload text-primary"></i>
              Upload Image
            </label>
            <input asp-for="ImageFile" class="form-control" type="file" accept="image/*" id="imageFile" />
            <span asp-validation-for="ImageFile" class="text-danger"></span>
            <div class="form-text">
              <i class="fas fa-info-circle"></i>
              Upload an image (JPG, PNG, GIF, BMP - Max 5MB)
            </div>
          </div>

          <div id="imagePreview" style="display: none;">
            <label class="form-label">Image Preview:</label>
            <div>
              <img id="previewImg" src="#" alt="Image preview"
                   style="max-width: 200px; max-height: 200px; border: 1px solid #ddd; border-radius: 4px; padding: 5px;" />
            </div>
          </div>
        </div>
      </div>

      <!-- Submit Buttons -->
      <div class="card mt-3">
        <div class="card-body text-center">
          <button type="submit" class="btn btn-success btn-lg">
            <i class="fas fa-save"></i> Create Item
          </button>
          <a href="/Items" class="btn btn-outline-secondary btn-lg ms-2">
            <i class="fas fa-times"></i> Cancel
          </a>
        </div>
      </div>
    </form>
  </div>

  <!-- Right Column - Help and Quick Info -->
  <div class="col-md-4">
    <!-- Material Type Guide -->
    <div class="card" id="materialTypeGuide">
      <div class="card-header">
        <h6><i class="fas fa-industry"></i> Material Type Guide</h6>
      </div>
      <div class="card-body">
        <div class="alert alert-info mb-3">
          <i class="fas fa-info-circle"></i>
          <strong>Note:</strong> Material Type only applies to physical materials (Inventoried, Consumable, R&D Materials). 
          Services, Utilities, Expenses, and Subscriptions don't use Material Type classification.
        </div>
        <div class="list-group list-group-flush">
          <div class="list-group-item border-0 px-0">
            <div class="d-flex align-items-center">
              <span class="badge bg-secondary me-2">STD</span>
              <div>
                <strong>Standard</strong>
                <small class="text-muted d-block">Regular inventory items</small>
              </div>
            </div>
          </div>
          <div class="list-group-item border-0 px-0">
            <div class="d-flex align-items-center">
              <span class="badge bg-primary me-2">RAW</span>
              <div>
                <strong>Raw Material</strong>
                <small class="text-muted d-block">Input materials for production</small>
              </div>
            </div>
          </div>
          <div class="list-group-item border-0 px-0">
            <div class="d-flex align-items-center">
              <span class="badge bg-success me-2">TRN</span>
              <div>
                <strong>Transformed</strong>
                <small class="text-muted d-block">Processed from raw materials</small>
              </div>
            </div>
          </div>
          <div class="list-group-item border-0 px-0">
            <div class="d-flex align-items-center">
              <span class="badge bg-warning me-2">WIP</span>
              <div>
                <strong>Work in Process</strong>
                <small class="text-muted d-block">Partially completed items</small>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>

    <!-- Manufacturing BOM Guide -->
    <div class="card mt-3" id="bomGuideCard" style="display: none;">
      <div class="card-header">
        <h6><i class="fas fa-cogs"></i> Manufacturing BOM Guide</h6>
      </div>
      <div class="card-body">
        <div class="mb-3">
          <h6 class="text-success">
            <i class="fas fa-lightbulb"></i> Yield Factor Examples
          </h6>
          <div class="row g-2">
            <div class="col-6">
              <div class="text-center p-2 bg-light rounded">
                <strong>0.90</strong>
                <small class="text-muted d-block">90% yield<br>1.11 units needed</small>
              </div>
            </div>
            <div class="col-6">
              <div class="text-center p-2 bg-light rounded">
                <strong>0.75</strong>
                <small class="text-muted d-block">75% yield<br>1.33 units needed</small>
              </div>
            </div>
          </div>
        </div>

        <div class="alert alert-info">
          <small>
            <i class="fas fa-info-circle"></i>
            <strong>Automatic BOM Creation:</strong> The system will automatically create a Manufacturing BOM showing the raw material requirements for this transformed material.
          </small>
        </div>
      </div>
    </div>

    <!-- Item Type Guide -->
    <div class="card mt-3">
      <div class="card-header">
        <h6><i class="fas fa-tags"></i> Item Type Guide</h6>
      </div>
      <div class="card-body">
        <div class="list-group list-group-flush">
          <div class="list-group-item border-0 px-0">
            <div class="d-flex align-items-center">
              <span class="badge bg-primary me-2">INV</span>
              <div>
                <strong>Inventoried</strong>
                <small class="text-muted d-block">Physical items with stock tracking</small>
              </div>
            </div>
          </div>
          <div class="list-group-item border-0 px-0">
            <div class="d-flex align-items-center">
              <span class="badge bg-secondary me-2">CON</span>
              <div>
                <strong>Consumable</strong>
                <small class="text-muted d-block">Items used up in operations (office supplies, consumables)</small>
              </div>
            </div>
          </div>
          <div class="list-group-item border-0 px-0">
            <div class="d-flex align-items-center">
              <span class="badge bg-success me-2">R&D</span>
              <div>
                <strong>R&D Materials</strong>
                <small class="text-muted d-block">Research and development specific materials</small>
              </div>
            </div>
          </div>
          <div class="list-group-item border-0 px-0">
            <div class="d-flex align-items-center">
              <span class="badge bg-info me-2">NON</span>
              <div>
                <strong>Non-Inventoried</strong>
                <small class="text-muted d-block">Software, firmware, documentation</small>
              </div>
            </div>
          </div>
          <div class="list-group-item border-0 px-0">
            <div class="d-flex align-items-center">
              <span class="badge bg-warning me-2">SRV</span>
              <div>
                <strong>Service</strong>
                <small class="text-muted d-block">Labor, consulting, services</small>
              </div>
            </div>
          </div>
          <div class="list-group-item border-0 px-0">
            <div class="d-flex align-items-center">
              <span class="badge bg-dark me-2">SUB</span>
              <div>
                <strong>Subscription</strong>
                <small class="text-muted d-block">Recurring services (software licenses, cloud)</small>
              </div>
            </div>
          </div>
          <div class="list-group-item border-0 px-0">
            <div class="d-flex align-items-center">
              <span class="badge bg-danger me-2">EXP</span>
              <div>
                <strong>Expense</strong>
                <small class="text-muted d-block">Direct expenses (one-time costs)</small>
              </div>
            </div>
          </div>
          <div class="list-group-item border-0 px-0">
            <div class="d-flex align-items-center">
              <span class="badge bg-light text-dark me-2">UTI</span>
              <div>
                <strong>Utility</strong>
                <small class="text-muted d-block">Utility expenses (electricity, water, internet)</small>
              </div>
            </div>
          </div>
          <div class="list-group-item border-0 px-0">
            <div class="d-flex align-items-center">
              <span class="badge bg-warning me-2">VIR</span>
              <div>
                <strong>Virtual</strong>
                <small class="text-muted d-block">Digital assets, licenses</small>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>

@section Scripts {
  <script>
    document.addEventListener('DOMContentLoaded', function () {
      console.log('Create Item page loaded');

      // Get elements
      const itemTypeSelect = document.getElementById('itemTypeSelect');
      const materialTypeSelect = document.getElementById('materialTypeSelect');
      const materialTypeRow = document.getElementById('materialTypeRow');
      const materialTypeGuide = document.getElementById('materialTypeGuide');
      const stockManagement = document.getElementById('stockManagement');
      const initialPurchaseCard = document.getElementById('initialPurchaseCard');
      const manufacturingBomCard = document.getElementById('manufacturingBomCard');
      const bomGuideCard = document.getElementById('bomGuideCard');
      const hasInitialPurchaseCheckbox = document.getElementById('hasInitialPurchaseCheckbox');
      const initialPurchaseSection = document.getElementById('initialPurchaseSection');

      // Debug: Check if all elements are found
      console.log('Element check:');
      console.log('itemTypeSelect:', !!itemTypeSelect);
      console.log('materialTypeSelect:', !!materialTypeSelect);
      console.log('materialTypeRow:', !!materialTypeRow);
      console.log('materialTypeGuide:', !!materialTypeGuide);
      console.log('stockManagement:', !!stockManagement);
      console.log('initialPurchaseCard:', !!initialPurchaseCard);

      // Get all initial purchase fields
      const initialPurchaseFields = document.querySelectorAll('#initialPurchaseSection input, #initialPurchaseSection select');

      // Manufacturing BOM elements
      const parentRawMaterialSelect = document.querySelector('select[name="ParentRawMaterialId"]');
      const yieldFactorInput = document.querySelector('input[name="YieldFactor"]');
      const wastePercentageInput = document.querySelector('input[name="WastePercentage"]');
      const requiredMaterialDisplay = document.getElementById('requiredMaterialDisplay');
      const bomPreview = document.getElementById('bomPreview');

      function updateFormBasedOnItemType() {
        const itemType = parseInt(itemTypeSelect.value);
        // Updated to include Consumable (4) and R&D Materials (8) as inventory-tracked
        const isInventoried = itemType === 0 || itemType === 4 || itemType === 8; // Inventoried, Consumable, R&D Materials
        
        // NEW: Determine if MaterialType should be shown based on ItemType
        const isMaterialItem = itemType === 0 || itemType === 4 || itemType === 8; // Only show MaterialType for Inventoried, Consumable, R&D Materials
        
        console.log('ItemType changed to:', itemType, 'isMaterialItem:', isMaterialItem, 'isInventoried:', isInventoried);
        
        if (isMaterialItem) {
          if (materialTypeRow) {
            materialTypeRow.style.display = 'block';
            console.log('Showing MaterialType row');
          }
          if (materialTypeGuide) {
            materialTypeGuide.style.display = 'block';
            console.log('Showing MaterialType guide');
          }
        } else {
          if (materialTypeRow) {
            materialTypeRow.style.display = 'none';
            console.log('Hiding MaterialType row');
          }
          if (materialTypeGuide) {
            materialTypeGuide.style.display = 'none';
            console.log('Hiding MaterialType guide');
          }
          // Reset MaterialType to Standard for non-material items
          if (materialTypeSelect) {
            materialTypeSelect.value = '0';
            console.log('Reset MaterialType to Standard');
          }
        }

        if (isInventoried) {
          stockManagement.style.display = 'block';
          initialPurchaseCard.style.display = 'block';
        } else {
          stockManagement.style.display = 'none';
          initialPurchaseCard.style.display = 'none';
          hasInitialPurchaseCheckbox.checked = false;
          initialPurchaseSection.style.display = 'none';

          initialPurchaseFields.forEach(field => {
            field.value = '';
            field.setAttribute('disabled', 'disabled');
          });
        }

        updateManufacturingBomVisibility();
      }

      function updateManufacturingBomVisibility() {
        const materialType = parseInt(materialTypeSelect.value);
        const itemType = parseInt(itemTypeSelect.value);
        const isTransformed = materialType === 2; // Transformed = 2
        // Updated to include Consumable (4) and R&D Materials (8) as inventory-tracked
        const isInventoried = itemType === 0 || itemType === 4 || itemType === 8; // Inventoried, Consumable, R&D Materials

        if (isTransformed && isInventoried) {
          manufacturingBomCard.style.display = 'block';
          bomGuideCard.style.display = 'block';

          // Make manufacturing BOM fields required
          if (parentRawMaterialSelect) parentRawMaterialSelect.required = true;
          if (yieldFactorInput) yieldFactorInput.required = true;
        } else {
          manufacturingBomCard.style.display = 'none';
          bomGuideCard.style.display = 'none';
          bomPreview.style.display = 'none';

          // Make manufacturing BOM fields optional
          if (parentRawMaterialSelect) {
            parentRawMaterialSelect.required = false;
            parentRawMaterialSelect.value = '';
          }
          if (yieldFactorInput) {
            yieldFactorInput.required = false;
            yieldFactorInput.value = '';
          }
          if (wastePercentageInput) {
            wastePercentageInput.value = '';
          }
        }

        updateBomPreview();
      }

      function updateBomPreview() {
        const materialType = parseInt(materialTypeSelect.value);
        const isTransformed = materialType === 2;

        if (!isTransformed) {
          bomPreview.style.display = 'none';
          return;
        }

        const partNumber = document.querySelector('input[name="PartNumber"]').value.trim();
        const description = document.querySelector('input[name="Description"]').value.trim();
        const parentRawMaterialId = parentRawMaterialSelect ? parentRawMaterialSelect.value : '';
        const parentRawMaterialText = parentRawMaterialSelect ? parentRawMaterialSelect.options[parentRawMaterialSelect.selectedIndex].text : '';
        const yieldFactor = yieldFactorInput ? parseFloat(yieldFactorInput.value) : 0;

        if (partNumber && description && parentRawMaterialId && yieldFactor > 0) {
          const requiredQuantity = (1 / yieldFactor).toFixed(4);

          document.getElementById('previewBomNumber').textContent = `${partNumber}-MFG`;
          document.getElementById('previewBomDescription').textContent = `Manufacturing BOM for ${description}`;
          document.getElementById('previewRawMaterial').textContent = parentRawMaterialText !== '-- Select Raw Material --' ? parentRawMaterialText : '-';
          document.getElementById('previewQuantity').textContent = `${requiredQuantity} units`;

          bomPreview.style.display = 'block';
        } else {
          bomPreview.style.display = 'none';
        }
      }

      function updateRequiredMaterialCalculation() {
        const yieldFactor = yieldFactorInput ? parseFloat(yieldFactorInput.value) : 0;

        if (yieldFactor > 0 && yieldFactor <= 1) {
          const requiredQuantity = (1 / yieldFactor).toFixed(4);
          const percentage = (yieldFactor * 100).toFixed(1);
          requiredMaterialDisplay.innerHTML = `<strong>${requiredQuantity}</strong> units of raw material needed<br><small class="text-muted">(${percentage}% yield efficiency)</small>`;
        } else if (yieldFactor > 1) {
          requiredMaterialDisplay.innerHTML = '<span class="text-danger">Yield factor must be between 0.01 and 1.0</span>';
        } else {
          requiredMaterialDisplay.innerHTML = '<span class="text-muted">Enter yield factor to calculate</span>';
        }

        updateBomPreview();
      }

      // Initial setup
      updateFormBasedOnItemType();

      // Event listeners
      itemTypeSelect.addEventListener('change', updateFormBasedOnItemType);
      materialTypeSelect.addEventListener('change', updateManufacturingBomVisibility);

      if (yieldFactorInput) {
        yieldFactorInput.addEventListener('input', updateRequiredMaterialCalculation);
      }

      // Update BOM preview when key fields change
      document.querySelector('input[name="PartNumber"]').addEventListener('input', updateBomPreview);
      document.querySelector('input[name="Description"]').addEventListener('input', updateBomPreview);
      if (parentRawMaterialSelect) {
        parentRawMaterialSelect.addEventListener('change', updateBomPreview);
      }

      // Handle initial purchase section toggle
      if (hasInitialPurchaseCheckbox && initialPurchaseSection) {
        hasInitialPurchaseCheckbox.addEventListener('change', function () {
          if (this.checked) {
            initialPurchaseSection.style.display = 'block';
            initialPurchaseFields.forEach(field => {
              field.removeAttribute('disabled');
            });
            const purchaseDateField = document.querySelector('input[name="InitialPurchaseDate"]');
            if (purchaseDateField && !purchaseDateField.value) {
              purchaseDateField.value = new Date().toISOString().split('T')[0];
            }
          } else {
            initialPurchaseSection.style.display = 'none';
            initialPurchaseFields.forEach(field => {
              field.setAttribute('disabled', 'disabled');
              field.value = '';
            });
            const totalCostField = document.getElementById('initialTotalCost');
            if (totalCostField) {
              totalCostField.value = '';
            }
          }
        });
      }

      // Handle total cost calculation
      const quantityInput = document.getElementById('initialQuantity');
      const costInput = document.getElementById('initialCostPerUnit');
      const totalCostInput = document.getElementById('initialTotalCost');

      function updateInitialTotal() {
        if (quantityInput && costInput && totalCostInput) {
          const quantity = parseFloat(quantityInput.value) || 0;
          const cost = parseFloat(costInput.value) || 0;
          const total = quantity * cost;
          totalCostInput.value = total > 0 ? '$' + total.toFixed(2) : '';
        }
      }

      if (quantityInput && costInput) {
        quantityInput.addEventListener('input', updateInitialTotal);
        costInput.addEventListener('input', updateInitialTotal);
      }

      // Handle image preview
      const imageFileInput = document.getElementById('imageFile');
      const imagePreview = document.getElementById('imagePreview');
      const previewImg = document.getElementById('previewImg');

      if (imageFileInput && imagePreview && previewImg) {
        imageFileInput.addEventListener('change', function (e) {
          const file = e.target.files[0];
          if (file) {
            const reader = new FileReader();
            reader.onload = function (e) {
              previewImg.src = e.target.result;
              imagePreview.style.display = 'block';
            };
            reader.readAsDataURL(file);
          } else {
            imagePreview.style.display = 'none';
          }
        });
      }

      // Enhanced form submission validation
      const form = document.getElementById('createItemForm');
      if (!form) {
        console.error('Form not found!');
        return;
      }

      form.addEventListener('submit', function (e) {
        console.log('Form submission started');

        // Check required fields
        const partNumber = document.querySelector('input[name="PartNumber"]').value.trim();
        const description = document.querySelector('input[name="Description"]').value.trim();

        if (!partNumber || !description) {
          e.preventDefault();
          alert('Please fill in the required fields: Part Number and Description');
          return false;
        }

        const itemType = parseInt(itemTypeSelect.value);
        const materialType = parseInt(materialTypeSelect.value);
        const isInventoried = itemType === 0;
        const isTransformed = materialType === 2;
        const hasInitialPurchase = hasInitialPurchaseCheckbox.checked;

        // Validate transformed material requirements
        if (isTransformed && isInventoried) {
          const parentRawMaterialId = parentRawMaterialSelect ? parentRawMaterialSelect.value : '';
          const yieldFactor = yieldFactorInput ? parseFloat(yieldFactorInput.value) : 0;

          if (!parentRawMaterialId) {
            e.preventDefault();
            alert('Please select a parent raw material for transformed materials.');
            if (parentRawMaterialSelect) parentRawMaterialSelect.focus();
            return false;
          }

          if (!yieldFactor || yieldFactor <= 0 || yieldFactor > 1) {
            e.preventDefault();
            alert('Please enter a valid yield factor between 0.01 and 1.0 for transformed materials.');
            if (yieldFactorInput) yieldFactorInput.focus();
            return false;
          }

          const wastePercentage = wastePercentageInput ? parseFloat(wastePercentageInput.value) : 0;
          if (wastePercentage < 0 || wastePercentage > 50) {
            e.preventDefault();
            alert('Waste percentage must be between 0 and 50%.');
            if (wastePercentageInput) wastePercentageInput.focus();
            return false;
          }
        }

        // Validate initial purchase
        // Updated to include Consumable (4) and R&D Materials (8) as inventory-tracked
        const isInventoriedForPurchase = itemType === 0 || itemType === 4 || itemType === 8; // Inventoried, Consumable, R&D Materials
        if (isInventoriedForPurchase && hasInitialPurchase) {
          const vendor = document.querySelector('input[name="InitialVendor"]').value.trim();
          const quantity = document.querySelector('input[name="InitialQuantity"]').value;
          const cost = document.querySelector('input[name="InitialCostPerUnit"]').value;

          if (!vendor) {
            e.preventDefault();
            alert('Please enter the vendor name for the initial purchase.');
            document.querySelector('input[name="InitialVendor"]').focus();
            return false;
          }

          if (!quantity || quantity <= 0) {
            e.preventDefault();
            alert('Please enter a valid quantity (greater than 0) for the initial purchase.');
            document.querySelector('input[name="InitialQuantity"]').focus();
            return false;
          }

          if (!cost || cost <= 0) {
            e.preventDefault();
            alert('Please enter a valid cost per unit (greater than 0) for the initial purchase.');
            document.querySelector('input[name="InitialCostPerUnit"]').focus();
            return false;
          }
        }

        console.log('Form validation passed, submitting...');
        return true;
      });

      // Function to open create vendor modal (placeholder for now)
      window.openCreateVendorModal = function() {
        // For now, redirect to vendor creation page
        // In the future, this could open a modal dialog
        if (confirm('This will open the vendor creation page in a new tab. Continue?')) {
          window.open('/Vendors/Create', '_blank');
        }
      };
    });
  </script>
}