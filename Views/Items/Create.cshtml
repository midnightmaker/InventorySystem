@model InventorySystem.ViewModels.CreateItemViewModel
@{
  ViewData["Title"] = "Create Item";
}

<!-- DEBUG INFO -->
@if (ViewBag.ModelStateErrors != null)

{
  <div class="alert alert-danger">
    <h5>ModelState Errors:</h5>
    @foreach (var error in ViewBag.ModelStateErrors)

    {
      <div><strong>@error.Field:</strong> @string.Join(", ", error.Errors)</div>
    }
  </div>
}

<h1><i class="fas fa-plus"></i> Create Item</h1>

<div class="row">
  <div class="col-md-8">
    <form asp-action="Create" enctype="multipart/form-data" method="post">
      <div class="card">
        <div class="card-header">
          <h5><i class="fas fa-info-circle"></i> Basic Information</h5>
        </div>
        <div class="card-body">
          <div class="row">
            <div class="col-md-6">
              <div class="mb-3">
                <label asp-for="PartNumber" class="form-label"></label>
                <input asp-for="PartNumber" class="form-control" required />
                <span asp-validation-for="PartNumber" class="text-danger"></span>
              </div>
            </div>
            <div class="col-md-6">
              <div class="mb-3">
                <label asp-for="MinimumStock" class="form-label"></label>
                <input asp-for="MinimumStock" class="form-control" type="number" min="0" value="0" />
                <span asp-validation-for="MinimumStock" class="text-danger"></span>
              </div>
            </div>
          </div>

          <div class="mb-3">
            <label asp-for="Description" class="form-label"></label>
            <input asp-for="Description" class="form-control" required />
            <span asp-validation-for="Description" class="text-danger"></span>
          </div>

          <div class="mb-3">
            <label asp-for="Comments" class="form-label"></label>
            <textarea asp-for="Comments" class="form-control" rows="3" placeholder="Component specifications for optical, mechanical, or electronic parts"></textarea>
            <span asp-validation-for="Comments" class="text-danger"></span>
          </div>
        </div>
      </div>

      <div class="card mt-3">
        <div class="card-header">
          <h5><i class="fas fa-image"></i> Item Image (Optional)</h5>
        </div>
        <div class="card-body">
          <div class="mb-3">
            <label asp-for="ImageFile" class="form-label"></label>
            <input asp-for="ImageFile" class="form-control" type="file" accept="image/*" id="imageFile" />
            <span asp-validation-for="ImageFile" class="text-danger"></span>
            <div class="form-text">
              Upload an image of the component (JPG, PNG, GIF, BMP - Max 5MB)
            </div>
          </div>

          <!-- Image preview -->
          <div id="imagePreview" style="display: none;">
            <label class="form-label">Preview:</label>
            <div>
              <img id="previewImg" src="#" alt="Image preview" style="max-width: 200px; max-height: 200px; border: 1px solid #ddd; border-radius: 4px; padding: 5px;" />
            </div>
          </div>
        </div>
      </div>

      <div class="card mt-3">
        <div class="card-header">
          <div class="form-check">
            <input asp-for="HasInitialPurchase" class="form-check-input" type="checkbox" id="hasInitialPurchase" />
            <label class="form-check-label" for="hasInitialPurchase">
              <h5><i class="fas fa-shopping-cart"></i> Add Initial Purchase (Optional)</h5>
            </label>
          </div>
        </div>
        <div class="card-body" id="initialPurchaseSection" style="display: none;">
          <div class="alert alert-info">
            <i class="fas fa-info-circle"></i>
            <strong>Optional:</strong> Add initial inventory and cost information when creating the item.
          </div>

          <div class="row">
            <div class="col-md-6">
              <div class="mb-3">
                <label asp-for="InitialVendor" class="form-label"></label>
                <input asp-for="InitialVendor" class="form-control" placeholder="Vendor name" />
                <span asp-validation-for="InitialVendor" class="text-danger"></span>
              </div>
            </div>
            <div class="col-md-6">
              <div class="mb-3">
                <label asp-for="InitialPurchaseDate" class="form-label"></label>
                <input asp-for="InitialPurchaseDate" class="form-control" type="date" />
                <span asp-validation-for="InitialPurchaseDate" class="text-danger"></span>
              </div>
            </div>
          </div>

          <div class="row">
            <div class="col-md-4">
              <div class="mb-3">
                <label asp-for="InitialQuantity" class="form-label"></label>
                <input asp-for="InitialQuantity" class="form-control" type="number" min="1" id="initialQuantity" />
                <span asp-validation-for="InitialQuantity" class="text-danger"></span>
              </div>
            </div>
            <div class="col-md-4">
              <div class="mb-3">
                <label asp-for="InitialCostPerUnit" class="form-label"></label>
                <input asp-for="InitialCostPerUnit" class="form-control" type="number" step="0.01" min="0" id="initialCostPerUnit" />
                <span asp-validation-for="InitialCostPerUnit" class="text-danger"></span>
              </div>
            </div>
            <div class="col-md-4">
              <div class="mb-3">
                <label class="form-label">Total Cost</label>
                <input type="text" class="form-control" id="initialTotalCost" readonly />
              </div>
            </div>
          </div>

          <div class="mb-3">
            <label asp-for="InitialPurchaseOrderNumber" class="form-label"></label>
            <input asp-for="InitialPurchaseOrderNumber" class="form-control" placeholder="Optional PO number" />
            <span asp-validation-for="InitialPurchaseOrderNumber" class="text-danger"></span>
          </div>
        </div>
      </div>

      <div class="mt-3">
        <button type="submit" class="btn btn-primary" id="submitBtn">
          <i class="fas fa-save"></i> Create Item
        </button>
        <a href="/Items" class="btn btn-secondary">Cancel</a>
      </div>

      <!-- DEBUG: Show form values -->
      <div class="mt-3 p-3 bg-light">
        <h6>Debug Info:</h6>
        <div id="debugInfo"></div>
      </div>
    </form>
  </div>

  <div class="col-md-4">
    <div class="card">
      <div class="card-header">
        <h6><i class="fas fa-lightbulb"></i> Tips</h6>
      </div>
      <div class="card-body">
        <ul class="list-unstyled small">
          <li><i class="fas fa-check text-success"></i> Use descriptive part numbers</li>
          <li><i class="fas fa-check text-success"></i> Add component specifications in comments</li>
          <li><i class="fas fa-check text-success"></i> Upload clear component images</li>
          <li><i class="fas fa-check text-success"></i> Set appropriate minimum stock levels</li>
          <li><i class="fas fa-check text-success"></i> Include initial purchase for immediate inventory</li>
        </ul>
      </div>
    </div>
  </div>
</div>

<script>
  document.addEventListener('DOMContentLoaded', function () {
    // Debug form submission
    const form = document.querySelector('form');
    const debugInfo = document.getElementById('debugInfo');

    form.addEventListener('submit', function (e) {
      const formData = new FormData(form);
      let debugText = 'Form Data:<br>';
      for (let [key, value] of formData.entries()) {
        debugText += `${key}: ${value}<br>`;
      }
      debugInfo.innerHTML = debugText;

      console.log('Form submitting with data:', Object.fromEntries(formData));
    });

    // Handle initial purchase section toggle
    const hasInitialPurchaseCheckbox = document.getElementById('hasInitialPurchase');
    const initialPurchaseSection = document.getElementById('initialPurchaseSection');

    if (hasInitialPurchaseCheckbox && initialPurchaseSection) {
      hasInitialPurchaseCheckbox.addEventListener('change', function () {
        if (this.checked) {
          initialPurchaseSection.style.display = 'block';
        } else {
          initialPurchaseSection.style.display = 'none';
        }
      });
    }

    // Handle total cost calculation
    const quantityInput = document.getElementById('initialQuantity');
    const costInput = document.getElementById('initialCostPerUnit');
    const totalCostInput = document.getElementById('initialTotalCost');

    function updateInitialTotal() {
      if (quantityInput && costInput && totalCostInput) {
        const quantity = parseFloat(quantityInput.value) || 0;
        const cost = parseFloat(costInput.value) || 0;
        const total = quantity * cost;
        totalCostInput.value = '$' + total.toFixed(2);
      }
    }

    if (quantityInput && costInput) {
      quantityInput.addEventListener('input', updateInitialTotal);
      costInput.addEventListener('input', updateInitialTotal);
    }

    // Handle image preview
    const imageFileInput = document.getElementById('imageFile');
    const imagePreview = document.getElementById('imagePreview');
    const previewImg = document.getElementById('previewImg');

    if (imageFileInput && imagePreview && previewImg) {
      imageFileInput.addEventListener('change', function (e) {
        const file = e.target.files[0];
        if (file) {
          const reader = new FileReader();
          reader.onload = function (e) {
            previewImg.src = e.target.result;
            imagePreview.style.display = 'block';
          };
          reader.readAsDataURL(file);
        } else {
          imagePreview.style.display = 'none';
        }
      });
    }
  });
</script>