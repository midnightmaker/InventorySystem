@model IEnumerable<InventorySystem.Models.Sale>
@{
    ViewData["Title"] = "Sales";
}

<div class="d-flex justify-content-between align-items-center mb-4">
  <h1><i class="fas fa-cash-register"></i> Sales</h1>
  <div class="btn-group">
    <a href="/Sales/Create" class="btn btn-success">
      <i class="fas fa-plus"></i> New Sale
    </a>
    <a href="/Sales/Backorders" class="btn btn-warning">
      <i class="fas fa-hourglass-half"></i> Backorders
      @{
        var backorderCount = Model?.Count(s => s.SaleStatus == InventorySystem.Models.Enums.SaleStatus.Backordered) ?? 0;
      }
      @if (backorderCount > 0)
      {
        <span class="badge bg-light text-dark">@backorderCount</span>
      }
    </a>
    <a href="/Sales/Reports" class="btn btn-outline-info">
      <i class="fas fa-chart-bar"></i> Reports
    </a>
  </div>
</div>

@if (TempData["SuccessMessage"] != null)
{
    <div class="alert alert-success alert-dismissible fade show">
        @TempData["SuccessMessage"]
        <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
    </div>
}

@if (TempData["ErrorMessage"] != null)
{
    <div class="alert alert-danger alert-dismissible fade show">
        @TempData["ErrorMessage"]
        <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
    </div>
}

<div class="card">
    <div class="card-header">
        <h5><i class="fas fa-list"></i> Sales Records</h5>
    </div>
    <div class="card-body">
        @if (Model?.Any() == true)
        {
            <div class="table-responsive">
                <table class="table table-striped table-hover">
                    <thead class="table-dark">
                        <tr>
                            <th>Sale #</th>
                            <th>Date</th>
                            <th>Customer</th>
                            <th>Items</th>
                            <th>Total</th>
                            <th>Payment Status</th>
                            <th>Sale Status</th>
                            <th>Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var sale in Model.OrderByDescending(s => s.SaleDate))
                        {
                            <tr>
                                <td>
                                    <strong>@sale.SaleNumber</strong>
                                    @if (!string.IsNullOrEmpty(sale.OrderNumber))
                                    {
                                        <br><small class="text-muted">Order: @sale.OrderNumber</small>
                                    }
                                </td>
                                <td>@sale.SaleDate.ToString("MM/dd/yyyy")</td>
                                <td>
                                    @* FIXED: Use Customer relationship instead of legacy properties *@
                                    @if (sale.Customer != null)
                                    {
                                        <strong>
                                            <a href="/Customers/Details/@sale.Customer.Id" class="text-decoration-none">
                                                @sale.Customer.CustomerName
                                            </a>
                                        </strong>
                                        @if (!string.IsNullOrEmpty(sale.Customer.CompanyName))
                                        {
                                            <br><small class="text-muted">@sale.Customer.CompanyName</small>
                                        }
                                        @if (!string.IsNullOrEmpty(sale.Customer.Email))
                                        {
                                            <br><small class="text-muted">@sale.Customer.Email</small>
                                        }
                                    }
                                    else
                                    {
                                        <span class="text-muted">Unknown Customer</span>
                                    }
                                </td>
                                <td>
                                    <span class="badge bg-info">@sale.SaleItems.Count() items</span>
                                    @if (sale.HasBackorders)
                                    {
                                        <br><span class="badge bg-warning text-dark">
                                            <i class="fas fa-hourglass-half"></i> @sale.TotalBackorders backordered
                                        </span>
                                    }
                                </td>
                                <td>@sale.TotalAmount.ToString("C")</td>
                                <td>
                                    @if (sale.PaymentStatus == InventorySystem.Models.Enums.PaymentStatus.Paid)
                                    {
                                        <span class="badge bg-success">Paid</span>
                                    }
                                    else if (sale.PaymentStatus == InventorySystem.Models.Enums.PaymentStatus.Pending)
                                    {
                                        <span class="badge bg-warning">Pending</span>
                                        @if (sale.IsOverdue)
                                        {
                                            <br><small class="text-danger"><i class="fas fa-exclamation-triangle"></i> @sale.DaysOverdue days overdue</small>
                                        }
                                    }
                                    else
                                    {
                                        <span class="badge bg-danger">@sale.PaymentStatus</span>
                                    }
                                </td>
                                <td>
                                    @if (sale.SaleStatus == InventorySystem.Models.Enums.SaleStatus.Processing)
                                    {
                                        <span class="badge bg-primary">Processing</span>
                                    }
                                    else if (sale.SaleStatus == InventorySystem.Models.Enums.SaleStatus.Shipped)
                                    {
                                        <span class="badge bg-success">Shipped</span>
                                    }
                                    else if (sale.SaleStatus == InventorySystem.Models.Enums.SaleStatus.Delivered)
                                    {
                                        <span class="badge bg-info">Delivered</span>
                                    }
                                    else if (sale.SaleStatus == InventorySystem.Models.Enums.SaleStatus.Backordered)
                                    {
                                        <span class="badge bg-warning">Backordered</span>
                                    }
                                    else
                                    {
                                        <span class="badge bg-secondary">@sale.SaleStatus</span>
                                    }
                                </td>
                                <td>
                                    <div class="btn-group btn-group-sm">
                                        <a href="/Sales/Details/@sale.Id" class="btn btn-outline-primary" title="View Details">
                                            <i class="fas fa-eye"></i>
                                        </a>
                                        <a href="@Url.Action("InvoiceReport", new { saleId = sale.Id })" 
                                           class="btn btn-outline-success" title="View Invoice">
                                            <i class="fas fa-file-invoice-dollar"></i>
                                        </a>
                                        <a href="/Sales/Edit/@sale.Id" class="btn btn-outline-secondary" title="Edit Sale">
                                            <i class="fas fa-edit"></i>
                                        </a>
                                        @if (sale.Customer != null)
                                        {
                                            <a href="/Customers/Details/@sale.Customer.Id" class="btn btn-outline-info" title="View Customer">
                                                <i class="fas fa-user"></i>
                                            </a>
                                        }
                                    </div>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>

            <div class="row mt-4">
                <div class="col-md-12">
                    <div class="card bg-light">
                        <div class="card-body">
                            <div class="row text-center">
                                <div class="col-md-3">
                                    <h6>Total Sales: <span class="badge bg-primary">@Model.Count()</span></h6>
                                </div>
                                <div class="col-md-3">
                                    <h6>Total Value: <span class="badge bg-success">@Model.Sum(s => s.TotalAmount).ToString("C")</span></h6>
                                </div>
                                <div class="col-md-3">
                                    <h6>Paid: <span class="badge bg-success">@Model.Count(s => s.PaymentStatus == InventorySystem.Models.Enums.PaymentStatus.Paid)</span></h6>
                                </div>
                                <div class="col-md-3">
                                    <h6>Pending: <span class="badge bg-warning">@Model.Count(s => s.PaymentStatus == InventorySystem.Models.Enums.PaymentStatus.Pending)</span></h6>
                                </div>
                            </div>
                            
                            @* Additional Statistics Row *@
                            <div class="row text-center mt-3">
                                <div class="col-md-3">
                                    <h6>Shipped: <span class="badge bg-info">@Model.Count(s => s.SaleStatus == InventorySystem.Models.Enums.SaleStatus.Shipped)</span></h6>
                                </div>
                                <div class="col-md-3">
                                    <h6>Backorders: <span class="badge bg-warning">@Model.Count(s => s.SaleStatus == InventorySystem.Models.Enums.SaleStatus.Backordered)</span></h6>
                                </div>
                                <div class="col-md-3">
                                    <h6>Avg Sale: <span class="badge bg-secondary">@(Model.Any() ? Model.Average(s => s.TotalAmount).ToString("C") : "$0")</span></h6>
                                </div>
                                <div class="col-md-3">
                                    <h6>Overdue: <span class="badge bg-danger">@Model.Count(s => s.IsOverdue)</span></h6>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        }
        else
        {
            <div class="text-center py-5">
                <i class="fas fa-shopping-cart fa-3x text-muted mb-3"></i>
                <h4 class="text-muted">No Sales Records</h4>
                <p class="text-muted">Start creating sales to track your revenue.</p>
                <a href="/Sales/Create" class="btn btn-success">
                    <i class="fas fa-plus"></i> Create Your First Sale
                </a>
            </div>
        }
    </div>
</div>