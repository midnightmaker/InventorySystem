@model InventorySystem.Controllers.AccountDetailsViewModel
@{
  ViewData["Title"] = $"Account Details - {Model.AccountName}";
}

<div class="d-flex justify-content-between align-items-center mb-4">
  <div>
    <h1><i class="fas fa-user-circle"></i> Account Details</h1>
    <p class="text-muted mb-0">@Model.AccountType Account: @Model.AccountName</p>
  </div>
  <div class="btn-group">
    <a href="/AccountsReceivable" class="btn btn-outline-secondary">
      <i class="fas fa-arrow-left"></i> Back to A/R
    </a>
    <a href="/Sales/Create?customerId=@Model.AccountId" class="btn btn-success">
      <i class="fas fa-plus"></i> New Sale
    </a>
    <a href="/CustomerPayments/Create?customerId=@Model.AccountId" class="btn btn-primary">
      <i class="fas fa-credit-card"></i> Record Payment
    </a>
  </div>
</div>

@if (TempData["SuccessMessage"] != null)
{
  <div class="alert alert-success alert-dismissible fade show">
    <i class="fas fa-check-circle"></i> @TempData["SuccessMessage"]
    <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
  </div>
}

@if (TempData["ErrorMessage"] != null)
{
  <div class="alert alert-danger alert-dismissible fade show">
    <i class="fas fa-exclamation-circle"></i> @TempData["ErrorMessage"]
    <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
  </div>
}

<!-- Account Status Banner -->
@if (Model.IsHighRisk)
{
  <div class="alert alert-warning">
    <h5><i class="fas fa-exclamation-triangle"></i> High Risk Account</h5>
    <p class="mb-2">This account has been flagged for the following risk factors:</p>
    <ul class="mb-0">
      @foreach (var factor in Model.RiskFactors)
      {
        <li>@factor</li>
      }
    </ul>
  </div>
}

<!-- Key Metrics Cards -->
<div class="row mb-4">
  <div class="col-md-3">
    <div class="card @(Model.OutstandingBalance > 0 ? "bg-warning" : "bg-success") text-white">
      <div class="card-body">
        <div class="d-flex justify-content-between">
          <div>
            <h4>@Model.OutstandingBalance.ToString("C")</h4>
            <p class="mb-0">Outstanding Balance</p>
          </div>
          <div class="align-self-center">
            <i class="fas fa-balance-scale fa-2x"></i>
          </div>
        </div>
        <small>@(Model.OutstandingBalance > 0 ? "Amount Due" : "Account Paid")</small>
      </div>
    </div>
  </div>
  <div class="col-md-3">
    <div class="card bg-primary text-white">
      <div class="card-body">
        <div class="d-flex justify-content-between">
          <div>
            <h4>@Model.TotalSales.ToString("C")</h4>
            <p class="mb-0">Total Sales</p>
          </div>
          <div class="align-self-center">
            <i class="fas fa-chart-line fa-2x"></i>
          </div>
        </div>
        <small>Lifetime Value</small>
      </div>
    </div>
  </div>
  <div class="col-md-3">
    <div class="card bg-info text-white">
      <div class="card-body">
        <div class="d-flex justify-content-between">
          <div>
            <h4>@Model.CreditAvailable.ToString("C")</h4>
            <p class="mb-0">Credit Available</p>
          </div>
          <div class="align-self-center">
            <i class="fas fa-credit-card fa-2x"></i>
          </div>
        </div>
        <small>of @Model.CreditLimit.ToString("C") limit</small>
      </div>
    </div>
  </div>
  <div class="col-md-3">
    <div class="card @(Model.DaysOutstanding > 60 ? "bg-danger" : Model.DaysOutstanding > 30 ? "bg-warning" : "bg-success") text-white">
      <div class="card-body">
        <div class="d-flex justify-content-between">
          <div>
            <h4>@Model.DaysOutstanding</h4>
            <p class="mb-0">Avg Days Outstanding</p>
          </div>
          <div class="align-self-center">
            <i class="fas fa-clock fa-2x"></i>
          </div>
        </div>
        <small>Payment Performance</small>
      </div>
    </div>
  </div>
</div>

<div class="row">
  <!-- Account Information -->
  <div class="col-md-4">
    <div class="card">
      <div class="card-header">
        <h5><i class="fas fa-info-circle"></i> Account Information</h5>
      </div>
      <div class="card-body">
        <dl class="row">
          <dt class="col-sm-5">Account ID:</dt>
          <dd class="col-sm-7">@Model.AccountId</dd>

          <dt class="col-sm-5">Status:</dt>
          <dd class="col-sm-7">
            <span class="badge bg-@(Model.IsActive ? "success" : "secondary")">
              @(Model.IsActive ? "Active" : "Inactive")
            </span>
          </dd>

          <dt class="col-sm-5">Created:</dt>
          <dd class="col-sm-7">@Model.AccountCreatedDate.ToString("MM/dd/yyyy")</dd>

          <dt class="col-sm-5">Payment Terms:</dt>
          <dd class="col-sm-7">@Model.PaymentTerms</dd>

          <dt class="col-sm-5">Tax Exempt:</dt>
          <dd class="col-sm-7">@(Model.IsTaxExempt ? "Yes" : "No")</dd>

          @if (!string.IsNullOrEmpty(Model.ContactEmail))
          {
            <dt class="col-sm-5">Email:</dt>
            <dd class="col-sm-7">
              <a href="mailto:@Model.ContactEmail">@Model.ContactEmail</a>
            </dd>
          }

          @if (!string.IsNullOrEmpty(Model.ContactPhone))
          {
            <dt class="col-sm-5">Phone:</dt>
            <dd class="col-sm-7">
              <a href="tel:@Model.ContactPhone">@Model.ContactPhone</a>
            </dd>
          }

          <dt class="col-sm-5">Last Sale:</dt>
          <dd class="col-sm-7">
            @if (Model.LastSaleDate.HasValue)
            {
              @Model.LastSaleDate.Value.ToString("MM/dd/yyyy")
            }
            else
            {
              <span class="text-muted">No sales</span>
            }
          </dd>

          <dt class="col-sm-5">Last Payment:</dt>
          <dd class="col-sm-7">
            @if (Model.LastPaymentDate.HasValue)
            {
              @Model.LastPaymentDate.Value.ToString("MM/dd/yyyy")
            }
            else
            {
              <span class="text-muted">No payments</span>
            }
          </dd>
        </dl>
      </div>
    </div>

    <!-- Aging Analysis -->
    <div class="card mt-3">
      <div class="card-header">
        <h5><i class="fas fa-chart-pie"></i> Aging Analysis</h5>
      </div>
      <div class="card-body">
        <div class="mb-3">
          <div class="d-flex justify-content-between">
            <span>Current (0-30 days)</span>
            <strong>@Model.AgingAnalysis.Current.ToString("C")</strong>
          </div>
          <div class="progress" style="height: 6px;">
            <div class="progress-bar bg-success" style="width: @(Model.AgingAnalysis.Total > 0 ? (Model.AgingAnalysis.Current / Model.AgingAnalysis.Total * 100).ToString("F1") : "0")%"></div>
          </div>
        </div>

        <div class="mb-3">
          <div class="d-flex justify-content-between">
            <span>31-60 days</span>
            <strong>@Model.AgingAnalysis.Days31To60.ToString("C")</strong>
          </div>
          <div class="progress" style="height: 6px;">
            <div class="progress-bar bg-warning" style="width: @(Model.AgingAnalysis.Total > 0 ? (Model.AgingAnalysis.Days31To60 / Model.AgingAnalysis.Total * 100).ToString("F1") : "0")%"></div>
          </div>
        </div>

        <div class="mb-3">
          <div class="d-flex justify-content-between">
            <span>61-90 days</span>
            <strong>@Model.AgingAnalysis.Days61To90.ToString("C")</strong>
          </div>
          <div class="progress" style="height: 6px;">
            <div class="progress-bar bg-orange" style="width: @(Model.AgingAnalysis.Total > 0 ? (Model.AgingAnalysis.Days61To90 / Model.AgingAnalysis.Total * 100).ToString("F1") : "0")%"></div>
          </div>
        </div>

        <div class="mb-3">
          <div class="d-flex justify-content-between">
            <span>Over 90 days</span>
            <strong>@Model.AgingAnalysis.Over90Days.ToString("C")</strong>
          </div>
          <div class="progress" style="height: 6px;">
            <div class="progress-bar bg-danger" style="width: @(Model.AgingAnalysis.Total > 0 ? (Model.AgingAnalysis.Over90Days / Model.AgingAnalysis.Total * 100).ToString("F1") : "0")%"></div>
          </div>
        </div>

        <hr>
        <div class="d-flex justify-content-between">
          <strong>Total Outstanding:</strong>
          <strong>@Model.AgingAnalysis.Total.ToString("C")</strong>
        </div>
      </div>
    </div>
  </div>

  <!-- Main Content Area -->
  <div class="col-md-8">
    <!-- Unpaid Invoices -->
    <div class="card">
      <div class="card-header d-flex justify-content-between align-items-center">
        <h5><i class="fas fa-file-invoice"></i> Unpaid Invoices (@Model.UnpaidInvoices.Count)</h5>
        <span class="badge bg-warning">@Model.OutstandingBalance.ToString("C")</span>
      </div>
      <div class="card-body">
        @if (Model.UnpaidInvoices.Any())
        {
          <div class="table-responsive">
            <table class="table table-striped table-hover">
              <thead>
                <tr>
                  <th>Invoice #</th>
                  <th>Date</th>
                  <th>Due Date</th>
                  <th>Amount</th>
                  <th>Days Old</th>
                  <th>Status</th>
                  <th>Actions</th>
                </tr>
              </thead>
              <tbody>
                @foreach (var invoice in Model.UnpaidInvoices)
                {
                  var daysOld = (DateTime.Today - invoice.SaleDate).Days;
                  <tr class="@(daysOld > 90 ? "table-danger" : daysOld > 60 ? "table-warning" : daysOld > 30 ? "table-info" : "")">
                    <td>
                      <a href="/Sales/Details/@invoice.Id">@invoice.SaleNumber</a>
                    </td>
                    <td>@invoice.SaleDate.ToString("MM/dd/yyyy")</td>
                    <td>@invoice.PaymentDueDate.ToString("MM/dd/yyyy")</td>
                    <td><strong>@invoice.TotalAmount.ToString("C")</strong></td>
                    <td>
                      <span class="badge bg-@(daysOld > 90 ? "danger" : daysOld > 60 ? "warning" : daysOld > 30 ? "info" : "success")">
                        @daysOld days
                      </span>
                    </td>
                    <td>
                      <span class="badge bg-@(invoice.PaymentStatus == InventorySystem.Models.Enums.PaymentStatus.Overdue ? "danger" : "warning")">
                        @invoice.PaymentStatus
                      </span>
                    </td>
                    <td>
                      <div class="btn-group btn-group-sm">
                        <a href="/Sales/Details/@invoice.Id" class="btn btn-outline-primary" title="View Details">
                          <i class="fas fa-eye"></i>
                        </a>
                        <a href="/CustomerPayments/Create?customerId=@Model.AccountId&saleId=@invoice.Id" class="btn btn-outline-success" title="Record Payment">
                          <i class="fas fa-credit-card"></i>
                        </a>
                      </div>
                    </td>
                  </tr>
                }
              </tbody>
            </table>
          </div>
        }
        else
        {
          <div class="text-center py-4">
            <i class="fas fa-check-circle fa-3x text-success mb-3"></i>
            <h5>All Invoices Paid</h5>
            <p class="text-muted">This account has no outstanding invoices.</p>
          </div>
        }
      </div>
    </div>

    <!-- Recent Payments -->
    <div class="card mt-3">
      <div class="card-header">
        <h5><i class="fas fa-credit-card"></i> Recent Payments (Last 10)</h5>
      </div>
      <div class="card-body">
        @if (Model.RecentPayments.Any())
        {
          <div class="table-responsive">
            <table class="table table-striped">
              <thead>
                <tr>
                  <th>Date</th>
                  <th>Amount</th>
                  <th>Method</th>
                  <th>Reference</th>
                  <th>Actions</th>
                </tr>
              </thead>
              <tbody>
                @foreach (var payment in Model.RecentPayments)
                {
                  <tr>
                    <td>@payment.PaymentDate.ToString("MM/dd/yyyy")</td>
                    <td><strong>@payment.Amount.ToString("C")</strong></td>
                    <td>@payment.PaymentMethod</td>
                    <td>@payment.ReferenceNumber</td>
                    <td>
                      <a href="/CustomerPayments/Details/@payment.Id" class="btn btn-outline-primary btn-sm">
                        <i class="fas fa-eye"></i> View
                      </a>
                    </td>
                  </tr>
                }
              </tbody>
            </table>
          </div>
        }
        else
        {
          <div class="text-center py-4">
            <i class="fas fa-credit-card fa-3x text-muted mb-3"></i>
            <h5>No Payment History</h5>
            <p class="text-muted">No payments have been recorded for this account.</p>
          </div>
        }
      </div>
    </div>

    <!-- Monthly Sales Trend -->
    @if (Model.MonthlySalesTrend.Any())
    {
      <div class="card mt-3">
        <div class="card-header">
          <h5><i class="fas fa-chart-line"></i> 12-Month Sales Trend</h5>
        </div>
        <div class="card-body">
          <canvas id="salesTrendChart" width="400" height="200"></canvas>
        </div>
      </div>
    }
  </div>
</div>

<!-- Addresses -->
<div class="row mt-4">
  @if (!string.IsNullOrEmpty(Model.BillingAddress))
  {
    <div class="col-md-6">
      <div class="card">
        <div class="card-header">
          <h6><i class="fas fa-file-invoice"></i> Billing Address</h6>
        </div>
        <div class="card-body">
          <address>@Html.Raw(Model.BillingAddress.Replace("\n", "<br>"))</address>
        </div>
      </div>
    </div>
  }

  @if (!string.IsNullOrEmpty(Model.ShippingAddress))
  {
    <div class="col-md-6">
      <div class="card">
        <div class="card-header">
          <h6><i class="fas fa-shipping-fast"></i> Shipping Address</h6>
        </div>
        <div class="card-body">
          <address>@Html.Raw(Model.ShippingAddress.Replace("\n", "<br>"))</address>
        </div>
      </div>
    </div>
  }
</div>

@section Scripts {
  <script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/3.9.1/chart.min.js"></script>
  <script>
    // Sales Trend Chart
    @if (Model.MonthlySalesTrend.Any())
    {
          <text>
          const ctx = document.getElementById('salesTrendChart').getContext('2d');
          new Chart(ctx, {
              type: 'line',
              data: {
                  labels: [@Html.Raw(string.Join(",", Model.MonthlySalesTrend.Select(m => $"'{m.Month}'")))],
                  datasets: [{
                      label: 'Sales Amount',
                      data: [@Html.Raw(string.Join(",", Model.MonthlySalesTrend.Select(m => m.SalesAmount.ToString())))],
                      borderColor: 'rgb(75, 192, 192)',
                      backgroundColor: 'rgba(75, 192, 192, 0.2)',
                      tension: 0.1
                  }]
              },
              options: {
                  responsive: true,
                  scales: {
                      y: {
                          beginAtZero: true,
                          ticks: {
                              callback: function(value) {
                                  return '$' + value.toLocaleString();
                              }
                          }
                      }
                  },
                  plugins: {
                      tooltip: {
                          callbacks: {
                              label: function(context) {
                                  return 'Sales: $' + context.parsed.y.toLocaleString();
                              }
                          }
                      }
                  }
              }
          });
          </text>
    }
  </script>
}

<style>
  .bg-orange {
    background-color: #fd7e14 !important;
  }

  .progress {
    background-color: rgba(0,0,0,.1);
  }

  .table tr.table-danger td {
    border-color: #f8d7da;
  }

  .table tr.table-warning td {
    border-color: #fff3cd;
  }

  .table tr.table-info td {
    border-color: #b6effb;
  }
</style>