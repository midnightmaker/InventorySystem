@model InventorySystem.ViewModels.DashboardViewModel
@{
  ViewData["Title"] = "Dashboard";
}

<div class="row">
  <div class="col-md-12">
    <h1><i class="fas fa-tachometer-alt text-primary"></i> Inventory Dashboard</h1>
    <p class="text-muted">Real-time overview of your inventory management system</p>
  </div>
</div>

<!-- Key Statistics Cards -->
<div class="row mb-4">
  <div class="col-xl-2 col-lg-4 col-md-6 mb-3">
    <div class="card stat-card card-gradient-primary h-100">
      <div class="card-body text-center">
        <i class="fas fa-cube stat-icon mb-3"></i>
        <h2 class="stat-value">@Model.TotalItems.ToString("N0")</h2>
        <p class="stat-label mb-2">Total Items</p>
        <small>
          <i class="fas fa-arrow-up trend-up"></i> +@Model.ItemsAddedThisMonth this month
        </small>
      </div>
    </div>
  </div>

  <div class="col-xl-2 col-lg-4 col-md-6 mb-3">
    <div class="card stat-card card-gradient-success h-100">
      <div class="card-body text-center">
        <i class="fas fa-dollar-sign stat-icon mb-3"></i>
        <h2 class="stat-value">$@Model.TotalInventoryValue.ToString("N0")</h2>
        <p class="stat-label mb-2">Total Inventory Value</p>
        <small>
          @if (Model.MonthlyGrowth >= 0)

          {
            <i class="fas fa-arrow-up trend-up"></i>
          }

          else

          {
            <i class="fas fa-arrow-down trend-down"></i>
          }
          @Model.MonthlyGrowth.ToString("F1")% this month
        </small>
      </div>
    </div>
  </div>

  <div class="col-xl-2 col-lg-4 col-md-6 mb-3">
    <div class="card stat-card card-gradient-warning h-100">
      <div class="card-body text-center">
        <i class="fas fa-exclamation-triangle stat-icon mb-3"></i>
        <h2 class="stat-value">@Model.LowStockCount</h2>
        <p class="stat-label mb-2">Low Stock Alerts</p>
        <small>
          @{
            var criticalItems = Model.LowStockItems.Count(i => i.CurrentStock == 0);
          }
          @if (criticalItems > 0)

          {
            <i class="fas fa-exclamation-circle text-danger"></i>
            <span class="text-danger">@criticalItems critical</span>
          }

          else

          {
            <span><i class="fas fa-check-circle trend-up"></i> @Model.CriticalStockPercentage.ToString("F1")% critical</span>
          }
        </small>
      </div>
    </div>
  </div>

  <div class="col-xl-2 col-lg-4 col-md-6 mb-3">
    <div class="card stat-card card-gradient-info h-100">
      <div class="card-body text-center">
        <i class="fas fa-list stat-icon mb-3"></i>
        <h2 class="stat-value">@Model.TotalBoms</h2>
        <p class="stat-label mb-2">Total BOMs</p>
        <small>
          <i class="fas fa-arrow-up trend-up"></i> +@Model.BomsAddedThisMonth this month
        </small>
      </div>
    </div>
  </div>

  <div class="col-xl-2 col-lg-4 col-md-6 mb-3">
    <div class="card stat-card card-gradient-secondary h-100">
      <div class="card-body text-center">
        <i class="fas fa-shopping-cart stat-icon mb-3"></i>
        <h2 class="stat-value">@Model.TotalPurchases.ToString("N0")</h2>
        <p class="stat-label mb-2">Total Purchases</p>
        <small>
          <i class="fas fa-arrow-up trend-up"></i> +@Model.PurchasesThisMonth this month
        </small>
      </div>
    </div>
  </div>

  <div class="col-xl-2 col-lg-4 col-md-6 mb-3">
    <div class="card stat-card card-gradient-dark h-100">
      <div class="card-body text-center">
        <i class="fas fa-users stat-icon mb-3"></i>
        <h2 class="stat-value">@Model.ActiveVendorsCount</h2>
        <p class="stat-label mb-2">Active Vendors</p>
        <small>
          <i class="fas fa-handshake trend-neutral"></i> Supplier network
        </small>
      </div>
    </div>
  </div>
</div>

<!-- Secondary Statistics Row -->
<div class="row mb-4">
  <div class="col-lg-3 col-md-6 mb-3">
    <div class="card h-100">
      <div class="card-header bg-transparent">
        <h6 class="mb-0"><i class="fas fa-chart-pie text-primary"></i> Inventory Health</h6>
      </div>
      <div class="card-body">
        <div class="row text-center">
          <div class="col-6">
            <div class="mb-3">
              <h5 class="text-success mb-1">@Model.ItemsInStock.ToString("N0")</h5>
              <small class="text-muted">In Stock</small>
            </div>
          </div>
          <div class="col-6">
            <div class="mb-3">
              <h5 class="text-danger mb-1">@Model.ItemsLowStock</h5>
              <small class="text-muted">Low Stock</small>
            </div>
          </div>
          <div class="col-6">
            <div class="mb-3">
              <h5 class="text-warning mb-1">@Model.ItemsNoStock</h5>
              <small class="text-muted">No Stock</small>
            </div>
          </div>
          <div class="col-6">
            <div class="mb-3">
              <h5 class="text-info mb-1">@Model.ItemsOverstocked</h5>
              <small class="text-muted">Overstocked</small>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>

  <div class="col-lg-3 col-md-6 mb-3">
    <div class="card h-100">
      <div class="card-header bg-transparent">
        <h6 class="mb-0"><i class="fas fa-layer-group text-info"></i> BOM Statistics</h6>
      </div>
      <div class="card-body">
        <div class="row text-center">
          <div class="col-12 mb-3">
            <h5 class="text-primary mb-1">$@Model.TotalBomValue.ToString("N0")</h5>
            <small class="text-muted">Total BOM Value</small>
          </div>
          <div class="col-6">
            <h6 class="text-success mb-1">@Model.CompleteBoms</h6>
            <small class="text-muted">Complete BOMs</small>
          </div>
          <div class="col-6">
            <h6 class="text-warning mb-1">@Model.IncompleteBoms</h6>
            <small class="text-muted">Incomplete BOMs</small>
          </div>
          <div class="col-12 mt-2">
            <h6 class="text-info mb-1">@Model.TotalBomItems.ToString("N0")</h6>
            <small class="text-muted">Total BOM Items</small>
          </div>
        </div>
      </div>
    </div>
  </div>

  <div class="col-lg-3 col-md-6 mb-3">
    <div class="card h-100">
      <div class="card-header bg-transparent">
        <h6 class="mb-0"><i class="fas fa-chart-line text-success"></i> Purchase Insights</h6>
      </div>
      <div class="card-body">
        <div class="row text-center">
          <div class="col-12 mb-3">
            <h5 class="text-success mb-1">$@Model.AveragePurchaseValue.ToString("N0")</h5>
            <small class="text-muted">Avg Purchase Value</small>
          </div>
          <div class="col-6">
            <h6 class="text-primary mb-1">$@Model.CurrentMonthPurchases.ToString("N0")</h6>
            <small class="text-muted">This Month</small>
          </div>
          <div class="col-6">
            <h6 class="text-info mb-1">$@Model.LastMonthPurchases.ToString("N0")</h6>
            <small class="text-muted">Last Month</small>
          </div>
          <div class="col-12 mt-2">
            <h6 class="text-warning mb-1">@Model.PurchasesWithDocuments</h6>
            <small class="text-muted">With Documents</small>
          </div>
        </div>
      </div>
    </div>
  </div>

  <div class="col-lg-3 col-md-6 mb-3">
    <div class="card h-100">
      <div class="card-header bg-transparent">
        <h6 class="mb-0"><i class="fas fa-file-alt text-warning"></i> Documentation</h6>
      </div>
      <div class="card-body">
        <div class="row text-center">
          <div class="col-6 mb-3">
            <h5 class="text-primary mb-1">@Model.TotalItemDocuments.ToString("N0")</h5>
            <small class="text-muted">Item Documents</small>
          </div>
          <div class="col-6 mb-3">
            <h5 class="text-success mb-1">@Model.TotalPurchaseDocuments.ToString("N0")</h5>
            <small class="text-muted">Purchase Docs</small>
          </div>
          <div class="col-6">
            <h6 class="text-info mb-1">@Model.ItemsWithImagesPercentage.ToString("F0")%</h6>
            <small class="text-muted">Items w/ Images</small>
          </div>
          <div class="col-6">
            <h6 class="text-warning mb-1">@Model.ItemsWithDocumentsPercentage.ToString("F0")%</h6>
            <small class="text-muted">Items w/ Docs</small>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>

<!-- Action Cards and Alerts -->
<div class="row mb-4">
  <div class="col-lg-6 mb-3">
    <div class="card border-warning h-100">
      <div class="card-header bg-warning text-dark">
        <h5 class="mb-0"><i class="fas fa-exclamation-triangle"></i> Low Stock Alerts</h5>
      </div>
      <div class="card-body">
        @if (Model.LowStockItems.Any())

        {
          <div class="table-responsive">
            <table class="table table-sm mb-0">
              <thead>
                <tr>
                  <th>Part Number</th>
                  <th>Description</th>
                  <th>Current</th>
                  <th>Min</th>
                  <th>Action</th>
                </tr>
              </thead>
              <tbody>
                @foreach (var item in Model.LowStockItems.Take(5))

                {
                  <tr>
                    <td><strong>@item.PartNumber</strong></td>
                    <td>@item.Description.Substring(0, Math.Min(item.Description.Length, 30))@(item.Description.Length > 30 ? "..." : "")</td>
                    <td>
                      <span class="badge bg-@(item.CurrentStock == 0 ? "danger" : "warning")">@item.CurrentStock</span>
                    </td>
                    <td>@item.MinimumStock</td>
                    <td>
                      <a href="/Purchases/Create?itemId=@item.Id" class="btn btn-sm btn-outline-primary">Reorder</a>
                    </td>
                  </tr>
                }
              </tbody>
            </table>
          </div>
          <div class="mt-3">
            <a href="/Items?filter=lowstock" class="btn btn-warning">View All Low Stock Items</a>
          </div>
        }

        else

        {
          <div class="text-center py-4">
            <i class="fas fa-check-circle fa-3x text-success mb-3"></i>
            <p class="text-muted">All items are at or above minimum stock levels!</p>
          </div>
        }
      </div>
    </div>
  </div>

  <div class="col-lg-6 mb-3">
    <div class="card h-100">
      <div class="card-header bg-transparent">
        <h5 class="mb-0"><i class="fas fa-chart-line text-primary"></i> Quick Actions</h5>
      </div>
      <div class="card-body">
        <div class="row">
          <div class="col-md-6 mb-3">
            <a href="/Items/Create" class="btn btn-primary w-100">
              <i class="fas fa-plus"></i> Add New Item
            </a>
          </div>
          <div class="col-md-6 mb-3">
            <a href="/Purchases/Create" class="btn btn-success w-100">
              <i class="fas fa-shopping-cart"></i> Record Purchase
            </a>
          </div>
          <div class="col-md-6 mb-3">
            <a href="/Boms/Create" class="btn btn-info w-100">
              <i class="fas fa-list"></i> Create New BOM
            </a>
          </div>
          <div class="col-md-6 mb-3">
            <a href="/Items" class="btn btn-outline-secondary w-100">
              <i class="fas fa-search"></i> Browse All Items
            </a>
          </div>
          <div class="col-12">
            <hr>
            <h6 class="text-muted mb-3">Recent Activity</h6>
            @if (Model.RecentActivities.Any())

            {
              <ul class="list-unstyled">
                @foreach (var activity in Model.RecentActivities.Take(3))

                {
                  <li class="mb-2">
                    <i class="@activity.Icon @activity.Color"></i>
                    <small class="ms-2">@activity.Description - @activity.Timestamp.ToString("MMM dd, HH:mm")</small>
                  </li>
                }
              </ul>
            }

            else

            {
              <p class="text-muted small">No recent activity to display.</p>
            }
          </div>
        </div>
      </div>
    </div>
  </div>
</div>

<!-- Performance Metrics -->
<div class="row mb-4">
  <div class="col-12">
    <div class="card">
      <div class="card-header bg-transparent">
        <h5 class="mb-0"><i class="fas fa-tachometer-alt text-success"></i> Performance Metrics</h5>
      </div>
      <div class="card-body">
        <div class="row">
          <div class="col-lg-2 col-md-4 col-6 text-center mb-3">
            <div class="mini-stat glass-effect">
              <h6 class="text-primary mb-1">@Model.InventoryAccuracy.ToString("F1")%</h6>
              <small class="text-muted">Inventory Accuracy</small>
            </div>
          </div>
          <div class="col-lg-2 col-md-4 col-6 text-center mb-3">
            <div class="mini-stat glass-effect">
              <h6 class="text-success mb-1">@Model.AverageTurnTime.ToString("F1") days</h6>
              <small class="text-muted">Avg Turn Time</small>
            </div>
          </div>
          <div class="col-lg-2 col-md-4 col-6 text-center mb-3">
            <div class="mini-stat glass-effect">
              <h6 class="text-info mb-1">@Math.Abs(Model.MonthlyGrowth).ToString("F1")%</h6>
              <small class="text-muted">Monthly Growth</small>
            </div>
          </div>
          <div class="col-lg-2 col-md-4 col-6 text-center mb-3">
            <div class="mini-stat glass-effect">
              <h6 class="text-warning mb-1">$@Model.AverageCostPerBom.ToString("N0")</h6>
              <small class="text-muted">Cost per BOM</small>
            </div>
          </div>
          <div class="col-lg-2 col-md-4 col-6 text-center mb-3">
            <div class="mini-stat glass-effect">
              <h6 class="text-danger mb-1">@Model.CriticalStockPercentage.ToString("F1")%</h6>
              <small class="text-muted">Critical Stock</small>
            </div>
          </div>
          <div class="col-lg-2 col-md-4 col-6 text-center mb-3">
            <div class="mini-stat glass-effect">
              <h6 class="text-secondary mb-1">@Model.ItemsWithDocumentsPercentage.ToString("F0")%</h6>
              <small class="text-muted">Documentation</small>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>

<style>
  .stat-card {
    transition: transform 0.2s, box-shadow 0.2s;
    border: none;
    border-radius: 12px;
    overflow: hidden;
  }

    .stat-card:hover {
      transform: translateY(-5px);
      box-shadow: 0 8px 25px rgba(0,0,0,0.15);
      cursor: pointer;
    }

  .stat-icon {
    font-size: 2.5rem;
    opacity: 0.8;
  }

  .stat-value {
    font-size: 2.2rem;
    font-weight: 700;
    margin: 0;
  }

  .stat-label {
    font-size: 0.9rem;
    text-transform: uppercase;
    letter-spacing: 0.5px;
    opacity: 0.8;
  }

  .card-gradient-primary {
    background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
    color: white;
  }

  .card-gradient-success {
    background: linear-gradient(135deg, #56ab2f 0%, #a8e6cf 100%);
    color: white;
  }

  .card-gradient-warning {
    background: linear-gradient(135deg, #f093fb 0%, #f5576c 100%);
    color: white;
  }

  .card-gradient-info {
    background: linear-gradient(135deg, #4facfe 0%, #00f2fe 100%);
    color: white;
  }

  .card-gradient-secondary {
    background: linear-gradient(135deg, #a8edea 0%, #fed6e3 100%);
    color: #333;
  }

  .card-gradient-dark {
    background: linear-gradient(135deg, #232526 0%, #414345 100%);
    color: white;
  }

  .trend-up {
    color: #28a745;
  }

  .trend-down {
    color: #dc3545;
  }

  .trend-neutral {
    color: #6c757d;
  }

  .mini-stat {
    padding: 1rem;
    border-radius: 8px;
    background: rgba(255,255,255,0.1);
    backdrop-filter: blur(10px);
    margin-bottom: 0.5rem;
    border: 1px solid rgba(0,0,0,0.1);
  }

  .glass-effect {
    background: rgba(255, 255, 255, 0.1);
    backdrop-filter: blur(10px);
    border: 1px solid rgba(255, 255, 255, 0.2);
  }
</style>

<script>
  // Simulate real-time data updates
  function updateStatistics() {
    const statCards = document.querySelectorAll('.stat-card');
    statCards.forEach((card, index) => {
      setTimeout(() => {
        card.style.transform = 'scale(1.05)';
        setTimeout(() => {
          card.style.transform = 'scale(1)';
        }, 150);
      }, index * 100);
    });
  }

  // Add hover effects and interactions
  document.addEventListener('DOMContentLoaded', function () {
    // Animate numbers on page load
    setTimeout(updateStatistics, 500);

    // Add click handlers for stat cards to navigate to relevant pages
    document.querySelector('.card-gradient-primary')?.addEventListener('click', () => window.location.href = '/Items');
    document.querySelector('.card-gradient-success')?.addEventListener('click', () => console.log('Navigate to financial reports'));
    document.querySelector('.card-gradient-warning')?.addEventListener('click', () => window.location.href = '/Items?filter=lowstock');
    document.querySelector('.card-gradient-info')?.addEventListener('click', () => window.location.href = '/Boms');
    document.querySelector('.card-gradient-secondary')?.addEventListener('click', () => window.location.href = '/Purchases');
    document.querySelector('.card-gradient-dark')?.addEventListener('click', () => window.location.href = '/Vendors'); // FIX: Add this line
  });

  // Refresh data every 60 seconds
  setInterval(() => {
    console.log('Dashboard refresh interval triggered');
  }, 60000);
</script>