@model InventorySystem.Models.Bom
@{
    ViewData["Title"] = "BOM Details";
    var totalCost = ViewBag.TotalCost as decimal? ?? 0;
}

<div class="d-flex justify-content-between align-items-center mb-4">
    <h1><i class="fas fa-list"></i> @Model.Name</h1>
    <div class="btn-group">
        <a href="/Boms/AddItem?bomId=@Model.Id" class="btn btn-success">
            <i class="fas fa-plus"></i> Add Item
        </a>
        <a href="/Boms/Create?parentBomId=@Model.Id" class="btn btn-info">
            <i class="fas fa-layer-group"></i> Add Sub-Assembly
        </a>
        <a href="/Boms/CostReport/@Model.Id" class="btn btn-warning">
            <i class="fas fa-dollar-sign"></i> Cost Report
        </a>
    </div>
</div>

<div class="row">
    <div class="col-md-12">
        <div class="card mb-4">
            <div class="card-header">
                <h5>BOM Information</h5>
            </div>
            <div class="card-body">
                <dl class="row">
                    <dt class="col-sm-2">Description:</dt>
                    <dd class="col-sm-4">@Model.Description</dd>
                    
                    <dt class="col-sm-2">Assembly P/N:</dt>
                    <dd class="col-sm-4">@Model.AssemblyPartNumber</dd>
                    
                    <dt class="col-sm-2">Version:</dt>
                    <dd class="col-sm-4">@Model.Version</dd>
                    
                    <dt class="col-sm-2">Total Cost:</dt>
                    <dd class="col-sm-4"><strong class="text-success">$@totalCost.ToString("F2")</strong></dd>
                    
                    <dt class="col-sm-2">Created:</dt>
                    <dd class="col-sm-4">@Model.CreatedDate.ToString("MM/dd/yyyy")</dd>
                    
                    <dt class="col-sm-2">Modified:</dt>
                    <dd class="col-sm-4">@Model.ModifiedDate.ToString("MM/dd/yyyy")</dd>
                </dl>
            </div>
        </div>
        
        @if (Model.BomItems.Any())
        {
            <div class="card mb-4">
                <div class="card-header">
                    <h5><i class="fas fa-cogs"></i> Components (@Model.BomItems.Count)</h5>
                </div>
                <div class="card-body">
                    <div class="table-responsive">
                        <table class="table table-sm">
                            <thead>
                                <tr>
                                    <th>Part Number</th>
                                    <th>Description</th>
                                    <th>Qty</th>
                                    <th>Unit Cost</th>
                                    <th>Extended Cost</th>
                                    <th>Ref Des</th>
                                    <th>Actions</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var bomItem in Model.BomItems)
                                {
                                    <tr>
                                        <td><a href="/Items/Details/@bomItem.Item.Id">@bomItem.Item.PartNumber</a></td>
                                        <td>@bomItem.Item.Description</td>
                                        <td>@bomItem.Quantity</td>
                                        <td>$@bomItem.UnitCost.ToString("F2")</td>
                                        <td>$@bomItem.ExtendedCost.ToString("F2")</td>
                                        <td>@bomItem.ReferenceDesignator</td>
                                        <td>
                                            <form asp-controller="Boms" asp-action="RemoveItem" method="post" style="display:inline;">
                                                <input type="hidden" name="bomItemId" value="@bomItem.Id" />
                                                <input type="hidden" name="bomId" value="@Model.Id" />
                                                <button type="submit" class="btn btn-sm btn-outline-danger" onclick="return confirm('Remove this item from the BOM?')" title="Remove Item">
                                                    <i class="fas fa-trash"></i>
                                                </button>
                                            </form>
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        }
        else
        {
            <div class="card mb-4">
                <div class="card-body text-center">
                    <i class="fas fa-cogs fa-3x text-muted mb-3"></i>
                    <h5 class="text-muted">No Components Added</h5>
                    <p class="text-muted">Start building your BOM by adding components.</p>
                    <a href="/Boms/AddItem?bomId=@Model.Id" class="btn btn-success">
                        <i class="fas fa-plus"></i> Add First Component
                    </a>
                </div>
            </div>
        }
        
        @if (Model.SubAssemblies.Any())
        {
            <div class="card mb-4">
                <div class="card-header">
                    <h5><i class="fas fa-layer-group"></i> Sub-Assemblies (@Model.SubAssemblies.Count)</h5>
                </div>
                <div class="card-body">
                    <div class="table-responsive">
                        <table class="table table-sm">
                            <thead>
                                <tr>
                                    <th>Sub-Assembly Name</th>
                                    <th>Assembly P/N</th>
                                    <th>Version</th>
                                    <th>Components</th>
                                    <th>Actions</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var subAssembly in Model.SubAssemblies)
                                {
                                    <tr>
                                        <td><a href="/Boms/Details/@subAssembly.Id">@subAssembly.Name</a></td>
                                        <td>@subAssembly.AssemblyPartNumber</td>
                                        <td>@subAssembly.Version</td>
                                        <td><span class="badge bg-info">@subAssembly.BomItems.Count</span></td>
                                        <td>
                                            <div class="btn-group btn-group-sm">
                                                <a href="/Boms/Details/@subAssembly.Id" class="btn btn-outline-primary" title="View Details">
                                                    <i class="fas fa-eye"></i>
                                                </a>
                                                <a href="/Boms/CostReport/@subAssembly.Id" class="btn btn-outline-success" title="Cost Report">
                                                    <i class="fas fa-dollar-sign"></i>
                                                </a>
                                            </div>
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        }
    </div>
</div>
<!-- Quick Material Check Section -->
<div class="card mt-4">
  <div class="card-header d-flex justify-content-between align-items-center">
    <h5><i class="fas fa-search"></i> Material Availability</h5>
    <div class="btn-group">
      <a href="/Boms/QuickMaterialCheck/@Model.Id" class="btn btn-outline-primary">
        <i class="fas fa-search"></i> Quick Check
      </a>
      <button type="button" class="btn btn-info" id="checkAvailabilityBtn">
        <i class="fas fa-sync"></i> Check Now
      </button>
    </div>
  </div>
  <div class="card-body">
    <div class="row">
      <div class="col-md-6">
        <label for="quickCheckQuantity" class="form-label">Quantity to Check:</label>
        <input type="number" id="quickCheckQuantity" class="form-control" value="1" min="1" max="100" />
      </div>
      <div class="col-md-6">
        <div id="quickCheckResults" style="display: none;">
          <div id="checkStatus" class="alert" role="alert">
            <div id="statusMessage"></div>
          </div>
        </div>
      </div>
    </div>

    <div id="shortagePreview" style="display: none;" class="mt-3">
      <h6>Material Issues:</h6>
      <div id="shortageList"></div>
      <div class="mt-2">
        <a href="#" id="viewFullReport" class="btn btn-sm btn-warning">
          <i class="fas fa-clipboard-list"></i> View Full Report
        </a>
      </div>
    </div>
  </div>
</div>

<div class="mt-3">
    <a href="/Boms" class="btn btn-secondary">Back to BOMs</a>
    <a href="/Boms/Edit/@Model.Id" class="btn btn-outline-primary">Edit BOM</a>
</div>


<script>
  document.addEventListener('DOMContentLoaded', function() {
      const checkBtn = document.getElementById('checkAvailabilityBtn');
      const quantityInput = document.getElementById('quickCheckQuantity');
      const resultsDiv = document.getElementById('quickCheckResults');
      const statusDiv = document.getElementById('checkStatus');
      const statusMessage = document.getElementById('statusMessage');
      const shortagePreview = document.getElementById('shortagePreview');
      const shortageList = document.getElementById('shortageList');
      const viewReportLink = document.getElementById('viewFullReport');

      checkBtn.addEventListener('click', function() {
          const quantity = parseInt(quantityInput.value) || 1;
          checkMaterialAvailability(quantity);
      });

      quantityInput.addEventListener('keypress', function(e) {
          if (e.key === 'Enter') {
              checkBtn.click();
          }
      });

      function checkMaterialAvailability(quantity) {
          checkBtn.disabled = true;
          checkBtn.innerHTML = '<i class="fas fa-spinner fa-spin"></i> Checking...';

          fetch(`/Boms/GetQuickMaterialStatus?bomId=@Model.Id&quantity=${quantity}`)
              .then(response => response.json())
              .then(data => {
                  if (data.success) {
                      displayResults(data, quantity);
                  } else {
                      showError('Error checking availability: ' + data.error);
                  }
              })
              .catch(error => {
                  showError('Network error: ' + error.message);
              })
              .finally(() => {
                  checkBtn.disabled = false;
                  checkBtn.innerHTML = '<i class="fas fa-sync"></i> Check Now';
              });
      }

      function displayResults(data, quantity) {
          resultsDiv.style.display = 'block';

          if (data.canBuild) {
              statusDiv.className = 'alert alert-success';
              statusMessage.innerHTML = `
                  <i class="fas fa-check-circle"></i>
                  <strong>Ready to Build!</strong> All materials available for ${quantity} units.
                  <br><small>Material cost: ${data.materialCost.toFixed(2)}</small>
              `;
              shortagePreview.style.display = 'none';
          } else {
              statusDiv.className = 'alert alert-warning';
              statusMessage.innerHTML = `
                  <i class="fas fa-exclamation-triangle"></i>
                  <strong>Cannot Build</strong> - ${data.shortageCount} items short
                  <br><small>Shortage value: $${data.shortageValue.toFixed(2)}</small>
              `;

              if (data.shortages && data.shortages.length > 0) {
                  showShortagePreview(data.shortages, quantity);
              }
          }
      }

      function showShortagePreview(shortages, quantity) {
          shortagePreview.style.display = 'block';

          let shortageHtml = '<ul class="list-unstyled">';
          shortages.forEach(shortage => {
              shortageHtml += `
                  <li class="mb-1">
                      <span class="badge bg-${shortage.isCritical ? 'danger' : 'warning'}">${shortage.partNumber}</span>
                      Need ${shortage.requiredQuantity}, have ${shortage.availableQuantity}
                      <small class="text-muted">(short ${shortage.shortageQuantity})</small>
                  </li>
              `;
          });
          shortageHtml += '</ul>';

          shortageList.innerHTML = shortageHtml;
          viewReportLink.href = `/Production/MaterialShortageReport?bomId=@Model.Id&quantity=${quantity}`;
      }

      function showError(message) {
          resultsDiv.style.display = 'block';
          statusDiv.className = 'alert alert-danger';
          statusMessage.innerHTML = `<i class="fas fa-exclamation-circle"></i> ${message}`;
          shortagePreview.style.display = 'none';
      }

      // Auto-check on page load with quantity 1
      checkMaterialAvailability(1);
  });
</script>